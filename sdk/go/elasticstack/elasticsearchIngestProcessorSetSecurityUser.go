// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Sets user-related details (such as `username`, `roles`, `email`, `fullName`, `metadata`, `apiKey`, `realm` and `authenticationTyp`e) from the current authenticated user to the current document by pre-processing the ingest. The `apiKey` property exists only if the user authenticates with an API key. It is an object containing the id, name and metadata (if it exists and is non-empty) fields of the API key. The realm property is also an object with two fields, name and type. When using API key authentication, the realm property refers to the realm from which the API key is created. The `authenticationType property` is a string that can take value from `REALM`, `API_KEY`, `TOKEN` and `ANONYMOUS`.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest-node-set-security-user-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		user, err := elasticstack.ElasticsearchIngestProcessorSetSecurityUser(ctx, &ElasticsearchIngestProcessorSetSecurityUserArgs{
// 			Field: "user",
// 			Properties: []string{
// 				"username",
// 				"realm",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticsearchIngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				pulumi.String(user.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func ElasticsearchIngestProcessorSetSecurityUser(ctx *pulumi.Context, args *ElasticsearchIngestProcessorSetSecurityUserArgs, opts ...pulumi.InvokeOption) (*ElasticsearchIngestProcessorSetSecurityUserResult, error) {
	var rv ElasticsearchIngestProcessorSetSecurityUserResult
	err := ctx.Invoke("elasticstack:index/elasticsearchIngestProcessorSetSecurityUser:ElasticsearchIngestProcessorSetSecurityUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticsearchIngestProcessorSetSecurityUser.
type ElasticsearchIngestProcessorSetSecurityUserArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to store the user information into.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties []string `pulumi:"properties"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by ElasticsearchIngestProcessorSetSecurityUser.
type ElasticsearchIngestProcessorSetSecurityUserResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to store the user information into.
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties []string `pulumi:"properties"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func ElasticsearchIngestProcessorSetSecurityUserOutput(ctx *pulumi.Context, args ElasticsearchIngestProcessorSetSecurityUserOutputArgs, opts ...pulumi.InvokeOption) ElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticsearchIngestProcessorSetSecurityUserResult, error) {
			args := v.(ElasticsearchIngestProcessorSetSecurityUserArgs)
			r, err := ElasticsearchIngestProcessorSetSecurityUser(ctx, &args, opts...)
			return *r, err
		}).(ElasticsearchIngestProcessorSetSecurityUserResultOutput)
}

// A collection of arguments for invoking ElasticsearchIngestProcessorSetSecurityUser.
type ElasticsearchIngestProcessorSetSecurityUserOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field to store the user information into.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties pulumi.StringArrayInput `pulumi:"properties"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ElasticsearchIngestProcessorSetSecurityUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorSetSecurityUserArgs)(nil)).Elem()
}

// A collection of values returned by ElasticsearchIngestProcessorSetSecurityUser.
type ElasticsearchIngestProcessorSetSecurityUserResultOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestProcessorSetSecurityUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorSetSecurityUserResult)(nil)).Elem()
}

func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) ToElasticsearchIngestProcessorSetSecurityUserResultOutput() ElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return o
}

func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) ToElasticsearchIngestProcessorSetSecurityUserResultOutputWithContext(ctx context.Context) ElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return o
}

// Description of the processor.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field to store the user information into.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Controls what user related properties are added to the `field`.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Properties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) []string { return v.Properties }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o ElasticsearchIngestProcessorSetSecurityUserResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchIngestProcessorSetSecurityUserResultOutput{})
}
