// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Joins each element of an array into a single string using a separator character between each element. Throws an error when the field is not an array.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/join-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		join, err := elasticstack.ElasticsearchIngestProcessorJoin(ctx, &ElasticsearchIngestProcessorJoinArgs{
// 			Field:     "joined_array_field",
// 			Separator: "-",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticsearchIngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				pulumi.String(join.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func ElasticsearchIngestProcessorJoin(ctx *pulumi.Context, args *ElasticsearchIngestProcessorJoinArgs, opts ...pulumi.InvokeOption) (*ElasticsearchIngestProcessorJoinResult, error) {
	var rv ElasticsearchIngestProcessorJoinResult
	err := ctx.Invoke("elasticstack:index/elasticsearchIngestProcessorJoin:ElasticsearchIngestProcessorJoin", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticsearchIngestProcessorJoin.
type ElasticsearchIngestProcessorJoinArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing array values to join.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// The separator character.
	Separator string `pulumi:"separator"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by ElasticsearchIngestProcessorJoin.
type ElasticsearchIngestProcessorJoinResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing array values to join.
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// The separator character.
	Separator string `pulumi:"separator"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField *string `pulumi:"targetField"`
}

func ElasticsearchIngestProcessorJoinOutput(ctx *pulumi.Context, args ElasticsearchIngestProcessorJoinOutputArgs, opts ...pulumi.InvokeOption) ElasticsearchIngestProcessorJoinResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticsearchIngestProcessorJoinResult, error) {
			args := v.(ElasticsearchIngestProcessorJoinArgs)
			r, err := ElasticsearchIngestProcessorJoin(ctx, &args, opts...)
			return *r, err
		}).(ElasticsearchIngestProcessorJoinResultOutput)
}

// A collection of arguments for invoking ElasticsearchIngestProcessorJoin.
type ElasticsearchIngestProcessorJoinOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Field containing array values to join.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// The separator character.
	Separator pulumi.StringInput `pulumi:"separator"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (ElasticsearchIngestProcessorJoinOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorJoinArgs)(nil)).Elem()
}

// A collection of values returned by ElasticsearchIngestProcessorJoin.
type ElasticsearchIngestProcessorJoinResultOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestProcessorJoinResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorJoinResult)(nil)).Elem()
}

func (o ElasticsearchIngestProcessorJoinResultOutput) ToElasticsearchIngestProcessorJoinResultOutput() ElasticsearchIngestProcessorJoinResultOutput {
	return o
}

func (o ElasticsearchIngestProcessorJoinResultOutput) ToElasticsearchIngestProcessorJoinResultOutputWithContext(ctx context.Context) ElasticsearchIngestProcessorJoinResultOutput {
	return o
}

// Description of the processor.
func (o ElasticsearchIngestProcessorJoinResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Field containing array values to join.
func (o ElasticsearchIngestProcessorJoinResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o ElasticsearchIngestProcessorJoinResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticsearchIngestProcessorJoinResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticsearchIngestProcessorJoinResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticsearchIngestProcessorJoinResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticsearchIngestProcessorJoinResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// The separator character.
func (o ElasticsearchIngestProcessorJoinResultOutput) Separator() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) string { return v.Separator }).(pulumi.StringOutput)
}

// Identifier for the processor.
func (o ElasticsearchIngestProcessorJoinResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The field to assign the converted value to, by default `field` is updated in-place.
func (o ElasticsearchIngestProcessorJoinResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorJoinResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchIngestProcessorJoinResultOutput{})
}
