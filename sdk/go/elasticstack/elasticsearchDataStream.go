// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages data streams. This resource can create, delete and show the information about the created data stream. See: https://www.elastic.co/guide/en/elasticsearch/reference/current/data-stream-apis.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"encoding/json"
//
// 	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		myIlm, err := elasticstack.NewElasticsearchIndexLifecycle(ctx, "myIlm", &elasticstack.ElasticsearchIndexLifecycleArgs{
// 			Hot: &ElasticsearchIndexLifecycleHotArgs{
// 				MinAge: pulumi.String("1h"),
// 				SetPriority: &ElasticsearchIndexLifecycleHotSetPriorityArgs{
// 					Priority: pulumi.Int(10),
// 				},
// 				Rollover: &ElasticsearchIndexLifecycleHotRolloverArgs{
// 					MaxAge: pulumi.String("1d"),
// 				},
// 				Readonly: nil,
// 			},
// 			Delete: &ElasticsearchIndexLifecycleDeleteArgs{
// 				MinAge: pulumi.String("2d"),
// 				Delete: nil,
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		myDataStreamTemplate, err := elasticstack.NewElasticsearchIndexTemplate(ctx, "myDataStreamTemplate", &elasticstack.ElasticsearchIndexTemplateArgs{
// 			IndexPatterns: pulumi.StringArray{
// 				pulumi.String("my-stream*"),
// 			},
// 			Template: &ElasticsearchIndexTemplateTemplateArgs{
// 				Settings: myIlm.Name.ApplyT(func(name string) (pulumi.String, error) {
// 					var _zero pulumi.String
// 					tmpJSON0, err := json.Marshal(map[string]interface{}{
// 						"lifecycle.name": name,
// 					})
// 					if err != nil {
// 						return _zero, err
// 					}
// 					json0 := string(tmpJSON0)
// 					return json0, nil
// 				}).(pulumi.StringOutput),
// 			},
// 			DataStream: nil,
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewElasticsearchDataStream(ctx, "myDataStream", nil, pulumi.DependsOn([]pulumi.Resource{
// 			myDataStreamTemplate,
// 		}))
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
//
// ## Import
//
// ```sh
//  $ pulumi import elasticstack:index/elasticsearchDataStream:ElasticsearchDataStream my_data_stream <cluster_uuid>/<data_stream_name>
// ```
type ElasticsearchDataStream struct {
	pulumi.CustomResourceState

	// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
	ElasticsearchConnection ElasticsearchDataStreamElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// Current generation for the data stream.
	Generation pulumi.IntOutput `pulumi:"generation"`
	// If `true`, the data stream is hidden.
	Hidden pulumi.BoolOutput `pulumi:"hidden"`
	// Internal identifier of the resource
	Id pulumi.StringOutput `pulumi:"id"`
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy pulumi.StringOutput `pulumi:"ilmPolicy"`
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices ElasticsearchDataStreamIndexArrayOutput `pulumi:"indices"`
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// Name of the data stream to create.
	Name pulumi.StringOutput `pulumi:"name"`
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated pulumi.BoolOutput `pulumi:"replicated"`
	// Health status of the data stream.
	Status pulumi.StringOutput `pulumi:"status"`
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System pulumi.BoolOutput `pulumi:"system"`
	// Name of the index template used to create the data stream’s backing indices.
	Template pulumi.StringOutput `pulumi:"template"`
	// Contains information about the data stream’s @timestamp field.
	TimestampField pulumi.StringOutput `pulumi:"timestampField"`
}

// NewElasticsearchDataStream registers a new resource with the given unique name, arguments, and options.
func NewElasticsearchDataStream(ctx *pulumi.Context,
	name string, args *ElasticsearchDataStreamArgs, opts ...pulumi.ResourceOption) (*ElasticsearchDataStream, error) {
	if args == nil {
		args = &ElasticsearchDataStreamArgs{}
	}

	var resource ElasticsearchDataStream
	err := ctx.RegisterResource("elasticstack:index/elasticsearchDataStream:ElasticsearchDataStream", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticsearchDataStream gets an existing ElasticsearchDataStream resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticsearchDataStream(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticsearchDataStreamState, opts ...pulumi.ResourceOption) (*ElasticsearchDataStream, error) {
	var resource ElasticsearchDataStream
	err := ctx.ReadResource("elasticstack:index/elasticsearchDataStream:ElasticsearchDataStream", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticsearchDataStream resources.
type elasticsearchDataStreamState struct {
	// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
	ElasticsearchConnection *ElasticsearchDataStreamElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Current generation for the data stream.
	Generation *int `pulumi:"generation"`
	// If `true`, the data stream is hidden.
	Hidden *bool `pulumi:"hidden"`
	// Internal identifier of the resource
	Id *string `pulumi:"id"`
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy *string `pulumi:"ilmPolicy"`
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices []ElasticsearchDataStreamIndex `pulumi:"indices"`
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata *string `pulumi:"metadata"`
	// Name of the data stream to create.
	Name *string `pulumi:"name"`
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated *bool `pulumi:"replicated"`
	// Health status of the data stream.
	Status *string `pulumi:"status"`
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System *bool `pulumi:"system"`
	// Name of the index template used to create the data stream’s backing indices.
	Template *string `pulumi:"template"`
	// Contains information about the data stream’s @timestamp field.
	TimestampField *string `pulumi:"timestampField"`
}

type ElasticsearchDataStreamState struct {
	// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
	ElasticsearchConnection ElasticsearchDataStreamElasticsearchConnectionPtrInput
	// Current generation for the data stream.
	Generation pulumi.IntPtrInput
	// If `true`, the data stream is hidden.
	Hidden pulumi.BoolPtrInput
	// Internal identifier of the resource
	Id pulumi.StringPtrInput
	// Name of the current ILM lifecycle policy in the stream’s matching index template.
	IlmPolicy pulumi.StringPtrInput
	// Array of objects containing information about the data stream’s backing indices. The last item in this array contains information about the stream’s current write index.
	Indices ElasticsearchDataStreamIndexArrayInput
	// Custom metadata for the stream, copied from the _meta object of the stream’s matching index template.
	Metadata pulumi.StringPtrInput
	// Name of the data stream to create.
	Name pulumi.StringPtrInput
	// If `true`, the data stream is created and managed by cross-cluster replication and the local cluster can not write into this data stream or change its mappings.
	Replicated pulumi.BoolPtrInput
	// Health status of the data stream.
	Status pulumi.StringPtrInput
	// If `true`, the data stream is created and managed by an Elastic stack component and cannot be modified through normal user interaction.
	System pulumi.BoolPtrInput
	// Name of the index template used to create the data stream’s backing indices.
	Template pulumi.StringPtrInput
	// Contains information about the data stream’s @timestamp field.
	TimestampField pulumi.StringPtrInput
}

func (ElasticsearchDataStreamState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticsearchDataStreamState)(nil)).Elem()
}

type elasticsearchDataStreamArgs struct {
	// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
	ElasticsearchConnection *ElasticsearchDataStreamElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Name of the data stream to create.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ElasticsearchDataStream resource.
type ElasticsearchDataStreamArgs struct {
	// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
	ElasticsearchConnection ElasticsearchDataStreamElasticsearchConnectionPtrInput
	// Name of the data stream to create.
	Name pulumi.StringPtrInput
}

func (ElasticsearchDataStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticsearchDataStreamArgs)(nil)).Elem()
}

type ElasticsearchDataStreamInput interface {
	pulumi.Input

	ToElasticsearchDataStreamOutput() ElasticsearchDataStreamOutput
	ToElasticsearchDataStreamOutputWithContext(ctx context.Context) ElasticsearchDataStreamOutput
}

func (*ElasticsearchDataStream) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchDataStream)(nil)).Elem()
}

func (i *ElasticsearchDataStream) ToElasticsearchDataStreamOutput() ElasticsearchDataStreamOutput {
	return i.ToElasticsearchDataStreamOutputWithContext(context.Background())
}

func (i *ElasticsearchDataStream) ToElasticsearchDataStreamOutputWithContext(ctx context.Context) ElasticsearchDataStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamOutput)
}

// ElasticsearchDataStreamArrayInput is an input type that accepts ElasticsearchDataStreamArray and ElasticsearchDataStreamArrayOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamArrayInput` via:
//
//          ElasticsearchDataStreamArray{ ElasticsearchDataStreamArgs{...} }
type ElasticsearchDataStreamArrayInput interface {
	pulumi.Input

	ToElasticsearchDataStreamArrayOutput() ElasticsearchDataStreamArrayOutput
	ToElasticsearchDataStreamArrayOutputWithContext(context.Context) ElasticsearchDataStreamArrayOutput
}

type ElasticsearchDataStreamArray []ElasticsearchDataStreamInput

func (ElasticsearchDataStreamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticsearchDataStream)(nil)).Elem()
}

func (i ElasticsearchDataStreamArray) ToElasticsearchDataStreamArrayOutput() ElasticsearchDataStreamArrayOutput {
	return i.ToElasticsearchDataStreamArrayOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamArray) ToElasticsearchDataStreamArrayOutputWithContext(ctx context.Context) ElasticsearchDataStreamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamArrayOutput)
}

// ElasticsearchDataStreamMapInput is an input type that accepts ElasticsearchDataStreamMap and ElasticsearchDataStreamMapOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamMapInput` via:
//
//          ElasticsearchDataStreamMap{ "key": ElasticsearchDataStreamArgs{...} }
type ElasticsearchDataStreamMapInput interface {
	pulumi.Input

	ToElasticsearchDataStreamMapOutput() ElasticsearchDataStreamMapOutput
	ToElasticsearchDataStreamMapOutputWithContext(context.Context) ElasticsearchDataStreamMapOutput
}

type ElasticsearchDataStreamMap map[string]ElasticsearchDataStreamInput

func (ElasticsearchDataStreamMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticsearchDataStream)(nil)).Elem()
}

func (i ElasticsearchDataStreamMap) ToElasticsearchDataStreamMapOutput() ElasticsearchDataStreamMapOutput {
	return i.ToElasticsearchDataStreamMapOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamMap) ToElasticsearchDataStreamMapOutputWithContext(ctx context.Context) ElasticsearchDataStreamMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamMapOutput)
}

type ElasticsearchDataStreamOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchDataStream)(nil)).Elem()
}

func (o ElasticsearchDataStreamOutput) ToElasticsearchDataStreamOutput() ElasticsearchDataStreamOutput {
	return o
}

func (o ElasticsearchDataStreamOutput) ToElasticsearchDataStreamOutputWithContext(ctx context.Context) ElasticsearchDataStreamOutput {
	return o
}

type ElasticsearchDataStreamArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticsearchDataStream)(nil)).Elem()
}

func (o ElasticsearchDataStreamArrayOutput) ToElasticsearchDataStreamArrayOutput() ElasticsearchDataStreamArrayOutput {
	return o
}

func (o ElasticsearchDataStreamArrayOutput) ToElasticsearchDataStreamArrayOutputWithContext(ctx context.Context) ElasticsearchDataStreamArrayOutput {
	return o
}

func (o ElasticsearchDataStreamArrayOutput) Index(i pulumi.IntInput) ElasticsearchDataStreamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticsearchDataStream {
		return vs[0].([]*ElasticsearchDataStream)[vs[1].(int)]
	}).(ElasticsearchDataStreamOutput)
}

type ElasticsearchDataStreamMapOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticsearchDataStream)(nil)).Elem()
}

func (o ElasticsearchDataStreamMapOutput) ToElasticsearchDataStreamMapOutput() ElasticsearchDataStreamMapOutput {
	return o
}

func (o ElasticsearchDataStreamMapOutput) ToElasticsearchDataStreamMapOutputWithContext(ctx context.Context) ElasticsearchDataStreamMapOutput {
	return o
}

func (o ElasticsearchDataStreamMapOutput) MapIndex(k pulumi.StringInput) ElasticsearchDataStreamOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticsearchDataStream {
		return vs[0].(map[string]*ElasticsearchDataStream)[vs[1].(string)]
	}).(ElasticsearchDataStreamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamInput)(nil)).Elem(), &ElasticsearchDataStream{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamArrayInput)(nil)).Elem(), ElasticsearchDataStreamArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamMapInput)(nil)).Elem(), ElasticsearchDataStreamMap{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamMapOutput{})
}
