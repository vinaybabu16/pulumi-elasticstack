// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Computes a hash of the documentâ€™s content. You can use this hash for content fingerprinting.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/fingerprint-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		fingerprint, err := elasticstack.ElasticsearchIngestProcessorFingerprint(ctx, &ElasticsearchIngestProcessorFingerprintArgs{
// 			Fields: []string{
// 				"user",
// 			},
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticsearchIngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				pulumi.String(fingerprint.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func ElasticsearchIngestProcessorFingerprint(ctx *pulumi.Context, args *ElasticsearchIngestProcessorFingerprintArgs, opts ...pulumi.InvokeOption) (*ElasticsearchIngestProcessorFingerprintResult, error) {
	var rv ElasticsearchIngestProcessorFingerprintResult
	err := ctx.Invoke("elasticstack:index/elasticsearchIngestProcessorFingerprint:ElasticsearchIngestProcessorFingerprint", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticsearchIngestProcessorFingerprint.
type ElasticsearchIngestProcessorFingerprintArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Array of fields to include in the fingerprint.
	Fields []string `pulumi:"fields"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true`, the processor ignores any missing `fields`. If all fields are missing, the processor silently exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// The hash method used to compute the fingerprint.
	Method *string `pulumi:"method"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Salt value for the hash function.
	Salt *string `pulumi:"salt"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Output field for the fingerprint.
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by ElasticsearchIngestProcessorFingerprint.
type ElasticsearchIngestProcessorFingerprintResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Array of fields to include in the fingerprint.
	Fields []string `pulumi:"fields"`
	// Internal identifier of the resource
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true`, the processor ignores any missing `fields`. If all fields are missing, the processor silently exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// The hash method used to compute the fingerprint.
	Method *string `pulumi:"method"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Salt value for the hash function.
	Salt *string `pulumi:"salt"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Output field for the fingerprint.
	TargetField *string `pulumi:"targetField"`
}

func ElasticsearchIngestProcessorFingerprintOutput(ctx *pulumi.Context, args ElasticsearchIngestProcessorFingerprintOutputArgs, opts ...pulumi.InvokeOption) ElasticsearchIngestProcessorFingerprintResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticsearchIngestProcessorFingerprintResult, error) {
			args := v.(ElasticsearchIngestProcessorFingerprintArgs)
			r, err := ElasticsearchIngestProcessorFingerprint(ctx, &args, opts...)
			return *r, err
		}).(ElasticsearchIngestProcessorFingerprintResultOutput)
}

// A collection of arguments for invoking ElasticsearchIngestProcessorFingerprint.
type ElasticsearchIngestProcessorFingerprintOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Array of fields to include in the fingerprint.
	Fields pulumi.StringArrayInput `pulumi:"fields"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// If `true`, the processor ignores any missing `fields`. If all fields are missing, the processor silently exits without modifying the document.
	IgnoreMissing pulumi.BoolPtrInput `pulumi:"ignoreMissing"`
	// The hash method used to compute the fingerprint.
	Method pulumi.StringPtrInput `pulumi:"method"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Salt value for the hash function.
	Salt pulumi.StringPtrInput `pulumi:"salt"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Output field for the fingerprint.
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (ElasticsearchIngestProcessorFingerprintOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorFingerprintArgs)(nil)).Elem()
}

// A collection of values returned by ElasticsearchIngestProcessorFingerprint.
type ElasticsearchIngestProcessorFingerprintResultOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestProcessorFingerprintResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorFingerprintResult)(nil)).Elem()
}

func (o ElasticsearchIngestProcessorFingerprintResultOutput) ToElasticsearchIngestProcessorFingerprintResultOutput() ElasticsearchIngestProcessorFingerprintResultOutput {
	return o
}

func (o ElasticsearchIngestProcessorFingerprintResultOutput) ToElasticsearchIngestProcessorFingerprintResultOutputWithContext(ctx context.Context) ElasticsearchIngestProcessorFingerprintResultOutput {
	return o
}

// Description of the processor.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Array of fields to include in the fingerprint.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Fields() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) []string { return v.Fields }).(pulumi.StringArrayOutput)
}

// Internal identifier of the resource
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticsearchIngestProcessorFingerprintResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// If `true`, the processor ignores any missing `fields`. If all fields are missing, the processor silently exits without modifying the document.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) string { return v.Json }).(pulumi.StringOutput)
}

// The hash method used to compute the fingerprint.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Method() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.Method }).(pulumi.StringPtrOutput)
}

// Handle failures for the processor.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Salt value for the hash function.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Salt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.Salt }).(pulumi.StringPtrOutput)
}

// Identifier for the processor.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Output field for the fingerprint.
func (o ElasticsearchIngestProcessorFingerprintResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFingerprintResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchIngestProcessorFingerprintResultOutput{})
}
