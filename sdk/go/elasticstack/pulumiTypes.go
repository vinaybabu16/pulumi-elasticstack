// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ElasticsearchClusterSettingsElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchClusterSettingsElasticsearchConnectionInput is an input type that accepts ElasticsearchClusterSettingsElasticsearchConnectionArgs and ElasticsearchClusterSettingsElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsElasticsearchConnectionInput` via:
//
//          ElasticsearchClusterSettingsElasticsearchConnectionArgs{...}
type ElasticsearchClusterSettingsElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsElasticsearchConnectionOutput() ElasticsearchClusterSettingsElasticsearchConnectionOutput
	ToElasticsearchClusterSettingsElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchClusterSettingsElasticsearchConnectionOutput
}

type ElasticsearchClusterSettingsElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchClusterSettingsElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsElasticsearchConnectionArgs) ToElasticsearchClusterSettingsElasticsearchConnectionOutput() ElasticsearchClusterSettingsElasticsearchConnectionOutput {
	return i.ToElasticsearchClusterSettingsElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsElasticsearchConnectionArgs) ToElasticsearchClusterSettingsElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsElasticsearchConnectionOutput)
}

func (i ElasticsearchClusterSettingsElasticsearchConnectionArgs) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutput() ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsElasticsearchConnectionArgs) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsElasticsearchConnectionOutput).ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchClusterSettingsElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchClusterSettingsElasticsearchConnectionArgs, ElasticsearchClusterSettingsElasticsearchConnectionPtr and ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchClusterSettingsElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchClusterSettingsElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutput() ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput
	ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput
}

type elasticsearchClusterSettingsElasticsearchConnectionPtrType ElasticsearchClusterSettingsElasticsearchConnectionArgs

func ElasticsearchClusterSettingsElasticsearchConnectionPtr(v *ElasticsearchClusterSettingsElasticsearchConnectionArgs) ElasticsearchClusterSettingsElasticsearchConnectionPtrInput {
	return (*elasticsearchClusterSettingsElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchClusterSettingsElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchClusterSettingsElasticsearchConnectionPtrType) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutput() ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchClusterSettingsElasticsearchConnectionPtrType) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput)
}

type ElasticsearchClusterSettingsElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) ToElasticsearchClusterSettingsElasticsearchConnectionOutput() ElasticsearchClusterSettingsElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) ToElasticsearchClusterSettingsElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutput() ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchClusterSettingsElasticsearchConnection) *ElasticsearchClusterSettingsElasticsearchConnection {
		return &v
	}).(ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchClusterSettingsElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutput() ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) ToElasticsearchClusterSettingsElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) Elem() ElasticsearchClusterSettingsElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) ElasticsearchClusterSettingsElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchClusterSettingsElasticsearchConnection
		return ret
	}).(ElasticsearchClusterSettingsElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchClusterSettingsPersistent struct {
	// Defines the setting in the cluster.
	Settings []ElasticsearchClusterSettingsPersistentSetting `pulumi:"settings"`
}

// ElasticsearchClusterSettingsPersistentInput is an input type that accepts ElasticsearchClusterSettingsPersistentArgs and ElasticsearchClusterSettingsPersistentOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsPersistentInput` via:
//
//          ElasticsearchClusterSettingsPersistentArgs{...}
type ElasticsearchClusterSettingsPersistentInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsPersistentOutput() ElasticsearchClusterSettingsPersistentOutput
	ToElasticsearchClusterSettingsPersistentOutputWithContext(context.Context) ElasticsearchClusterSettingsPersistentOutput
}

type ElasticsearchClusterSettingsPersistentArgs struct {
	// Defines the setting in the cluster.
	Settings ElasticsearchClusterSettingsPersistentSettingArrayInput `pulumi:"settings"`
}

func (ElasticsearchClusterSettingsPersistentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsPersistent)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsPersistentArgs) ToElasticsearchClusterSettingsPersistentOutput() ElasticsearchClusterSettingsPersistentOutput {
	return i.ToElasticsearchClusterSettingsPersistentOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsPersistentArgs) ToElasticsearchClusterSettingsPersistentOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsPersistentOutput)
}

func (i ElasticsearchClusterSettingsPersistentArgs) ToElasticsearchClusterSettingsPersistentPtrOutput() ElasticsearchClusterSettingsPersistentPtrOutput {
	return i.ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsPersistentArgs) ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsPersistentOutput).ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(ctx)
}

// ElasticsearchClusterSettingsPersistentPtrInput is an input type that accepts ElasticsearchClusterSettingsPersistentArgs, ElasticsearchClusterSettingsPersistentPtr and ElasticsearchClusterSettingsPersistentPtrOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsPersistentPtrInput` via:
//
//          ElasticsearchClusterSettingsPersistentArgs{...}
//
//  or:
//
//          nil
type ElasticsearchClusterSettingsPersistentPtrInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsPersistentPtrOutput() ElasticsearchClusterSettingsPersistentPtrOutput
	ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(context.Context) ElasticsearchClusterSettingsPersistentPtrOutput
}

type elasticsearchClusterSettingsPersistentPtrType ElasticsearchClusterSettingsPersistentArgs

func ElasticsearchClusterSettingsPersistentPtr(v *ElasticsearchClusterSettingsPersistentArgs) ElasticsearchClusterSettingsPersistentPtrInput {
	return (*elasticsearchClusterSettingsPersistentPtrType)(v)
}

func (*elasticsearchClusterSettingsPersistentPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsPersistent)(nil)).Elem()
}

func (i *elasticsearchClusterSettingsPersistentPtrType) ToElasticsearchClusterSettingsPersistentPtrOutput() ElasticsearchClusterSettingsPersistentPtrOutput {
	return i.ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(context.Background())
}

func (i *elasticsearchClusterSettingsPersistentPtrType) ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsPersistentPtrOutput)
}

type ElasticsearchClusterSettingsPersistentOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsPersistentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsPersistent)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsPersistentOutput) ToElasticsearchClusterSettingsPersistentOutput() ElasticsearchClusterSettingsPersistentOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentOutput) ToElasticsearchClusterSettingsPersistentOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentOutput) ToElasticsearchClusterSettingsPersistentPtrOutput() ElasticsearchClusterSettingsPersistentPtrOutput {
	return o.ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(context.Background())
}

func (o ElasticsearchClusterSettingsPersistentOutput) ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchClusterSettingsPersistent) *ElasticsearchClusterSettingsPersistent {
		return &v
	}).(ElasticsearchClusterSettingsPersistentPtrOutput)
}

// Defines the setting in the cluster.
func (o ElasticsearchClusterSettingsPersistentOutput) Settings() ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsPersistent) []ElasticsearchClusterSettingsPersistentSetting {
		return v.Settings
	}).(ElasticsearchClusterSettingsPersistentSettingArrayOutput)
}

type ElasticsearchClusterSettingsPersistentPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsPersistentPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsPersistent)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsPersistentPtrOutput) ToElasticsearchClusterSettingsPersistentPtrOutput() ElasticsearchClusterSettingsPersistentPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentPtrOutput) ToElasticsearchClusterSettingsPersistentPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentPtrOutput) Elem() ElasticsearchClusterSettingsPersistentOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsPersistent) ElasticsearchClusterSettingsPersistent {
		if v != nil {
			return *v
		}
		var ret ElasticsearchClusterSettingsPersistent
		return ret
	}).(ElasticsearchClusterSettingsPersistentOutput)
}

// Defines the setting in the cluster.
func (o ElasticsearchClusterSettingsPersistentPtrOutput) Settings() ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsPersistent) []ElasticsearchClusterSettingsPersistentSetting {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ElasticsearchClusterSettingsPersistentSettingArrayOutput)
}

type ElasticsearchClusterSettingsPersistentSetting struct {
	Name       string   `pulumi:"name"`
	Value      *string  `pulumi:"value"`
	ValueLists []string `pulumi:"valueLists"`
}

// ElasticsearchClusterSettingsPersistentSettingInput is an input type that accepts ElasticsearchClusterSettingsPersistentSettingArgs and ElasticsearchClusterSettingsPersistentSettingOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsPersistentSettingInput` via:
//
//          ElasticsearchClusterSettingsPersistentSettingArgs{...}
type ElasticsearchClusterSettingsPersistentSettingInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsPersistentSettingOutput() ElasticsearchClusterSettingsPersistentSettingOutput
	ToElasticsearchClusterSettingsPersistentSettingOutputWithContext(context.Context) ElasticsearchClusterSettingsPersistentSettingOutput
}

type ElasticsearchClusterSettingsPersistentSettingArgs struct {
	Name       pulumi.StringInput      `pulumi:"name"`
	Value      pulumi.StringPtrInput   `pulumi:"value"`
	ValueLists pulumi.StringArrayInput `pulumi:"valueLists"`
}

func (ElasticsearchClusterSettingsPersistentSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsPersistentSetting)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsPersistentSettingArgs) ToElasticsearchClusterSettingsPersistentSettingOutput() ElasticsearchClusterSettingsPersistentSettingOutput {
	return i.ToElasticsearchClusterSettingsPersistentSettingOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsPersistentSettingArgs) ToElasticsearchClusterSettingsPersistentSettingOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsPersistentSettingOutput)
}

// ElasticsearchClusterSettingsPersistentSettingArrayInput is an input type that accepts ElasticsearchClusterSettingsPersistentSettingArray and ElasticsearchClusterSettingsPersistentSettingArrayOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsPersistentSettingArrayInput` via:
//
//          ElasticsearchClusterSettingsPersistentSettingArray{ ElasticsearchClusterSettingsPersistentSettingArgs{...} }
type ElasticsearchClusterSettingsPersistentSettingArrayInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsPersistentSettingArrayOutput() ElasticsearchClusterSettingsPersistentSettingArrayOutput
	ToElasticsearchClusterSettingsPersistentSettingArrayOutputWithContext(context.Context) ElasticsearchClusterSettingsPersistentSettingArrayOutput
}

type ElasticsearchClusterSettingsPersistentSettingArray []ElasticsearchClusterSettingsPersistentSettingInput

func (ElasticsearchClusterSettingsPersistentSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchClusterSettingsPersistentSetting)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsPersistentSettingArray) ToElasticsearchClusterSettingsPersistentSettingArrayOutput() ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return i.ToElasticsearchClusterSettingsPersistentSettingArrayOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsPersistentSettingArray) ToElasticsearchClusterSettingsPersistentSettingArrayOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsPersistentSettingArrayOutput)
}

type ElasticsearchClusterSettingsPersistentSettingOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsPersistentSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsPersistentSetting)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsPersistentSettingOutput) ToElasticsearchClusterSettingsPersistentSettingOutput() ElasticsearchClusterSettingsPersistentSettingOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentSettingOutput) ToElasticsearchClusterSettingsPersistentSettingOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentSettingOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsPersistentSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElasticsearchClusterSettingsPersistentSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsPersistentSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchClusterSettingsPersistentSettingOutput) ValueLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsPersistentSetting) []string { return v.ValueLists }).(pulumi.StringArrayOutput)
}

type ElasticsearchClusterSettingsPersistentSettingArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsPersistentSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchClusterSettingsPersistentSetting)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsPersistentSettingArrayOutput) ToElasticsearchClusterSettingsPersistentSettingArrayOutput() ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentSettingArrayOutput) ToElasticsearchClusterSettingsPersistentSettingArrayOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsPersistentSettingArrayOutput {
	return o
}

func (o ElasticsearchClusterSettingsPersistentSettingArrayOutput) Index(i pulumi.IntInput) ElasticsearchClusterSettingsPersistentSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchClusterSettingsPersistentSetting {
		return vs[0].([]ElasticsearchClusterSettingsPersistentSetting)[vs[1].(int)]
	}).(ElasticsearchClusterSettingsPersistentSettingOutput)
}

type ElasticsearchClusterSettingsTransient struct {
	// Defines the setting in the cluster.
	Settings []ElasticsearchClusterSettingsTransientSetting `pulumi:"settings"`
}

// ElasticsearchClusterSettingsTransientInput is an input type that accepts ElasticsearchClusterSettingsTransientArgs and ElasticsearchClusterSettingsTransientOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsTransientInput` via:
//
//          ElasticsearchClusterSettingsTransientArgs{...}
type ElasticsearchClusterSettingsTransientInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsTransientOutput() ElasticsearchClusterSettingsTransientOutput
	ToElasticsearchClusterSettingsTransientOutputWithContext(context.Context) ElasticsearchClusterSettingsTransientOutput
}

type ElasticsearchClusterSettingsTransientArgs struct {
	// Defines the setting in the cluster.
	Settings ElasticsearchClusterSettingsTransientSettingArrayInput `pulumi:"settings"`
}

func (ElasticsearchClusterSettingsTransientArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsTransient)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsTransientArgs) ToElasticsearchClusterSettingsTransientOutput() ElasticsearchClusterSettingsTransientOutput {
	return i.ToElasticsearchClusterSettingsTransientOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsTransientArgs) ToElasticsearchClusterSettingsTransientOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsTransientOutput)
}

func (i ElasticsearchClusterSettingsTransientArgs) ToElasticsearchClusterSettingsTransientPtrOutput() ElasticsearchClusterSettingsTransientPtrOutput {
	return i.ToElasticsearchClusterSettingsTransientPtrOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsTransientArgs) ToElasticsearchClusterSettingsTransientPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsTransientOutput).ToElasticsearchClusterSettingsTransientPtrOutputWithContext(ctx)
}

// ElasticsearchClusterSettingsTransientPtrInput is an input type that accepts ElasticsearchClusterSettingsTransientArgs, ElasticsearchClusterSettingsTransientPtr and ElasticsearchClusterSettingsTransientPtrOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsTransientPtrInput` via:
//
//          ElasticsearchClusterSettingsTransientArgs{...}
//
//  or:
//
//          nil
type ElasticsearchClusterSettingsTransientPtrInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsTransientPtrOutput() ElasticsearchClusterSettingsTransientPtrOutput
	ToElasticsearchClusterSettingsTransientPtrOutputWithContext(context.Context) ElasticsearchClusterSettingsTransientPtrOutput
}

type elasticsearchClusterSettingsTransientPtrType ElasticsearchClusterSettingsTransientArgs

func ElasticsearchClusterSettingsTransientPtr(v *ElasticsearchClusterSettingsTransientArgs) ElasticsearchClusterSettingsTransientPtrInput {
	return (*elasticsearchClusterSettingsTransientPtrType)(v)
}

func (*elasticsearchClusterSettingsTransientPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsTransient)(nil)).Elem()
}

func (i *elasticsearchClusterSettingsTransientPtrType) ToElasticsearchClusterSettingsTransientPtrOutput() ElasticsearchClusterSettingsTransientPtrOutput {
	return i.ToElasticsearchClusterSettingsTransientPtrOutputWithContext(context.Background())
}

func (i *elasticsearchClusterSettingsTransientPtrType) ToElasticsearchClusterSettingsTransientPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsTransientPtrOutput)
}

type ElasticsearchClusterSettingsTransientOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsTransientOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsTransient)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsTransientOutput) ToElasticsearchClusterSettingsTransientOutput() ElasticsearchClusterSettingsTransientOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientOutput) ToElasticsearchClusterSettingsTransientOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientOutput) ToElasticsearchClusterSettingsTransientPtrOutput() ElasticsearchClusterSettingsTransientPtrOutput {
	return o.ToElasticsearchClusterSettingsTransientPtrOutputWithContext(context.Background())
}

func (o ElasticsearchClusterSettingsTransientOutput) ToElasticsearchClusterSettingsTransientPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchClusterSettingsTransient) *ElasticsearchClusterSettingsTransient {
		return &v
	}).(ElasticsearchClusterSettingsTransientPtrOutput)
}

// Defines the setting in the cluster.
func (o ElasticsearchClusterSettingsTransientOutput) Settings() ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsTransient) []ElasticsearchClusterSettingsTransientSetting {
		return v.Settings
	}).(ElasticsearchClusterSettingsTransientSettingArrayOutput)
}

type ElasticsearchClusterSettingsTransientPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsTransientPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchClusterSettingsTransient)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsTransientPtrOutput) ToElasticsearchClusterSettingsTransientPtrOutput() ElasticsearchClusterSettingsTransientPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientPtrOutput) ToElasticsearchClusterSettingsTransientPtrOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientPtrOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientPtrOutput) Elem() ElasticsearchClusterSettingsTransientOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsTransient) ElasticsearchClusterSettingsTransient {
		if v != nil {
			return *v
		}
		var ret ElasticsearchClusterSettingsTransient
		return ret
	}).(ElasticsearchClusterSettingsTransientOutput)
}

// Defines the setting in the cluster.
func (o ElasticsearchClusterSettingsTransientPtrOutput) Settings() ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return o.ApplyT(func(v *ElasticsearchClusterSettingsTransient) []ElasticsearchClusterSettingsTransientSetting {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ElasticsearchClusterSettingsTransientSettingArrayOutput)
}

type ElasticsearchClusterSettingsTransientSetting struct {
	Name       string   `pulumi:"name"`
	Value      *string  `pulumi:"value"`
	ValueLists []string `pulumi:"valueLists"`
}

// ElasticsearchClusterSettingsTransientSettingInput is an input type that accepts ElasticsearchClusterSettingsTransientSettingArgs and ElasticsearchClusterSettingsTransientSettingOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsTransientSettingInput` via:
//
//          ElasticsearchClusterSettingsTransientSettingArgs{...}
type ElasticsearchClusterSettingsTransientSettingInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsTransientSettingOutput() ElasticsearchClusterSettingsTransientSettingOutput
	ToElasticsearchClusterSettingsTransientSettingOutputWithContext(context.Context) ElasticsearchClusterSettingsTransientSettingOutput
}

type ElasticsearchClusterSettingsTransientSettingArgs struct {
	Name       pulumi.StringInput      `pulumi:"name"`
	Value      pulumi.StringPtrInput   `pulumi:"value"`
	ValueLists pulumi.StringArrayInput `pulumi:"valueLists"`
}

func (ElasticsearchClusterSettingsTransientSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsTransientSetting)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsTransientSettingArgs) ToElasticsearchClusterSettingsTransientSettingOutput() ElasticsearchClusterSettingsTransientSettingOutput {
	return i.ToElasticsearchClusterSettingsTransientSettingOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsTransientSettingArgs) ToElasticsearchClusterSettingsTransientSettingOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsTransientSettingOutput)
}

// ElasticsearchClusterSettingsTransientSettingArrayInput is an input type that accepts ElasticsearchClusterSettingsTransientSettingArray and ElasticsearchClusterSettingsTransientSettingArrayOutput values.
// You can construct a concrete instance of `ElasticsearchClusterSettingsTransientSettingArrayInput` via:
//
//          ElasticsearchClusterSettingsTransientSettingArray{ ElasticsearchClusterSettingsTransientSettingArgs{...} }
type ElasticsearchClusterSettingsTransientSettingArrayInput interface {
	pulumi.Input

	ToElasticsearchClusterSettingsTransientSettingArrayOutput() ElasticsearchClusterSettingsTransientSettingArrayOutput
	ToElasticsearchClusterSettingsTransientSettingArrayOutputWithContext(context.Context) ElasticsearchClusterSettingsTransientSettingArrayOutput
}

type ElasticsearchClusterSettingsTransientSettingArray []ElasticsearchClusterSettingsTransientSettingInput

func (ElasticsearchClusterSettingsTransientSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchClusterSettingsTransientSetting)(nil)).Elem()
}

func (i ElasticsearchClusterSettingsTransientSettingArray) ToElasticsearchClusterSettingsTransientSettingArrayOutput() ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return i.ToElasticsearchClusterSettingsTransientSettingArrayOutputWithContext(context.Background())
}

func (i ElasticsearchClusterSettingsTransientSettingArray) ToElasticsearchClusterSettingsTransientSettingArrayOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchClusterSettingsTransientSettingArrayOutput)
}

type ElasticsearchClusterSettingsTransientSettingOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsTransientSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchClusterSettingsTransientSetting)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsTransientSettingOutput) ToElasticsearchClusterSettingsTransientSettingOutput() ElasticsearchClusterSettingsTransientSettingOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientSettingOutput) ToElasticsearchClusterSettingsTransientSettingOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientSettingOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsTransientSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElasticsearchClusterSettingsTransientSettingOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsTransientSetting) *string { return v.Value }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchClusterSettingsTransientSettingOutput) ValueLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchClusterSettingsTransientSetting) []string { return v.ValueLists }).(pulumi.StringArrayOutput)
}

type ElasticsearchClusterSettingsTransientSettingArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchClusterSettingsTransientSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchClusterSettingsTransientSetting)(nil)).Elem()
}

func (o ElasticsearchClusterSettingsTransientSettingArrayOutput) ToElasticsearchClusterSettingsTransientSettingArrayOutput() ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientSettingArrayOutput) ToElasticsearchClusterSettingsTransientSettingArrayOutputWithContext(ctx context.Context) ElasticsearchClusterSettingsTransientSettingArrayOutput {
	return o
}

func (o ElasticsearchClusterSettingsTransientSettingArrayOutput) Index(i pulumi.IntInput) ElasticsearchClusterSettingsTransientSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchClusterSettingsTransientSetting {
		return vs[0].([]ElasticsearchClusterSettingsTransientSetting)[vs[1].(int)]
	}).(ElasticsearchClusterSettingsTransientSettingOutput)
}

type ElasticsearchComponentTemplateElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchComponentTemplateElasticsearchConnectionInput is an input type that accepts ElasticsearchComponentTemplateElasticsearchConnectionArgs and ElasticsearchComponentTemplateElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateElasticsearchConnectionInput` via:
//
//          ElasticsearchComponentTemplateElasticsearchConnectionArgs{...}
type ElasticsearchComponentTemplateElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateElasticsearchConnectionOutput() ElasticsearchComponentTemplateElasticsearchConnectionOutput
	ToElasticsearchComponentTemplateElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchComponentTemplateElasticsearchConnectionOutput
}

type ElasticsearchComponentTemplateElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchComponentTemplateElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchComponentTemplateElasticsearchConnectionArgs) ToElasticsearchComponentTemplateElasticsearchConnectionOutput() ElasticsearchComponentTemplateElasticsearchConnectionOutput {
	return i.ToElasticsearchComponentTemplateElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateElasticsearchConnectionArgs) ToElasticsearchComponentTemplateElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateElasticsearchConnectionOutput)
}

func (i ElasticsearchComponentTemplateElasticsearchConnectionArgs) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutput() ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateElasticsearchConnectionArgs) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateElasticsearchConnectionOutput).ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchComponentTemplateElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchComponentTemplateElasticsearchConnectionArgs, ElasticsearchComponentTemplateElasticsearchConnectionPtr and ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchComponentTemplateElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchComponentTemplateElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutput() ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput
	ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput
}

type elasticsearchComponentTemplateElasticsearchConnectionPtrType ElasticsearchComponentTemplateElasticsearchConnectionArgs

func ElasticsearchComponentTemplateElasticsearchConnectionPtr(v *ElasticsearchComponentTemplateElasticsearchConnectionArgs) ElasticsearchComponentTemplateElasticsearchConnectionPtrInput {
	return (*elasticsearchComponentTemplateElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchComponentTemplateElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchComponentTemplateElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchComponentTemplateElasticsearchConnectionPtrType) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutput() ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchComponentTemplateElasticsearchConnectionPtrType) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput)
}

type ElasticsearchComponentTemplateElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) ToElasticsearchComponentTemplateElasticsearchConnectionOutput() ElasticsearchComponentTemplateElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) ToElasticsearchComponentTemplateElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutput() ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchComponentTemplateElasticsearchConnection) *ElasticsearchComponentTemplateElasticsearchConnection {
		return &v
	}).(ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchComponentTemplateElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchComponentTemplateElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutput() ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) ToElasticsearchComponentTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) Elem() ElasticsearchComponentTemplateElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) ElasticsearchComponentTemplateElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchComponentTemplateElasticsearchConnection
		return ret
	}).(ElasticsearchComponentTemplateElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchComponentTemplateTemplate struct {
	// Alias to add.
	Aliases []ElasticsearchComponentTemplateTemplateAlias `pulumi:"aliases"`
	// Mapping for fields in the index.
	Mappings *string `pulumi:"mappings"`
	// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
	Settings *string `pulumi:"settings"`
}

// ElasticsearchComponentTemplateTemplateInput is an input type that accepts ElasticsearchComponentTemplateTemplateArgs and ElasticsearchComponentTemplateTemplateOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateTemplateInput` via:
//
//          ElasticsearchComponentTemplateTemplateArgs{...}
type ElasticsearchComponentTemplateTemplateInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateTemplateOutput() ElasticsearchComponentTemplateTemplateOutput
	ToElasticsearchComponentTemplateTemplateOutputWithContext(context.Context) ElasticsearchComponentTemplateTemplateOutput
}

type ElasticsearchComponentTemplateTemplateArgs struct {
	// Alias to add.
	Aliases ElasticsearchComponentTemplateTemplateAliasArrayInput `pulumi:"aliases"`
	// Mapping for fields in the index.
	Mappings pulumi.StringPtrInput `pulumi:"mappings"`
	// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
	Settings pulumi.StringPtrInput `pulumi:"settings"`
}

func (ElasticsearchComponentTemplateTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateTemplate)(nil)).Elem()
}

func (i ElasticsearchComponentTemplateTemplateArgs) ToElasticsearchComponentTemplateTemplateOutput() ElasticsearchComponentTemplateTemplateOutput {
	return i.ToElasticsearchComponentTemplateTemplateOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateTemplateArgs) ToElasticsearchComponentTemplateTemplateOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateTemplateOutput)
}

func (i ElasticsearchComponentTemplateTemplateArgs) ToElasticsearchComponentTemplateTemplatePtrOutput() ElasticsearchComponentTemplateTemplatePtrOutput {
	return i.ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateTemplateArgs) ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateTemplateOutput).ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(ctx)
}

// ElasticsearchComponentTemplateTemplatePtrInput is an input type that accepts ElasticsearchComponentTemplateTemplateArgs, ElasticsearchComponentTemplateTemplatePtr and ElasticsearchComponentTemplateTemplatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateTemplatePtrInput` via:
//
//          ElasticsearchComponentTemplateTemplateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchComponentTemplateTemplatePtrInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateTemplatePtrOutput() ElasticsearchComponentTemplateTemplatePtrOutput
	ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(context.Context) ElasticsearchComponentTemplateTemplatePtrOutput
}

type elasticsearchComponentTemplateTemplatePtrType ElasticsearchComponentTemplateTemplateArgs

func ElasticsearchComponentTemplateTemplatePtr(v *ElasticsearchComponentTemplateTemplateArgs) ElasticsearchComponentTemplateTemplatePtrInput {
	return (*elasticsearchComponentTemplateTemplatePtrType)(v)
}

func (*elasticsearchComponentTemplateTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchComponentTemplateTemplate)(nil)).Elem()
}

func (i *elasticsearchComponentTemplateTemplatePtrType) ToElasticsearchComponentTemplateTemplatePtrOutput() ElasticsearchComponentTemplateTemplatePtrOutput {
	return i.ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchComponentTemplateTemplatePtrType) ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateTemplatePtrOutput)
}

type ElasticsearchComponentTemplateTemplateOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateTemplate)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateTemplateOutput) ToElasticsearchComponentTemplateTemplateOutput() ElasticsearchComponentTemplateTemplateOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateOutput) ToElasticsearchComponentTemplateTemplateOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateOutput) ToElasticsearchComponentTemplateTemplatePtrOutput() ElasticsearchComponentTemplateTemplatePtrOutput {
	return o.ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchComponentTemplateTemplateOutput) ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchComponentTemplateTemplate) *ElasticsearchComponentTemplateTemplate {
		return &v
	}).(ElasticsearchComponentTemplateTemplatePtrOutput)
}

// Alias to add.
func (o ElasticsearchComponentTemplateTemplateOutput) Aliases() ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplate) []ElasticsearchComponentTemplateTemplateAlias {
		return v.Aliases
	}).(ElasticsearchComponentTemplateTemplateAliasArrayOutput)
}

// Mapping for fields in the index.
func (o ElasticsearchComponentTemplateTemplateOutput) Mappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplate) *string { return v.Mappings }).(pulumi.StringPtrOutput)
}

// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
func (o ElasticsearchComponentTemplateTemplateOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplate) *string { return v.Settings }).(pulumi.StringPtrOutput)
}

type ElasticsearchComponentTemplateTemplatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchComponentTemplateTemplate)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateTemplatePtrOutput) ToElasticsearchComponentTemplateTemplatePtrOutput() ElasticsearchComponentTemplateTemplatePtrOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplatePtrOutput) ToElasticsearchComponentTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplatePtrOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplatePtrOutput) Elem() ElasticsearchComponentTemplateTemplateOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateTemplate) ElasticsearchComponentTemplateTemplate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchComponentTemplateTemplate
		return ret
	}).(ElasticsearchComponentTemplateTemplateOutput)
}

// Alias to add.
func (o ElasticsearchComponentTemplateTemplatePtrOutput) Aliases() ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateTemplate) []ElasticsearchComponentTemplateTemplateAlias {
		if v == nil {
			return nil
		}
		return v.Aliases
	}).(ElasticsearchComponentTemplateTemplateAliasArrayOutput)
}

// Mapping for fields in the index.
func (o ElasticsearchComponentTemplateTemplatePtrOutput) Mappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.StringPtrOutput)
}

// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
func (o ElasticsearchComponentTemplateTemplatePtrOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchComponentTemplateTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchComponentTemplateTemplateAlias struct {
	Filter       *string `pulumi:"filter"`
	IndexRouting *string `pulumi:"indexRouting"`
	IsHidden     *bool   `pulumi:"isHidden"`
	IsWriteIndex *bool   `pulumi:"isWriteIndex"`
	// Name of the component template to create.
	Name          string  `pulumi:"name"`
	Routing       *string `pulumi:"routing"`
	SearchRouting *string `pulumi:"searchRouting"`
}

// ElasticsearchComponentTemplateTemplateAliasInput is an input type that accepts ElasticsearchComponentTemplateTemplateAliasArgs and ElasticsearchComponentTemplateTemplateAliasOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateTemplateAliasInput` via:
//
//          ElasticsearchComponentTemplateTemplateAliasArgs{...}
type ElasticsearchComponentTemplateTemplateAliasInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateTemplateAliasOutput() ElasticsearchComponentTemplateTemplateAliasOutput
	ToElasticsearchComponentTemplateTemplateAliasOutputWithContext(context.Context) ElasticsearchComponentTemplateTemplateAliasOutput
}

type ElasticsearchComponentTemplateTemplateAliasArgs struct {
	Filter       pulumi.StringPtrInput `pulumi:"filter"`
	IndexRouting pulumi.StringPtrInput `pulumi:"indexRouting"`
	IsHidden     pulumi.BoolPtrInput   `pulumi:"isHidden"`
	IsWriteIndex pulumi.BoolPtrInput   `pulumi:"isWriteIndex"`
	// Name of the component template to create.
	Name          pulumi.StringInput    `pulumi:"name"`
	Routing       pulumi.StringPtrInput `pulumi:"routing"`
	SearchRouting pulumi.StringPtrInput `pulumi:"searchRouting"`
}

func (ElasticsearchComponentTemplateTemplateAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateTemplateAlias)(nil)).Elem()
}

func (i ElasticsearchComponentTemplateTemplateAliasArgs) ToElasticsearchComponentTemplateTemplateAliasOutput() ElasticsearchComponentTemplateTemplateAliasOutput {
	return i.ToElasticsearchComponentTemplateTemplateAliasOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateTemplateAliasArgs) ToElasticsearchComponentTemplateTemplateAliasOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateTemplateAliasOutput)
}

// ElasticsearchComponentTemplateTemplateAliasArrayInput is an input type that accepts ElasticsearchComponentTemplateTemplateAliasArray and ElasticsearchComponentTemplateTemplateAliasArrayOutput values.
// You can construct a concrete instance of `ElasticsearchComponentTemplateTemplateAliasArrayInput` via:
//
//          ElasticsearchComponentTemplateTemplateAliasArray{ ElasticsearchComponentTemplateTemplateAliasArgs{...} }
type ElasticsearchComponentTemplateTemplateAliasArrayInput interface {
	pulumi.Input

	ToElasticsearchComponentTemplateTemplateAliasArrayOutput() ElasticsearchComponentTemplateTemplateAliasArrayOutput
	ToElasticsearchComponentTemplateTemplateAliasArrayOutputWithContext(context.Context) ElasticsearchComponentTemplateTemplateAliasArrayOutput
}

type ElasticsearchComponentTemplateTemplateAliasArray []ElasticsearchComponentTemplateTemplateAliasInput

func (ElasticsearchComponentTemplateTemplateAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchComponentTemplateTemplateAlias)(nil)).Elem()
}

func (i ElasticsearchComponentTemplateTemplateAliasArray) ToElasticsearchComponentTemplateTemplateAliasArrayOutput() ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return i.ToElasticsearchComponentTemplateTemplateAliasArrayOutputWithContext(context.Background())
}

func (i ElasticsearchComponentTemplateTemplateAliasArray) ToElasticsearchComponentTemplateTemplateAliasArrayOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchComponentTemplateTemplateAliasArrayOutput)
}

type ElasticsearchComponentTemplateTemplateAliasOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateTemplateAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchComponentTemplateTemplateAlias)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) ToElasticsearchComponentTemplateTemplateAliasOutput() ElasticsearchComponentTemplateTemplateAliasOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) ToElasticsearchComponentTemplateTemplateAliasOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateAliasOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) IndexRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *string { return v.IndexRouting }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *bool { return v.IsHidden }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) IsWriteIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *bool { return v.IsWriteIndex }).(pulumi.BoolPtrOutput)
}

// Name of the component template to create.
func (o ElasticsearchComponentTemplateTemplateAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) Routing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *string { return v.Routing }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchComponentTemplateTemplateAliasOutput) SearchRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchComponentTemplateTemplateAlias) *string { return v.SearchRouting }).(pulumi.StringPtrOutput)
}

type ElasticsearchComponentTemplateTemplateAliasArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchComponentTemplateTemplateAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchComponentTemplateTemplateAlias)(nil)).Elem()
}

func (o ElasticsearchComponentTemplateTemplateAliasArrayOutput) ToElasticsearchComponentTemplateTemplateAliasArrayOutput() ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateAliasArrayOutput) ToElasticsearchComponentTemplateTemplateAliasArrayOutputWithContext(ctx context.Context) ElasticsearchComponentTemplateTemplateAliasArrayOutput {
	return o
}

func (o ElasticsearchComponentTemplateTemplateAliasArrayOutput) Index(i pulumi.IntInput) ElasticsearchComponentTemplateTemplateAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchComponentTemplateTemplateAlias {
		return vs[0].([]ElasticsearchComponentTemplateTemplateAlias)[vs[1].(int)]
	}).(ElasticsearchComponentTemplateTemplateAliasOutput)
}

type ElasticsearchDataStreamElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchDataStreamElasticsearchConnectionInput is an input type that accepts ElasticsearchDataStreamElasticsearchConnectionArgs and ElasticsearchDataStreamElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamElasticsearchConnectionInput` via:
//
//          ElasticsearchDataStreamElasticsearchConnectionArgs{...}
type ElasticsearchDataStreamElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchDataStreamElasticsearchConnectionOutput() ElasticsearchDataStreamElasticsearchConnectionOutput
	ToElasticsearchDataStreamElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchDataStreamElasticsearchConnectionOutput
}

type ElasticsearchDataStreamElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchDataStreamElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchDataStreamElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchDataStreamElasticsearchConnectionArgs) ToElasticsearchDataStreamElasticsearchConnectionOutput() ElasticsearchDataStreamElasticsearchConnectionOutput {
	return i.ToElasticsearchDataStreamElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamElasticsearchConnectionArgs) ToElasticsearchDataStreamElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamElasticsearchConnectionOutput)
}

func (i ElasticsearchDataStreamElasticsearchConnectionArgs) ToElasticsearchDataStreamElasticsearchConnectionPtrOutput() ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamElasticsearchConnectionArgs) ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamElasticsearchConnectionOutput).ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchDataStreamElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchDataStreamElasticsearchConnectionArgs, ElasticsearchDataStreamElasticsearchConnectionPtr and ElasticsearchDataStreamElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchDataStreamElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchDataStreamElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchDataStreamElasticsearchConnectionPtrOutput() ElasticsearchDataStreamElasticsearchConnectionPtrOutput
	ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchDataStreamElasticsearchConnectionPtrOutput
}

type elasticsearchDataStreamElasticsearchConnectionPtrType ElasticsearchDataStreamElasticsearchConnectionArgs

func ElasticsearchDataStreamElasticsearchConnectionPtr(v *ElasticsearchDataStreamElasticsearchConnectionArgs) ElasticsearchDataStreamElasticsearchConnectionPtrInput {
	return (*elasticsearchDataStreamElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchDataStreamElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchDataStreamElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchDataStreamElasticsearchConnectionPtrType) ToElasticsearchDataStreamElasticsearchConnectionPtrOutput() ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchDataStreamElasticsearchConnectionPtrType) ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamElasticsearchConnectionPtrOutput)
}

type ElasticsearchDataStreamElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchDataStreamElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchDataStreamElasticsearchConnectionOutput) ToElasticsearchDataStreamElasticsearchConnectionOutput() ElasticsearchDataStreamElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchDataStreamElasticsearchConnectionOutput) ToElasticsearchDataStreamElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchDataStreamElasticsearchConnectionOutput) ToElasticsearchDataStreamElasticsearchConnectionPtrOutput() ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchDataStreamElasticsearchConnectionOutput) ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchDataStreamElasticsearchConnection) *ElasticsearchDataStreamElasticsearchConnection {
		return &v
	}).(ElasticsearchDataStreamElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchDataStreamElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchDataStreamElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchDataStreamElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchDataStreamElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchDataStreamElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchDataStreamElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchDataStreamElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) ToElasticsearchDataStreamElasticsearchConnectionPtrOutput() ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) ToElasticsearchDataStreamElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchDataStreamElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) Elem() ElasticsearchDataStreamElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) ElasticsearchDataStreamElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchDataStreamElasticsearchConnection
		return ret
	}).(ElasticsearchDataStreamElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchDataStreamElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchDataStreamElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchDataStreamIndex struct {
	IndexName *string `pulumi:"indexName"`
	IndexUuid *string `pulumi:"indexUuid"`
}

// ElasticsearchDataStreamIndexInput is an input type that accepts ElasticsearchDataStreamIndexArgs and ElasticsearchDataStreamIndexOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamIndexInput` via:
//
//          ElasticsearchDataStreamIndexArgs{...}
type ElasticsearchDataStreamIndexInput interface {
	pulumi.Input

	ToElasticsearchDataStreamIndexOutput() ElasticsearchDataStreamIndexOutput
	ToElasticsearchDataStreamIndexOutputWithContext(context.Context) ElasticsearchDataStreamIndexOutput
}

type ElasticsearchDataStreamIndexArgs struct {
	IndexName pulumi.StringPtrInput `pulumi:"indexName"`
	IndexUuid pulumi.StringPtrInput `pulumi:"indexUuid"`
}

func (ElasticsearchDataStreamIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchDataStreamIndex)(nil)).Elem()
}

func (i ElasticsearchDataStreamIndexArgs) ToElasticsearchDataStreamIndexOutput() ElasticsearchDataStreamIndexOutput {
	return i.ToElasticsearchDataStreamIndexOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamIndexArgs) ToElasticsearchDataStreamIndexOutputWithContext(ctx context.Context) ElasticsearchDataStreamIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamIndexOutput)
}

// ElasticsearchDataStreamIndexArrayInput is an input type that accepts ElasticsearchDataStreamIndexArray and ElasticsearchDataStreamIndexArrayOutput values.
// You can construct a concrete instance of `ElasticsearchDataStreamIndexArrayInput` via:
//
//          ElasticsearchDataStreamIndexArray{ ElasticsearchDataStreamIndexArgs{...} }
type ElasticsearchDataStreamIndexArrayInput interface {
	pulumi.Input

	ToElasticsearchDataStreamIndexArrayOutput() ElasticsearchDataStreamIndexArrayOutput
	ToElasticsearchDataStreamIndexArrayOutputWithContext(context.Context) ElasticsearchDataStreamIndexArrayOutput
}

type ElasticsearchDataStreamIndexArray []ElasticsearchDataStreamIndexInput

func (ElasticsearchDataStreamIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchDataStreamIndex)(nil)).Elem()
}

func (i ElasticsearchDataStreamIndexArray) ToElasticsearchDataStreamIndexArrayOutput() ElasticsearchDataStreamIndexArrayOutput {
	return i.ToElasticsearchDataStreamIndexArrayOutputWithContext(context.Background())
}

func (i ElasticsearchDataStreamIndexArray) ToElasticsearchDataStreamIndexArrayOutputWithContext(ctx context.Context) ElasticsearchDataStreamIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchDataStreamIndexArrayOutput)
}

type ElasticsearchDataStreamIndexOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchDataStreamIndex)(nil)).Elem()
}

func (o ElasticsearchDataStreamIndexOutput) ToElasticsearchDataStreamIndexOutput() ElasticsearchDataStreamIndexOutput {
	return o
}

func (o ElasticsearchDataStreamIndexOutput) ToElasticsearchDataStreamIndexOutputWithContext(ctx context.Context) ElasticsearchDataStreamIndexOutput {
	return o
}

func (o ElasticsearchDataStreamIndexOutput) IndexName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamIndex) *string { return v.IndexName }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchDataStreamIndexOutput) IndexUuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchDataStreamIndex) *string { return v.IndexUuid }).(pulumi.StringPtrOutput)
}

type ElasticsearchDataStreamIndexArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchDataStreamIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchDataStreamIndex)(nil)).Elem()
}

func (o ElasticsearchDataStreamIndexArrayOutput) ToElasticsearchDataStreamIndexArrayOutput() ElasticsearchDataStreamIndexArrayOutput {
	return o
}

func (o ElasticsearchDataStreamIndexArrayOutput) ToElasticsearchDataStreamIndexArrayOutputWithContext(ctx context.Context) ElasticsearchDataStreamIndexArrayOutput {
	return o
}

func (o ElasticsearchDataStreamIndexArrayOutput) Index(i pulumi.IntInput) ElasticsearchDataStreamIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchDataStreamIndex {
		return vs[0].([]ElasticsearchDataStreamIndex)[vs[1].(int)]
	}).(ElasticsearchDataStreamIndexOutput)
}

type ElasticsearchIndexAlias struct {
	// Query used to limit documents the alias can access.
	Filter *string `pulumi:"filter"`
	// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
	IndexRouting *string `pulumi:"indexRouting"`
	// If true, the alias is hidden.
	IsHidden *bool `pulumi:"isHidden"`
	// If true, the index is the write index for the alias.
	IsWriteIndex *bool `pulumi:"isWriteIndex"`
	// Index alias name.
	Name string `pulumi:"name"`
	// Value used to route indexing and search operations to a specific shard.
	Routing *string `pulumi:"routing"`
	// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	SearchRouting *string `pulumi:"searchRouting"`
}

// ElasticsearchIndexAliasInput is an input type that accepts ElasticsearchIndexAliasArgs and ElasticsearchIndexAliasOutput values.
// You can construct a concrete instance of `ElasticsearchIndexAliasInput` via:
//
//          ElasticsearchIndexAliasArgs{...}
type ElasticsearchIndexAliasInput interface {
	pulumi.Input

	ToElasticsearchIndexAliasOutput() ElasticsearchIndexAliasOutput
	ToElasticsearchIndexAliasOutputWithContext(context.Context) ElasticsearchIndexAliasOutput
}

type ElasticsearchIndexAliasArgs struct {
	// Query used to limit documents the alias can access.
	Filter pulumi.StringPtrInput `pulumi:"filter"`
	// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
	IndexRouting pulumi.StringPtrInput `pulumi:"indexRouting"`
	// If true, the alias is hidden.
	IsHidden pulumi.BoolPtrInput `pulumi:"isHidden"`
	// If true, the index is the write index for the alias.
	IsWriteIndex pulumi.BoolPtrInput `pulumi:"isWriteIndex"`
	// Index alias name.
	Name pulumi.StringInput `pulumi:"name"`
	// Value used to route indexing and search operations to a specific shard.
	Routing pulumi.StringPtrInput `pulumi:"routing"`
	// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
	SearchRouting pulumi.StringPtrInput `pulumi:"searchRouting"`
}

func (ElasticsearchIndexAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexAlias)(nil)).Elem()
}

func (i ElasticsearchIndexAliasArgs) ToElasticsearchIndexAliasOutput() ElasticsearchIndexAliasOutput {
	return i.ToElasticsearchIndexAliasOutputWithContext(context.Background())
}

func (i ElasticsearchIndexAliasArgs) ToElasticsearchIndexAliasOutputWithContext(ctx context.Context) ElasticsearchIndexAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexAliasOutput)
}

// ElasticsearchIndexAliasArrayInput is an input type that accepts ElasticsearchIndexAliasArray and ElasticsearchIndexAliasArrayOutput values.
// You can construct a concrete instance of `ElasticsearchIndexAliasArrayInput` via:
//
//          ElasticsearchIndexAliasArray{ ElasticsearchIndexAliasArgs{...} }
type ElasticsearchIndexAliasArrayInput interface {
	pulumi.Input

	ToElasticsearchIndexAliasArrayOutput() ElasticsearchIndexAliasArrayOutput
	ToElasticsearchIndexAliasArrayOutputWithContext(context.Context) ElasticsearchIndexAliasArrayOutput
}

type ElasticsearchIndexAliasArray []ElasticsearchIndexAliasInput

func (ElasticsearchIndexAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexAlias)(nil)).Elem()
}

func (i ElasticsearchIndexAliasArray) ToElasticsearchIndexAliasArrayOutput() ElasticsearchIndexAliasArrayOutput {
	return i.ToElasticsearchIndexAliasArrayOutputWithContext(context.Background())
}

func (i ElasticsearchIndexAliasArray) ToElasticsearchIndexAliasArrayOutputWithContext(ctx context.Context) ElasticsearchIndexAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexAliasArrayOutput)
}

type ElasticsearchIndexAliasOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexAlias)(nil)).Elem()
}

func (o ElasticsearchIndexAliasOutput) ToElasticsearchIndexAliasOutput() ElasticsearchIndexAliasOutput {
	return o
}

func (o ElasticsearchIndexAliasOutput) ToElasticsearchIndexAliasOutputWithContext(ctx context.Context) ElasticsearchIndexAliasOutput {
	return o
}

// Query used to limit documents the alias can access.
func (o ElasticsearchIndexAliasOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

// Value used to route indexing operations to a specific shard. If specified, this overwrites the `routing` value for indexing operations.
func (o ElasticsearchIndexAliasOutput) IndexRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *string { return v.IndexRouting }).(pulumi.StringPtrOutput)
}

// If true, the alias is hidden.
func (o ElasticsearchIndexAliasOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *bool { return v.IsHidden }).(pulumi.BoolPtrOutput)
}

// If true, the index is the write index for the alias.
func (o ElasticsearchIndexAliasOutput) IsWriteIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *bool { return v.IsWriteIndex }).(pulumi.BoolPtrOutput)
}

// Index alias name.
func (o ElasticsearchIndexAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) string { return v.Name }).(pulumi.StringOutput)
}

// Value used to route indexing and search operations to a specific shard.
func (o ElasticsearchIndexAliasOutput) Routing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *string { return v.Routing }).(pulumi.StringPtrOutput)
}

// Value used to route search operations to a specific shard. If specified, this overwrites the routing value for search operations.
func (o ElasticsearchIndexAliasOutput) SearchRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexAlias) *string { return v.SearchRouting }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexAliasArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexAlias)(nil)).Elem()
}

func (o ElasticsearchIndexAliasArrayOutput) ToElasticsearchIndexAliasArrayOutput() ElasticsearchIndexAliasArrayOutput {
	return o
}

func (o ElasticsearchIndexAliasArrayOutput) ToElasticsearchIndexAliasArrayOutputWithContext(ctx context.Context) ElasticsearchIndexAliasArrayOutput {
	return o
}

func (o ElasticsearchIndexAliasArrayOutput) Index(i pulumi.IntInput) ElasticsearchIndexAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchIndexAlias {
		return vs[0].([]ElasticsearchIndexAlias)[vs[1].(int)]
	}).(ElasticsearchIndexAliasOutput)
}

type ElasticsearchIndexElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchIndexElasticsearchConnectionInput is an input type that accepts ElasticsearchIndexElasticsearchConnectionArgs and ElasticsearchIndexElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchIndexElasticsearchConnectionInput` via:
//
//          ElasticsearchIndexElasticsearchConnectionArgs{...}
type ElasticsearchIndexElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchIndexElasticsearchConnectionOutput() ElasticsearchIndexElasticsearchConnectionOutput
	ToElasticsearchIndexElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchIndexElasticsearchConnectionOutput
}

type ElasticsearchIndexElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchIndexElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchIndexElasticsearchConnectionArgs) ToElasticsearchIndexElasticsearchConnectionOutput() ElasticsearchIndexElasticsearchConnectionOutput {
	return i.ToElasticsearchIndexElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchIndexElasticsearchConnectionArgs) ToElasticsearchIndexElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexElasticsearchConnectionOutput)
}

func (i ElasticsearchIndexElasticsearchConnectionArgs) ToElasticsearchIndexElasticsearchConnectionPtrOutput() ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexElasticsearchConnectionArgs) ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexElasticsearchConnectionOutput).ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchIndexElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchIndexElasticsearchConnectionArgs, ElasticsearchIndexElasticsearchConnectionPtr and ElasticsearchIndexElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchIndexElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexElasticsearchConnectionPtrOutput() ElasticsearchIndexElasticsearchConnectionPtrOutput
	ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchIndexElasticsearchConnectionPtrOutput
}

type elasticsearchIndexElasticsearchConnectionPtrType ElasticsearchIndexElasticsearchConnectionArgs

func ElasticsearchIndexElasticsearchConnectionPtr(v *ElasticsearchIndexElasticsearchConnectionArgs) ElasticsearchIndexElasticsearchConnectionPtrInput {
	return (*elasticsearchIndexElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchIndexElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchIndexElasticsearchConnectionPtrType) ToElasticsearchIndexElasticsearchConnectionPtrOutput() ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexElasticsearchConnectionPtrType) ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexElasticsearchConnectionPtrOutput)
}

type ElasticsearchIndexElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexElasticsearchConnectionOutput) ToElasticsearchIndexElasticsearchConnectionOutput() ElasticsearchIndexElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexElasticsearchConnectionOutput) ToElasticsearchIndexElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexElasticsearchConnectionOutput) ToElasticsearchIndexElasticsearchConnectionPtrOutput() ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexElasticsearchConnectionOutput) ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexElasticsearchConnection) *ElasticsearchIndexElasticsearchConnection {
		return &v
	}).(ElasticsearchIndexElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIndexElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) ToElasticsearchIndexElasticsearchConnectionPtrOutput() ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) ToElasticsearchIndexElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) Elem() ElasticsearchIndexElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) ElasticsearchIndexElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexElasticsearchConnection
		return ret
	}).(ElasticsearchIndexElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleCold struct {
	// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
	Allocate *ElasticsearchIndexLifecycleColdAllocate `pulumi:"allocate"`
	// Freeze the index to minimize its memory footprint.
	Freeze *ElasticsearchIndexLifecycleColdFreeze `pulumi:"freeze"`
	// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
	Migrate *ElasticsearchIndexLifecycleColdMigrate `pulumi:"migrate"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge *string `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly *ElasticsearchIndexLifecycleColdReadonly `pulumi:"readonly"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot *ElasticsearchIndexLifecycleColdSearchableSnapshot `pulumi:"searchableSnapshot"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority *ElasticsearchIndexLifecycleColdSetPriority `pulumi:"setPriority"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow *ElasticsearchIndexLifecycleColdUnfollow `pulumi:"unfollow"`
}

// ElasticsearchIndexLifecycleColdInput is an input type that accepts ElasticsearchIndexLifecycleColdArgs and ElasticsearchIndexLifecycleColdOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdInput` via:
//
//          ElasticsearchIndexLifecycleColdArgs{...}
type ElasticsearchIndexLifecycleColdInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdOutput() ElasticsearchIndexLifecycleColdOutput
	ToElasticsearchIndexLifecycleColdOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdOutput
}

type ElasticsearchIndexLifecycleColdArgs struct {
	// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
	Allocate ElasticsearchIndexLifecycleColdAllocatePtrInput `pulumi:"allocate"`
	// Freeze the index to minimize its memory footprint.
	Freeze ElasticsearchIndexLifecycleColdFreezePtrInput `pulumi:"freeze"`
	// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
	Migrate ElasticsearchIndexLifecycleColdMigratePtrInput `pulumi:"migrate"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly ElasticsearchIndexLifecycleColdReadonlyPtrInput `pulumi:"readonly"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput `pulumi:"searchableSnapshot"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority ElasticsearchIndexLifecycleColdSetPriorityPtrInput `pulumi:"setPriority"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow ElasticsearchIndexLifecycleColdUnfollowPtrInput `pulumi:"unfollow"`
}

func (ElasticsearchIndexLifecycleColdArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleCold)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdArgs) ToElasticsearchIndexLifecycleColdOutput() ElasticsearchIndexLifecycleColdOutput {
	return i.ToElasticsearchIndexLifecycleColdOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdArgs) ToElasticsearchIndexLifecycleColdOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdOutput)
}

func (i ElasticsearchIndexLifecycleColdArgs) ToElasticsearchIndexLifecycleColdPtrOutput() ElasticsearchIndexLifecycleColdPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdArgs) ToElasticsearchIndexLifecycleColdPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdOutput).ToElasticsearchIndexLifecycleColdPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdPtrInput is an input type that accepts ElasticsearchIndexLifecycleColdArgs, ElasticsearchIndexLifecycleColdPtr and ElasticsearchIndexLifecycleColdPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdPtrInput` via:
//
//          ElasticsearchIndexLifecycleColdArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdPtrOutput() ElasticsearchIndexLifecycleColdPtrOutput
	ToElasticsearchIndexLifecycleColdPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdPtrOutput
}

type elasticsearchIndexLifecycleColdPtrType ElasticsearchIndexLifecycleColdArgs

func ElasticsearchIndexLifecycleColdPtr(v *ElasticsearchIndexLifecycleColdArgs) ElasticsearchIndexLifecycleColdPtrInput {
	return (*elasticsearchIndexLifecycleColdPtrType)(v)
}

func (*elasticsearchIndexLifecycleColdPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleCold)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdPtrType) ToElasticsearchIndexLifecycleColdPtrOutput() ElasticsearchIndexLifecycleColdPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdPtrType) ToElasticsearchIndexLifecycleColdPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdPtrOutput)
}

type ElasticsearchIndexLifecycleColdOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleCold)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdOutput) ToElasticsearchIndexLifecycleColdOutput() ElasticsearchIndexLifecycleColdOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdOutput) ToElasticsearchIndexLifecycleColdOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdOutput) ToElasticsearchIndexLifecycleColdPtrOutput() ElasticsearchIndexLifecycleColdPtrOutput {
	return o.ToElasticsearchIndexLifecycleColdPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdOutput) ToElasticsearchIndexLifecycleColdPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleCold {
		return &v
	}).(ElasticsearchIndexLifecycleColdPtrOutput)
}

// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
func (o ElasticsearchIndexLifecycleColdOutput) Allocate() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdAllocate { return v.Allocate }).(ElasticsearchIndexLifecycleColdAllocatePtrOutput)
}

// Freeze the index to minimize its memory footprint.
func (o ElasticsearchIndexLifecycleColdOutput) Freeze() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdFreeze { return v.Freeze }).(ElasticsearchIndexLifecycleColdFreezePtrOutput)
}

// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
func (o ElasticsearchIndexLifecycleColdOutput) Migrate() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdMigrate { return v.Migrate }).(ElasticsearchIndexLifecycleColdMigratePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleColdOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleColdOutput) Readonly() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdReadonly { return v.Readonly }).(ElasticsearchIndexLifecycleColdReadonlyPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleColdOutput) SearchableSnapshot() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdSearchableSnapshot {
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleColdOutput) SetPriority() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdSetPriority {
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleColdSetPriorityPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleColdOutput) Unfollow() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdUnfollow { return v.Unfollow }).(ElasticsearchIndexLifecycleColdUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleColdPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleCold)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdPtrOutput) ToElasticsearchIndexLifecycleColdPtrOutput() ElasticsearchIndexLifecycleColdPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdPtrOutput) ToElasticsearchIndexLifecycleColdPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdPtrOutput) Elem() ElasticsearchIndexLifecycleColdOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) ElasticsearchIndexLifecycleCold {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleCold
		return ret
	}).(ElasticsearchIndexLifecycleColdOutput)
}

// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
func (o ElasticsearchIndexLifecycleColdPtrOutput) Allocate() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdAllocate {
		if v == nil {
			return nil
		}
		return v.Allocate
	}).(ElasticsearchIndexLifecycleColdAllocatePtrOutput)
}

// Freeze the index to minimize its memory footprint.
func (o ElasticsearchIndexLifecycleColdPtrOutput) Freeze() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdFreeze {
		if v == nil {
			return nil
		}
		return v.Freeze
	}).(ElasticsearchIndexLifecycleColdFreezePtrOutput)
}

// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
func (o ElasticsearchIndexLifecycleColdPtrOutput) Migrate() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdMigrate {
		if v == nil {
			return nil
		}
		return v.Migrate
	}).(ElasticsearchIndexLifecycleColdMigratePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleColdPtrOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *string {
		if v == nil {
			return nil
		}
		return v.MinAge
	}).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleColdPtrOutput) Readonly() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdReadonly {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(ElasticsearchIndexLifecycleColdReadonlyPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleColdPtrOutput) SearchableSnapshot() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdSearchableSnapshot {
		if v == nil {
			return nil
		}
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleColdPtrOutput) SetPriority() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdSetPriority {
		if v == nil {
			return nil
		}
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleColdSetPriorityPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleColdPtrOutput) Unfollow() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleCold) *ElasticsearchIndexLifecycleColdUnfollow {
		if v == nil {
			return nil
		}
		return v.Unfollow
	}).(ElasticsearchIndexLifecycleColdUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleColdAllocate struct {
	Exclude          *string `pulumi:"exclude"`
	Include          *string `pulumi:"include"`
	NumberOfReplicas *int    `pulumi:"numberOfReplicas"`
	Require          *string `pulumi:"require"`
}

// ElasticsearchIndexLifecycleColdAllocateInput is an input type that accepts ElasticsearchIndexLifecycleColdAllocateArgs and ElasticsearchIndexLifecycleColdAllocateOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdAllocateInput` via:
//
//          ElasticsearchIndexLifecycleColdAllocateArgs{...}
type ElasticsearchIndexLifecycleColdAllocateInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdAllocateOutput() ElasticsearchIndexLifecycleColdAllocateOutput
	ToElasticsearchIndexLifecycleColdAllocateOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdAllocateOutput
}

type ElasticsearchIndexLifecycleColdAllocateArgs struct {
	Exclude          pulumi.StringPtrInput `pulumi:"exclude"`
	Include          pulumi.StringPtrInput `pulumi:"include"`
	NumberOfReplicas pulumi.IntPtrInput    `pulumi:"numberOfReplicas"`
	Require          pulumi.StringPtrInput `pulumi:"require"`
}

func (ElasticsearchIndexLifecycleColdAllocateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdAllocate)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdAllocateArgs) ToElasticsearchIndexLifecycleColdAllocateOutput() ElasticsearchIndexLifecycleColdAllocateOutput {
	return i.ToElasticsearchIndexLifecycleColdAllocateOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdAllocateArgs) ToElasticsearchIndexLifecycleColdAllocateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdAllocateOutput)
}

func (i ElasticsearchIndexLifecycleColdAllocateArgs) ToElasticsearchIndexLifecycleColdAllocatePtrOutput() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdAllocateArgs) ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdAllocateOutput).ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdAllocatePtrInput is an input type that accepts ElasticsearchIndexLifecycleColdAllocateArgs, ElasticsearchIndexLifecycleColdAllocatePtr and ElasticsearchIndexLifecycleColdAllocatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdAllocatePtrInput` via:
//
//          ElasticsearchIndexLifecycleColdAllocateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdAllocatePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdAllocatePtrOutput() ElasticsearchIndexLifecycleColdAllocatePtrOutput
	ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdAllocatePtrOutput
}

type elasticsearchIndexLifecycleColdAllocatePtrType ElasticsearchIndexLifecycleColdAllocateArgs

func ElasticsearchIndexLifecycleColdAllocatePtr(v *ElasticsearchIndexLifecycleColdAllocateArgs) ElasticsearchIndexLifecycleColdAllocatePtrInput {
	return (*elasticsearchIndexLifecycleColdAllocatePtrType)(v)
}

func (*elasticsearchIndexLifecycleColdAllocatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdAllocate)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdAllocatePtrType) ToElasticsearchIndexLifecycleColdAllocatePtrOutput() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdAllocatePtrType) ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdAllocatePtrOutput)
}

type ElasticsearchIndexLifecycleColdAllocateOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdAllocateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdAllocate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) ToElasticsearchIndexLifecycleColdAllocateOutput() ElasticsearchIndexLifecycleColdAllocateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) ToElasticsearchIndexLifecycleColdAllocateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) ToElasticsearchIndexLifecycleColdAllocatePtrOutput() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o.ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdAllocate) *ElasticsearchIndexLifecycleColdAllocate {
		return &v
	}).(ElasticsearchIndexLifecycleColdAllocatePtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdAllocate) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdAllocate) *string { return v.Include }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdAllocate) *int { return v.NumberOfReplicas }).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocateOutput) Require() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdAllocate) *string { return v.Require }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleColdAllocatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdAllocatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdAllocate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) ToElasticsearchIndexLifecycleColdAllocatePtrOutput() ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) ToElasticsearchIndexLifecycleColdAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdAllocatePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) Elem() ElasticsearchIndexLifecycleColdAllocateOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdAllocate) ElasticsearchIndexLifecycleColdAllocate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdAllocate
		return ret
	}).(ElasticsearchIndexLifecycleColdAllocateOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdAllocate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdAllocatePtrOutput) Require() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Require
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleColdFreeze struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleColdFreezeInput is an input type that accepts ElasticsearchIndexLifecycleColdFreezeArgs and ElasticsearchIndexLifecycleColdFreezeOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdFreezeInput` via:
//
//          ElasticsearchIndexLifecycleColdFreezeArgs{...}
type ElasticsearchIndexLifecycleColdFreezeInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdFreezeOutput() ElasticsearchIndexLifecycleColdFreezeOutput
	ToElasticsearchIndexLifecycleColdFreezeOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdFreezeOutput
}

type ElasticsearchIndexLifecycleColdFreezeArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleColdFreezeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdFreeze)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdFreezeArgs) ToElasticsearchIndexLifecycleColdFreezeOutput() ElasticsearchIndexLifecycleColdFreezeOutput {
	return i.ToElasticsearchIndexLifecycleColdFreezeOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdFreezeArgs) ToElasticsearchIndexLifecycleColdFreezeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdFreezeOutput)
}

func (i ElasticsearchIndexLifecycleColdFreezeArgs) ToElasticsearchIndexLifecycleColdFreezePtrOutput() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdFreezeArgs) ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdFreezeOutput).ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdFreezePtrInput is an input type that accepts ElasticsearchIndexLifecycleColdFreezeArgs, ElasticsearchIndexLifecycleColdFreezePtr and ElasticsearchIndexLifecycleColdFreezePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdFreezePtrInput` via:
//
//          ElasticsearchIndexLifecycleColdFreezeArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdFreezePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdFreezePtrOutput() ElasticsearchIndexLifecycleColdFreezePtrOutput
	ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdFreezePtrOutput
}

type elasticsearchIndexLifecycleColdFreezePtrType ElasticsearchIndexLifecycleColdFreezeArgs

func ElasticsearchIndexLifecycleColdFreezePtr(v *ElasticsearchIndexLifecycleColdFreezeArgs) ElasticsearchIndexLifecycleColdFreezePtrInput {
	return (*elasticsearchIndexLifecycleColdFreezePtrType)(v)
}

func (*elasticsearchIndexLifecycleColdFreezePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdFreeze)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdFreezePtrType) ToElasticsearchIndexLifecycleColdFreezePtrOutput() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdFreezePtrType) ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdFreezePtrOutput)
}

type ElasticsearchIndexLifecycleColdFreezeOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdFreezeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdFreeze)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdFreezeOutput) ToElasticsearchIndexLifecycleColdFreezeOutput() ElasticsearchIndexLifecycleColdFreezeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdFreezeOutput) ToElasticsearchIndexLifecycleColdFreezeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdFreezeOutput) ToElasticsearchIndexLifecycleColdFreezePtrOutput() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o.ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdFreezeOutput) ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdFreeze) *ElasticsearchIndexLifecycleColdFreeze {
		return &v
	}).(ElasticsearchIndexLifecycleColdFreezePtrOutput)
}

func (o ElasticsearchIndexLifecycleColdFreezeOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdFreeze) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdFreezePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdFreezePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdFreeze)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdFreezePtrOutput) ToElasticsearchIndexLifecycleColdFreezePtrOutput() ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdFreezePtrOutput) ToElasticsearchIndexLifecycleColdFreezePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdFreezePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdFreezePtrOutput) Elem() ElasticsearchIndexLifecycleColdFreezeOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdFreeze) ElasticsearchIndexLifecycleColdFreeze {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdFreeze
		return ret
	}).(ElasticsearchIndexLifecycleColdFreezeOutput)
}

func (o ElasticsearchIndexLifecycleColdFreezePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdFreeze) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdMigrate struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleColdMigrateInput is an input type that accepts ElasticsearchIndexLifecycleColdMigrateArgs and ElasticsearchIndexLifecycleColdMigrateOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdMigrateInput` via:
//
//          ElasticsearchIndexLifecycleColdMigrateArgs{...}
type ElasticsearchIndexLifecycleColdMigrateInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdMigrateOutput() ElasticsearchIndexLifecycleColdMigrateOutput
	ToElasticsearchIndexLifecycleColdMigrateOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdMigrateOutput
}

type ElasticsearchIndexLifecycleColdMigrateArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleColdMigrateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdMigrate)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdMigrateArgs) ToElasticsearchIndexLifecycleColdMigrateOutput() ElasticsearchIndexLifecycleColdMigrateOutput {
	return i.ToElasticsearchIndexLifecycleColdMigrateOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdMigrateArgs) ToElasticsearchIndexLifecycleColdMigrateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigrateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdMigrateOutput)
}

func (i ElasticsearchIndexLifecycleColdMigrateArgs) ToElasticsearchIndexLifecycleColdMigratePtrOutput() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdMigrateArgs) ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdMigrateOutput).ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdMigratePtrInput is an input type that accepts ElasticsearchIndexLifecycleColdMigrateArgs, ElasticsearchIndexLifecycleColdMigratePtr and ElasticsearchIndexLifecycleColdMigratePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdMigratePtrInput` via:
//
//          ElasticsearchIndexLifecycleColdMigrateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdMigratePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdMigratePtrOutput() ElasticsearchIndexLifecycleColdMigratePtrOutput
	ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdMigratePtrOutput
}

type elasticsearchIndexLifecycleColdMigratePtrType ElasticsearchIndexLifecycleColdMigrateArgs

func ElasticsearchIndexLifecycleColdMigratePtr(v *ElasticsearchIndexLifecycleColdMigrateArgs) ElasticsearchIndexLifecycleColdMigratePtrInput {
	return (*elasticsearchIndexLifecycleColdMigratePtrType)(v)
}

func (*elasticsearchIndexLifecycleColdMigratePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdMigrate)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdMigratePtrType) ToElasticsearchIndexLifecycleColdMigratePtrOutput() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return i.ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdMigratePtrType) ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdMigratePtrOutput)
}

type ElasticsearchIndexLifecycleColdMigrateOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdMigrateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdMigrate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdMigrateOutput) ToElasticsearchIndexLifecycleColdMigrateOutput() ElasticsearchIndexLifecycleColdMigrateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdMigrateOutput) ToElasticsearchIndexLifecycleColdMigrateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigrateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdMigrateOutput) ToElasticsearchIndexLifecycleColdMigratePtrOutput() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o.ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdMigrateOutput) ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdMigrate) *ElasticsearchIndexLifecycleColdMigrate {
		return &v
	}).(ElasticsearchIndexLifecycleColdMigratePtrOutput)
}

func (o ElasticsearchIndexLifecycleColdMigrateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdMigrate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdMigratePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdMigratePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdMigrate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdMigratePtrOutput) ToElasticsearchIndexLifecycleColdMigratePtrOutput() ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdMigratePtrOutput) ToElasticsearchIndexLifecycleColdMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdMigratePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdMigratePtrOutput) Elem() ElasticsearchIndexLifecycleColdMigrateOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdMigrate) ElasticsearchIndexLifecycleColdMigrate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdMigrate
		return ret
	}).(ElasticsearchIndexLifecycleColdMigrateOutput)
}

func (o ElasticsearchIndexLifecycleColdMigratePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdMigrate) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdReadonly struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleColdReadonlyInput is an input type that accepts ElasticsearchIndexLifecycleColdReadonlyArgs and ElasticsearchIndexLifecycleColdReadonlyOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdReadonlyInput` via:
//
//          ElasticsearchIndexLifecycleColdReadonlyArgs{...}
type ElasticsearchIndexLifecycleColdReadonlyInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdReadonlyOutput() ElasticsearchIndexLifecycleColdReadonlyOutput
	ToElasticsearchIndexLifecycleColdReadonlyOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdReadonlyOutput
}

type ElasticsearchIndexLifecycleColdReadonlyArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleColdReadonlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdReadonly)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdReadonlyArgs) ToElasticsearchIndexLifecycleColdReadonlyOutput() ElasticsearchIndexLifecycleColdReadonlyOutput {
	return i.ToElasticsearchIndexLifecycleColdReadonlyOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdReadonlyArgs) ToElasticsearchIndexLifecycleColdReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdReadonlyOutput)
}

func (i ElasticsearchIndexLifecycleColdReadonlyArgs) ToElasticsearchIndexLifecycleColdReadonlyPtrOutput() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdReadonlyArgs) ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdReadonlyOutput).ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdReadonlyPtrInput is an input type that accepts ElasticsearchIndexLifecycleColdReadonlyArgs, ElasticsearchIndexLifecycleColdReadonlyPtr and ElasticsearchIndexLifecycleColdReadonlyPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdReadonlyPtrInput` via:
//
//          ElasticsearchIndexLifecycleColdReadonlyArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdReadonlyPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdReadonlyPtrOutput() ElasticsearchIndexLifecycleColdReadonlyPtrOutput
	ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdReadonlyPtrOutput
}

type elasticsearchIndexLifecycleColdReadonlyPtrType ElasticsearchIndexLifecycleColdReadonlyArgs

func ElasticsearchIndexLifecycleColdReadonlyPtr(v *ElasticsearchIndexLifecycleColdReadonlyArgs) ElasticsearchIndexLifecycleColdReadonlyPtrInput {
	return (*elasticsearchIndexLifecycleColdReadonlyPtrType)(v)
}

func (*elasticsearchIndexLifecycleColdReadonlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdReadonly)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdReadonlyPtrType) ToElasticsearchIndexLifecycleColdReadonlyPtrOutput() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdReadonlyPtrType) ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdReadonlyPtrOutput)
}

type ElasticsearchIndexLifecycleColdReadonlyOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdReadonlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdReadonlyOutput) ToElasticsearchIndexLifecycleColdReadonlyOutput() ElasticsearchIndexLifecycleColdReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdReadonlyOutput) ToElasticsearchIndexLifecycleColdReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdReadonlyOutput) ToElasticsearchIndexLifecycleColdReadonlyPtrOutput() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o.ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdReadonlyOutput) ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdReadonly) *ElasticsearchIndexLifecycleColdReadonly {
		return &v
	}).(ElasticsearchIndexLifecycleColdReadonlyPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdReadonlyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdReadonly) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdReadonlyPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdReadonlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdReadonlyPtrOutput) ToElasticsearchIndexLifecycleColdReadonlyPtrOutput() ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdReadonlyPtrOutput) ToElasticsearchIndexLifecycleColdReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdReadonlyPtrOutput) Elem() ElasticsearchIndexLifecycleColdReadonlyOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdReadonly) ElasticsearchIndexLifecycleColdReadonly {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdReadonly
		return ret
	}).(ElasticsearchIndexLifecycleColdReadonlyOutput)
}

func (o ElasticsearchIndexLifecycleColdReadonlyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdReadonly) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdSearchableSnapshot struct {
	ForceMergeIndex    *bool  `pulumi:"forceMergeIndex"`
	SnapshotRepository string `pulumi:"snapshotRepository"`
}

// ElasticsearchIndexLifecycleColdSearchableSnapshotInput is an input type that accepts ElasticsearchIndexLifecycleColdSearchableSnapshotArgs and ElasticsearchIndexLifecycleColdSearchableSnapshotOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdSearchableSnapshotInput` via:
//
//          ElasticsearchIndexLifecycleColdSearchableSnapshotArgs{...}
type ElasticsearchIndexLifecycleColdSearchableSnapshotInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdSearchableSnapshotOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotOutput
	ToElasticsearchIndexLifecycleColdSearchableSnapshotOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotOutput
}

type ElasticsearchIndexLifecycleColdSearchableSnapshotArgs struct {
	ForceMergeIndex    pulumi.BoolPtrInput `pulumi:"forceMergeIndex"`
	SnapshotRepository pulumi.StringInput  `pulumi:"snapshotRepository"`
}

func (ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdSearchableSnapshot)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ToElasticsearchIndexLifecycleColdSearchableSnapshotOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotOutput {
	return i.ToElasticsearchIndexLifecycleColdSearchableSnapshotOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ToElasticsearchIndexLifecycleColdSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSearchableSnapshotOutput)
}

func (i ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSearchableSnapshotOutput).ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput is an input type that accepts ElasticsearchIndexLifecycleColdSearchableSnapshotArgs, ElasticsearchIndexLifecycleColdSearchableSnapshotPtr and ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput` via:
//
//          ElasticsearchIndexLifecycleColdSearchableSnapshotArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput
	ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput
}

type elasticsearchIndexLifecycleColdSearchableSnapshotPtrType ElasticsearchIndexLifecycleColdSearchableSnapshotArgs

func ElasticsearchIndexLifecycleColdSearchableSnapshotPtr(v *ElasticsearchIndexLifecycleColdSearchableSnapshotArgs) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput {
	return (*elasticsearchIndexLifecycleColdSearchableSnapshotPtrType)(v)
}

func (*elasticsearchIndexLifecycleColdSearchableSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdSearchableSnapshot)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleColdSearchableSnapshotOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o.ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdSearchableSnapshot) *ElasticsearchIndexLifecycleColdSearchableSnapshot {
		return &v
	}).(ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdSearchableSnapshot) *bool { return v.ForceMergeIndex }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotOutput) SnapshotRepository() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdSearchableSnapshot) string { return v.SnapshotRepository }).(pulumi.StringOutput)
}

type ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) Elem() ElasticsearchIndexLifecycleColdSearchableSnapshotOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdSearchableSnapshot) ElasticsearchIndexLifecycleColdSearchableSnapshot {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdSearchableSnapshot
		return ret
	}).(ElasticsearchIndexLifecycleColdSearchableSnapshotOutput)
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdSearchableSnapshot) *bool {
		if v == nil {
			return nil
		}
		return v.ForceMergeIndex
	}).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput) SnapshotRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdSearchableSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRepository
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleColdSetPriority struct {
	Priority int `pulumi:"priority"`
}

// ElasticsearchIndexLifecycleColdSetPriorityInput is an input type that accepts ElasticsearchIndexLifecycleColdSetPriorityArgs and ElasticsearchIndexLifecycleColdSetPriorityOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdSetPriorityInput` via:
//
//          ElasticsearchIndexLifecycleColdSetPriorityArgs{...}
type ElasticsearchIndexLifecycleColdSetPriorityInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdSetPriorityOutput() ElasticsearchIndexLifecycleColdSetPriorityOutput
	ToElasticsearchIndexLifecycleColdSetPriorityOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdSetPriorityOutput
}

type ElasticsearchIndexLifecycleColdSetPriorityArgs struct {
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (ElasticsearchIndexLifecycleColdSetPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdSetPriority)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdSetPriorityArgs) ToElasticsearchIndexLifecycleColdSetPriorityOutput() ElasticsearchIndexLifecycleColdSetPriorityOutput {
	return i.ToElasticsearchIndexLifecycleColdSetPriorityOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdSetPriorityArgs) ToElasticsearchIndexLifecycleColdSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSetPriorityOutput)
}

func (i ElasticsearchIndexLifecycleColdSetPriorityArgs) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutput() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdSetPriorityArgs) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSetPriorityOutput).ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdSetPriorityPtrInput is an input type that accepts ElasticsearchIndexLifecycleColdSetPriorityArgs, ElasticsearchIndexLifecycleColdSetPriorityPtr and ElasticsearchIndexLifecycleColdSetPriorityPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdSetPriorityPtrInput` via:
//
//          ElasticsearchIndexLifecycleColdSetPriorityArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdSetPriorityPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdSetPriorityPtrOutput() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput
	ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdSetPriorityPtrOutput
}

type elasticsearchIndexLifecycleColdSetPriorityPtrType ElasticsearchIndexLifecycleColdSetPriorityArgs

func ElasticsearchIndexLifecycleColdSetPriorityPtr(v *ElasticsearchIndexLifecycleColdSetPriorityArgs) ElasticsearchIndexLifecycleColdSetPriorityPtrInput {
	return (*elasticsearchIndexLifecycleColdSetPriorityPtrType)(v)
}

func (*elasticsearchIndexLifecycleColdSetPriorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdSetPriority)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdSetPriorityPtrType) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutput() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdSetPriorityPtrType) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdSetPriorityPtrOutput)
}

type ElasticsearchIndexLifecycleColdSetPriorityOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdSetPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdSetPriorityOutput) ToElasticsearchIndexLifecycleColdSetPriorityOutput() ElasticsearchIndexLifecycleColdSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSetPriorityOutput) ToElasticsearchIndexLifecycleColdSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSetPriorityOutput) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutput() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o.ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdSetPriorityOutput) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdSetPriority) *ElasticsearchIndexLifecycleColdSetPriority {
		return &v
	}).(ElasticsearchIndexLifecycleColdSetPriorityPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdSetPriorityOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdSetPriority) int { return v.Priority }).(pulumi.IntOutput)
}

type ElasticsearchIndexLifecycleColdSetPriorityPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdSetPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdSetPriorityPtrOutput) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutput() ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSetPriorityPtrOutput) ToElasticsearchIndexLifecycleColdSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdSetPriorityPtrOutput) Elem() ElasticsearchIndexLifecycleColdSetPriorityOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdSetPriority) ElasticsearchIndexLifecycleColdSetPriority {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdSetPriority
		return ret
	}).(ElasticsearchIndexLifecycleColdSetPriorityOutput)
}

func (o ElasticsearchIndexLifecycleColdSetPriorityPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdSetPriority) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleColdUnfollow struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleColdUnfollowInput is an input type that accepts ElasticsearchIndexLifecycleColdUnfollowArgs and ElasticsearchIndexLifecycleColdUnfollowOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdUnfollowInput` via:
//
//          ElasticsearchIndexLifecycleColdUnfollowArgs{...}
type ElasticsearchIndexLifecycleColdUnfollowInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdUnfollowOutput() ElasticsearchIndexLifecycleColdUnfollowOutput
	ToElasticsearchIndexLifecycleColdUnfollowOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdUnfollowOutput
}

type ElasticsearchIndexLifecycleColdUnfollowArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleColdUnfollowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdUnfollow)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleColdUnfollowArgs) ToElasticsearchIndexLifecycleColdUnfollowOutput() ElasticsearchIndexLifecycleColdUnfollowOutput {
	return i.ToElasticsearchIndexLifecycleColdUnfollowOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdUnfollowArgs) ToElasticsearchIndexLifecycleColdUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdUnfollowOutput)
}

func (i ElasticsearchIndexLifecycleColdUnfollowArgs) ToElasticsearchIndexLifecycleColdUnfollowPtrOutput() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleColdUnfollowArgs) ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdUnfollowOutput).ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleColdUnfollowPtrInput is an input type that accepts ElasticsearchIndexLifecycleColdUnfollowArgs, ElasticsearchIndexLifecycleColdUnfollowPtr and ElasticsearchIndexLifecycleColdUnfollowPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleColdUnfollowPtrInput` via:
//
//          ElasticsearchIndexLifecycleColdUnfollowArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleColdUnfollowPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleColdUnfollowPtrOutput() ElasticsearchIndexLifecycleColdUnfollowPtrOutput
	ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleColdUnfollowPtrOutput
}

type elasticsearchIndexLifecycleColdUnfollowPtrType ElasticsearchIndexLifecycleColdUnfollowArgs

func ElasticsearchIndexLifecycleColdUnfollowPtr(v *ElasticsearchIndexLifecycleColdUnfollowArgs) ElasticsearchIndexLifecycleColdUnfollowPtrInput {
	return (*elasticsearchIndexLifecycleColdUnfollowPtrType)(v)
}

func (*elasticsearchIndexLifecycleColdUnfollowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdUnfollow)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleColdUnfollowPtrType) ToElasticsearchIndexLifecycleColdUnfollowPtrOutput() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleColdUnfollowPtrType) ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleColdUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleColdUnfollowOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdUnfollowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleColdUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdUnfollowOutput) ToElasticsearchIndexLifecycleColdUnfollowOutput() ElasticsearchIndexLifecycleColdUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdUnfollowOutput) ToElasticsearchIndexLifecycleColdUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdUnfollowOutput) ToElasticsearchIndexLifecycleColdUnfollowPtrOutput() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o.ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleColdUnfollowOutput) ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleColdUnfollow) *ElasticsearchIndexLifecycleColdUnfollow {
		return &v
	}).(ElasticsearchIndexLifecycleColdUnfollowPtrOutput)
}

func (o ElasticsearchIndexLifecycleColdUnfollowOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleColdUnfollow) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleColdUnfollowPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleColdUnfollowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleColdUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleColdUnfollowPtrOutput) ToElasticsearchIndexLifecycleColdUnfollowPtrOutput() ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdUnfollowPtrOutput) ToElasticsearchIndexLifecycleColdUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleColdUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleColdUnfollowPtrOutput) Elem() ElasticsearchIndexLifecycleColdUnfollowOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdUnfollow) ElasticsearchIndexLifecycleColdUnfollow {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleColdUnfollow
		return ret
	}).(ElasticsearchIndexLifecycleColdUnfollowOutput)
}

func (o ElasticsearchIndexLifecycleColdUnfollowPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleColdUnfollow) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleDelete struct {
	// Permanently removes the index.
	Delete *ElasticsearchIndexLifecycleDeleteDelete `pulumi:"delete"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge *string `pulumi:"minAge"`
	// Waits for the specified SLM policy to be executed before removing the index. This ensures that a snapshot of the deleted index is available.
	WaitForSnapshot *ElasticsearchIndexLifecycleDeleteWaitForSnapshot `pulumi:"waitForSnapshot"`
}

// ElasticsearchIndexLifecycleDeleteInput is an input type that accepts ElasticsearchIndexLifecycleDeleteArgs and ElasticsearchIndexLifecycleDeleteOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeleteInput` via:
//
//          ElasticsearchIndexLifecycleDeleteArgs{...}
type ElasticsearchIndexLifecycleDeleteInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeleteOutput() ElasticsearchIndexLifecycleDeleteOutput
	ToElasticsearchIndexLifecycleDeleteOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeleteOutput
}

type ElasticsearchIndexLifecycleDeleteArgs struct {
	// Permanently removes the index.
	Delete ElasticsearchIndexLifecycleDeleteDeletePtrInput `pulumi:"delete"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
	// Waits for the specified SLM policy to be executed before removing the index. This ensures that a snapshot of the deleted index is available.
	WaitForSnapshot ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput `pulumi:"waitForSnapshot"`
}

func (ElasticsearchIndexLifecycleDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDelete)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleDeleteArgs) ToElasticsearchIndexLifecycleDeleteOutput() ElasticsearchIndexLifecycleDeleteOutput {
	return i.ToElasticsearchIndexLifecycleDeleteOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteArgs) ToElasticsearchIndexLifecycleDeleteOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteOutput)
}

func (i ElasticsearchIndexLifecycleDeleteArgs) ToElasticsearchIndexLifecycleDeletePtrOutput() ElasticsearchIndexLifecycleDeletePtrOutput {
	return i.ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteArgs) ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteOutput).ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleDeletePtrInput is an input type that accepts ElasticsearchIndexLifecycleDeleteArgs, ElasticsearchIndexLifecycleDeletePtr and ElasticsearchIndexLifecycleDeletePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeletePtrInput` via:
//
//          ElasticsearchIndexLifecycleDeleteArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleDeletePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeletePtrOutput() ElasticsearchIndexLifecycleDeletePtrOutput
	ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeletePtrOutput
}

type elasticsearchIndexLifecycleDeletePtrType ElasticsearchIndexLifecycleDeleteArgs

func ElasticsearchIndexLifecycleDeletePtr(v *ElasticsearchIndexLifecycleDeleteArgs) ElasticsearchIndexLifecycleDeletePtrInput {
	return (*elasticsearchIndexLifecycleDeletePtrType)(v)
}

func (*elasticsearchIndexLifecycleDeletePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDelete)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleDeletePtrType) ToElasticsearchIndexLifecycleDeletePtrOutput() ElasticsearchIndexLifecycleDeletePtrOutput {
	return i.ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleDeletePtrType) ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeletePtrOutput)
}

type ElasticsearchIndexLifecycleDeleteOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDelete)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeleteOutput) ToElasticsearchIndexLifecycleDeleteOutput() ElasticsearchIndexLifecycleDeleteOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteOutput) ToElasticsearchIndexLifecycleDeleteOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteOutput) ToElasticsearchIndexLifecycleDeletePtrOutput() ElasticsearchIndexLifecycleDeletePtrOutput {
	return o.ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleDeleteOutput) ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeletePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleDelete) *ElasticsearchIndexLifecycleDelete {
		return &v
	}).(ElasticsearchIndexLifecycleDeletePtrOutput)
}

// Permanently removes the index.
func (o ElasticsearchIndexLifecycleDeleteOutput) Delete() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleDelete) *ElasticsearchIndexLifecycleDeleteDelete { return v.Delete }).(ElasticsearchIndexLifecycleDeleteDeletePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleDeleteOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleDelete) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

// Waits for the specified SLM policy to be executed before removing the index. This ensures that a snapshot of the deleted index is available.
func (o ElasticsearchIndexLifecycleDeleteOutput) WaitForSnapshot() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleDelete) *ElasticsearchIndexLifecycleDeleteWaitForSnapshot {
		return v.WaitForSnapshot
	}).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleDeletePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeletePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDelete)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeletePtrOutput) ToElasticsearchIndexLifecycleDeletePtrOutput() ElasticsearchIndexLifecycleDeletePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeletePtrOutput) ToElasticsearchIndexLifecycleDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeletePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeletePtrOutput) Elem() ElasticsearchIndexLifecycleDeleteOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDelete) ElasticsearchIndexLifecycleDelete {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleDelete
		return ret
	}).(ElasticsearchIndexLifecycleDeleteOutput)
}

// Permanently removes the index.
func (o ElasticsearchIndexLifecycleDeletePtrOutput) Delete() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDelete) *ElasticsearchIndexLifecycleDeleteDelete {
		if v == nil {
			return nil
		}
		return v.Delete
	}).(ElasticsearchIndexLifecycleDeleteDeletePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleDeletePtrOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDelete) *string {
		if v == nil {
			return nil
		}
		return v.MinAge
	}).(pulumi.StringPtrOutput)
}

// Waits for the specified SLM policy to be executed before removing the index. This ensures that a snapshot of the deleted index is available.
func (o ElasticsearchIndexLifecycleDeletePtrOutput) WaitForSnapshot() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDelete) *ElasticsearchIndexLifecycleDeleteWaitForSnapshot {
		if v == nil {
			return nil
		}
		return v.WaitForSnapshot
	}).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleDeleteDelete struct {
	DeleteSearchableSnapshot *bool `pulumi:"deleteSearchableSnapshot"`
}

// ElasticsearchIndexLifecycleDeleteDeleteInput is an input type that accepts ElasticsearchIndexLifecycleDeleteDeleteArgs and ElasticsearchIndexLifecycleDeleteDeleteOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeleteDeleteInput` via:
//
//          ElasticsearchIndexLifecycleDeleteDeleteArgs{...}
type ElasticsearchIndexLifecycleDeleteDeleteInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeleteDeleteOutput() ElasticsearchIndexLifecycleDeleteDeleteOutput
	ToElasticsearchIndexLifecycleDeleteDeleteOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeleteDeleteOutput
}

type ElasticsearchIndexLifecycleDeleteDeleteArgs struct {
	DeleteSearchableSnapshot pulumi.BoolPtrInput `pulumi:"deleteSearchableSnapshot"`
}

func (ElasticsearchIndexLifecycleDeleteDeleteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteDelete)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleDeleteDeleteArgs) ToElasticsearchIndexLifecycleDeleteDeleteOutput() ElasticsearchIndexLifecycleDeleteDeleteOutput {
	return i.ToElasticsearchIndexLifecycleDeleteDeleteOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteDeleteArgs) ToElasticsearchIndexLifecycleDeleteDeleteOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeleteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteDeleteOutput)
}

func (i ElasticsearchIndexLifecycleDeleteDeleteArgs) ToElasticsearchIndexLifecycleDeleteDeletePtrOutput() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return i.ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteDeleteArgs) ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteDeleteOutput).ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleDeleteDeletePtrInput is an input type that accepts ElasticsearchIndexLifecycleDeleteDeleteArgs, ElasticsearchIndexLifecycleDeleteDeletePtr and ElasticsearchIndexLifecycleDeleteDeletePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeleteDeletePtrInput` via:
//
//          ElasticsearchIndexLifecycleDeleteDeleteArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleDeleteDeletePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeleteDeletePtrOutput() ElasticsearchIndexLifecycleDeleteDeletePtrOutput
	ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeleteDeletePtrOutput
}

type elasticsearchIndexLifecycleDeleteDeletePtrType ElasticsearchIndexLifecycleDeleteDeleteArgs

func ElasticsearchIndexLifecycleDeleteDeletePtr(v *ElasticsearchIndexLifecycleDeleteDeleteArgs) ElasticsearchIndexLifecycleDeleteDeletePtrInput {
	return (*elasticsearchIndexLifecycleDeleteDeletePtrType)(v)
}

func (*elasticsearchIndexLifecycleDeleteDeletePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDeleteDelete)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleDeleteDeletePtrType) ToElasticsearchIndexLifecycleDeleteDeletePtrOutput() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return i.ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleDeleteDeletePtrType) ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteDeletePtrOutput)
}

type ElasticsearchIndexLifecycleDeleteDeleteOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeleteDeleteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteDelete)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeleteDeleteOutput) ToElasticsearchIndexLifecycleDeleteDeleteOutput() ElasticsearchIndexLifecycleDeleteDeleteOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteDeleteOutput) ToElasticsearchIndexLifecycleDeleteDeleteOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeleteOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteDeleteOutput) ToElasticsearchIndexLifecycleDeleteDeletePtrOutput() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o.ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleDeleteDeleteOutput) ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleDeleteDelete) *ElasticsearchIndexLifecycleDeleteDelete {
		return &v
	}).(ElasticsearchIndexLifecycleDeleteDeletePtrOutput)
}

func (o ElasticsearchIndexLifecycleDeleteDeleteOutput) DeleteSearchableSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleDeleteDelete) *bool { return v.DeleteSearchableSnapshot }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleDeleteDeletePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeleteDeletePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDeleteDelete)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeleteDeletePtrOutput) ToElasticsearchIndexLifecycleDeleteDeletePtrOutput() ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteDeletePtrOutput) ToElasticsearchIndexLifecycleDeleteDeletePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteDeletePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteDeletePtrOutput) Elem() ElasticsearchIndexLifecycleDeleteDeleteOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDeleteDelete) ElasticsearchIndexLifecycleDeleteDelete {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleDeleteDelete
		return ret
	}).(ElasticsearchIndexLifecycleDeleteDeleteOutput)
}

func (o ElasticsearchIndexLifecycleDeleteDeletePtrOutput) DeleteSearchableSnapshot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDeleteDelete) *bool {
		if v == nil {
			return nil
		}
		return v.DeleteSearchableSnapshot
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleDeleteWaitForSnapshot struct {
	Policy string `pulumi:"policy"`
}

// ElasticsearchIndexLifecycleDeleteWaitForSnapshotInput is an input type that accepts ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs and ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeleteWaitForSnapshotInput` via:
//
//          ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs{...}
type ElasticsearchIndexLifecycleDeleteWaitForSnapshotInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput
	ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput
}

type ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs struct {
	Policy pulumi.StringInput `pulumi:"policy"`
}

func (ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteWaitForSnapshot)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput {
	return i.ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput)
}

func (i ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput).ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput is an input type that accepts ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs, ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtr and ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput` via:
//
//          ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput
	ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput
}

type elasticsearchIndexLifecycleDeleteWaitForSnapshotPtrType ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs

func ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtr(v *ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput {
	return (*elasticsearchIndexLifecycleDeleteWaitForSnapshotPtrType)(v)
}

func (*elasticsearchIndexLifecycleDeleteWaitForSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDeleteWaitForSnapshot)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleDeleteWaitForSnapshotPtrType) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleDeleteWaitForSnapshotPtrType) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteWaitForSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o.ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleDeleteWaitForSnapshot) *ElasticsearchIndexLifecycleDeleteWaitForSnapshot {
		return &v
	}).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput)
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput) Policy() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleDeleteWaitForSnapshot) string { return v.Policy }).(pulumi.StringOutput)
}

type ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleDeleteWaitForSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput() ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput) ToElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput) Elem() ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDeleteWaitForSnapshot) ElasticsearchIndexLifecycleDeleteWaitForSnapshot {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleDeleteWaitForSnapshot
		return ret
	}).(ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput)
}

func (o ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput) Policy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleDeleteWaitForSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.Policy
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchIndexLifecycleElasticsearchConnectionInput is an input type that accepts ElasticsearchIndexLifecycleElasticsearchConnectionArgs and ElasticsearchIndexLifecycleElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleElasticsearchConnectionInput` via:
//
//          ElasticsearchIndexLifecycleElasticsearchConnectionArgs{...}
type ElasticsearchIndexLifecycleElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleElasticsearchConnectionOutput() ElasticsearchIndexLifecycleElasticsearchConnectionOutput
	ToElasticsearchIndexLifecycleElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionOutput
}

type ElasticsearchIndexLifecycleElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ToElasticsearchIndexLifecycleElasticsearchConnectionOutput() ElasticsearchIndexLifecycleElasticsearchConnectionOutput {
	return i.ToElasticsearchIndexLifecycleElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ToElasticsearchIndexLifecycleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleElasticsearchConnectionOutput)
}

func (i ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput() ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleElasticsearchConnectionOutput).ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchIndexLifecycleElasticsearchConnectionArgs, ElasticsearchIndexLifecycleElasticsearchConnectionPtr and ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchIndexLifecycleElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput() ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput
	ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput
}

type elasticsearchIndexLifecycleElasticsearchConnectionPtrType ElasticsearchIndexLifecycleElasticsearchConnectionArgs

func ElasticsearchIndexLifecycleElasticsearchConnectionPtr(v *ElasticsearchIndexLifecycleElasticsearchConnectionArgs) ElasticsearchIndexLifecycleElasticsearchConnectionPtrInput {
	return (*elasticsearchIndexLifecycleElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchIndexLifecycleElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleElasticsearchConnectionPtrType) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput() ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleElasticsearchConnectionPtrType) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput)
}

type ElasticsearchIndexLifecycleElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionOutput() ElasticsearchIndexLifecycleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput() ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleElasticsearchConnection) *ElasticsearchIndexLifecycleElasticsearchConnection {
		return &v
	}).(ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexLifecycleElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput() ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) ToElasticsearchIndexLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) Elem() ElasticsearchIndexLifecycleElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) ElasticsearchIndexLifecycleElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleElasticsearchConnection
		return ret
	}).(ElasticsearchIndexLifecycleElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleFrozen struct {
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge *string `pulumi:"minAge"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot *ElasticsearchIndexLifecycleFrozenSearchableSnapshot `pulumi:"searchableSnapshot"`
}

// ElasticsearchIndexLifecycleFrozenInput is an input type that accepts ElasticsearchIndexLifecycleFrozenArgs and ElasticsearchIndexLifecycleFrozenOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleFrozenInput` via:
//
//          ElasticsearchIndexLifecycleFrozenArgs{...}
type ElasticsearchIndexLifecycleFrozenInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleFrozenOutput() ElasticsearchIndexLifecycleFrozenOutput
	ToElasticsearchIndexLifecycleFrozenOutputWithContext(context.Context) ElasticsearchIndexLifecycleFrozenOutput
}

type ElasticsearchIndexLifecycleFrozenArgs struct {
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput `pulumi:"searchableSnapshot"`
}

func (ElasticsearchIndexLifecycleFrozenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleFrozen)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleFrozenArgs) ToElasticsearchIndexLifecycleFrozenOutput() ElasticsearchIndexLifecycleFrozenOutput {
	return i.ToElasticsearchIndexLifecycleFrozenOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleFrozenArgs) ToElasticsearchIndexLifecycleFrozenOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenOutput)
}

func (i ElasticsearchIndexLifecycleFrozenArgs) ToElasticsearchIndexLifecycleFrozenPtrOutput() ElasticsearchIndexLifecycleFrozenPtrOutput {
	return i.ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleFrozenArgs) ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenOutput).ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleFrozenPtrInput is an input type that accepts ElasticsearchIndexLifecycleFrozenArgs, ElasticsearchIndexLifecycleFrozenPtr and ElasticsearchIndexLifecycleFrozenPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleFrozenPtrInput` via:
//
//          ElasticsearchIndexLifecycleFrozenArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleFrozenPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleFrozenPtrOutput() ElasticsearchIndexLifecycleFrozenPtrOutput
	ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleFrozenPtrOutput
}

type elasticsearchIndexLifecycleFrozenPtrType ElasticsearchIndexLifecycleFrozenArgs

func ElasticsearchIndexLifecycleFrozenPtr(v *ElasticsearchIndexLifecycleFrozenArgs) ElasticsearchIndexLifecycleFrozenPtrInput {
	return (*elasticsearchIndexLifecycleFrozenPtrType)(v)
}

func (*elasticsearchIndexLifecycleFrozenPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleFrozen)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleFrozenPtrType) ToElasticsearchIndexLifecycleFrozenPtrOutput() ElasticsearchIndexLifecycleFrozenPtrOutput {
	return i.ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleFrozenPtrType) ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenPtrOutput)
}

type ElasticsearchIndexLifecycleFrozenOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleFrozenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleFrozen)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleFrozenOutput) ToElasticsearchIndexLifecycleFrozenOutput() ElasticsearchIndexLifecycleFrozenOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenOutput) ToElasticsearchIndexLifecycleFrozenOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenOutput) ToElasticsearchIndexLifecycleFrozenPtrOutput() ElasticsearchIndexLifecycleFrozenPtrOutput {
	return o.ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleFrozenOutput) ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleFrozen) *ElasticsearchIndexLifecycleFrozen {
		return &v
	}).(ElasticsearchIndexLifecycleFrozenPtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleFrozenOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleFrozen) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleFrozenOutput) SearchableSnapshot() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleFrozen) *ElasticsearchIndexLifecycleFrozenSearchableSnapshot {
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleFrozenPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleFrozenPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleFrozen)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleFrozenPtrOutput) ToElasticsearchIndexLifecycleFrozenPtrOutput() ElasticsearchIndexLifecycleFrozenPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenPtrOutput) ToElasticsearchIndexLifecycleFrozenPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenPtrOutput) Elem() ElasticsearchIndexLifecycleFrozenOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozen) ElasticsearchIndexLifecycleFrozen {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleFrozen
		return ret
	}).(ElasticsearchIndexLifecycleFrozenOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleFrozenPtrOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozen) *string {
		if v == nil {
			return nil
		}
		return v.MinAge
	}).(pulumi.StringPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleFrozenPtrOutput) SearchableSnapshot() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozen) *ElasticsearchIndexLifecycleFrozenSearchableSnapshot {
		if v == nil {
			return nil
		}
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleFrozenSearchableSnapshot struct {
	ForceMergeIndex    *bool  `pulumi:"forceMergeIndex"`
	SnapshotRepository string `pulumi:"snapshotRepository"`
}

// ElasticsearchIndexLifecycleFrozenSearchableSnapshotInput is an input type that accepts ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs and ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleFrozenSearchableSnapshotInput` via:
//
//          ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs{...}
type ElasticsearchIndexLifecycleFrozenSearchableSnapshotInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput
	ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutputWithContext(context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput
}

type ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs struct {
	ForceMergeIndex    pulumi.BoolPtrInput `pulumi:"forceMergeIndex"`
	SnapshotRepository pulumi.StringInput  `pulumi:"snapshotRepository"`
}

func (ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenSearchableSnapshot)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput {
	return i.ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput)
}

func (i ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput).ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput is an input type that accepts ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs, ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtr and ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput` via:
//
//          ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput
	ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput
}

type elasticsearchIndexLifecycleFrozenSearchableSnapshotPtrType ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs

func ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtr(v *ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput {
	return (*elasticsearchIndexLifecycleFrozenSearchableSnapshotPtrType)(v)
}

func (*elasticsearchIndexLifecycleFrozenSearchableSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleFrozenSearchableSnapshot)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleFrozenSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleFrozenSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o.ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleFrozenSearchableSnapshot) *ElasticsearchIndexLifecycleFrozenSearchableSnapshot {
		return &v
	}).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput)
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleFrozenSearchableSnapshot) *bool { return v.ForceMergeIndex }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput) SnapshotRepository() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleFrozenSearchableSnapshot) string { return v.SnapshotRepository }).(pulumi.StringOutput)
}

type ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleFrozenSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) Elem() ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozenSearchableSnapshot) ElasticsearchIndexLifecycleFrozenSearchableSnapshot {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleFrozenSearchableSnapshot
		return ret
	}).(ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput)
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozenSearchableSnapshot) *bool {
		if v == nil {
			return nil
		}
		return v.ForceMergeIndex
	}).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput) SnapshotRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleFrozenSearchableSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRepository
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleHot struct {
	// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
	Forcemerge *ElasticsearchIndexLifecycleHotForcemerge `pulumi:"forcemerge"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge *string `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly *ElasticsearchIndexLifecycleHotReadonly `pulumi:"readonly"`
	// Rolls over a target to a new index when the existing index meets one or more of the rollover conditions.
	Rollover *ElasticsearchIndexLifecycleHotRollover `pulumi:"rollover"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot *ElasticsearchIndexLifecycleHotSearchableSnapshot `pulumi:"searchableSnapshot"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority *ElasticsearchIndexLifecycleHotSetPriority `pulumi:"setPriority"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	Shrink *ElasticsearchIndexLifecycleHotShrink `pulumi:"shrink"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow *ElasticsearchIndexLifecycleHotUnfollow `pulumi:"unfollow"`
}

// ElasticsearchIndexLifecycleHotInput is an input type that accepts ElasticsearchIndexLifecycleHotArgs and ElasticsearchIndexLifecycleHotOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotInput` via:
//
//          ElasticsearchIndexLifecycleHotArgs{...}
type ElasticsearchIndexLifecycleHotInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotOutput() ElasticsearchIndexLifecycleHotOutput
	ToElasticsearchIndexLifecycleHotOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotOutput
}

type ElasticsearchIndexLifecycleHotArgs struct {
	// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
	Forcemerge ElasticsearchIndexLifecycleHotForcemergePtrInput `pulumi:"forcemerge"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly ElasticsearchIndexLifecycleHotReadonlyPtrInput `pulumi:"readonly"`
	// Rolls over a target to a new index when the existing index meets one or more of the rollover conditions.
	Rollover ElasticsearchIndexLifecycleHotRolloverPtrInput `pulumi:"rollover"`
	// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
	SearchableSnapshot ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput `pulumi:"searchableSnapshot"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority ElasticsearchIndexLifecycleHotSetPriorityPtrInput `pulumi:"setPriority"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	Shrink ElasticsearchIndexLifecycleHotShrinkPtrInput `pulumi:"shrink"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow ElasticsearchIndexLifecycleHotUnfollowPtrInput `pulumi:"unfollow"`
}

func (ElasticsearchIndexLifecycleHotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHot)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotArgs) ToElasticsearchIndexLifecycleHotOutput() ElasticsearchIndexLifecycleHotOutput {
	return i.ToElasticsearchIndexLifecycleHotOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotArgs) ToElasticsearchIndexLifecycleHotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotOutput)
}

func (i ElasticsearchIndexLifecycleHotArgs) ToElasticsearchIndexLifecycleHotPtrOutput() ElasticsearchIndexLifecycleHotPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotArgs) ToElasticsearchIndexLifecycleHotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotOutput).ToElasticsearchIndexLifecycleHotPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotArgs, ElasticsearchIndexLifecycleHotPtr and ElasticsearchIndexLifecycleHotPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotPtrOutput() ElasticsearchIndexLifecycleHotPtrOutput
	ToElasticsearchIndexLifecycleHotPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotPtrOutput
}

type elasticsearchIndexLifecycleHotPtrType ElasticsearchIndexLifecycleHotArgs

func ElasticsearchIndexLifecycleHotPtr(v *ElasticsearchIndexLifecycleHotArgs) ElasticsearchIndexLifecycleHotPtrInput {
	return (*elasticsearchIndexLifecycleHotPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHot)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotPtrType) ToElasticsearchIndexLifecycleHotPtrOutput() ElasticsearchIndexLifecycleHotPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotPtrType) ToElasticsearchIndexLifecycleHotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotPtrOutput)
}

type ElasticsearchIndexLifecycleHotOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotOutput) ToElasticsearchIndexLifecycleHotOutput() ElasticsearchIndexLifecycleHotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotOutput) ToElasticsearchIndexLifecycleHotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotOutput) ToElasticsearchIndexLifecycleHotPtrOutput() ElasticsearchIndexLifecycleHotPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotOutput) ToElasticsearchIndexLifecycleHotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHot {
		return &v
	}).(ElasticsearchIndexLifecycleHotPtrOutput)
}

// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
func (o ElasticsearchIndexLifecycleHotOutput) Forcemerge() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotForcemerge { return v.Forcemerge }).(ElasticsearchIndexLifecycleHotForcemergePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleHotOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleHotOutput) Readonly() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotReadonly { return v.Readonly }).(ElasticsearchIndexLifecycleHotReadonlyPtrOutput)
}

// Rolls over a target to a new index when the existing index meets one or more of the rollover conditions.
func (o ElasticsearchIndexLifecycleHotOutput) Rollover() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotRollover { return v.Rollover }).(ElasticsearchIndexLifecycleHotRolloverPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleHotOutput) SearchableSnapshot() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotSearchableSnapshot {
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleHotOutput) SetPriority() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotSetPriority {
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleHotSetPriorityPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleHotOutput) Shrink() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotShrink { return v.Shrink }).(ElasticsearchIndexLifecycleHotShrinkPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleHotOutput) Unfollow() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotUnfollow { return v.Unfollow }).(ElasticsearchIndexLifecycleHotUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleHotPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotPtrOutput) ToElasticsearchIndexLifecycleHotPtrOutput() ElasticsearchIndexLifecycleHotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotPtrOutput) ToElasticsearchIndexLifecycleHotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotPtrOutput) Elem() ElasticsearchIndexLifecycleHotOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) ElasticsearchIndexLifecycleHot {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHot
		return ret
	}).(ElasticsearchIndexLifecycleHotOutput)
}

// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
func (o ElasticsearchIndexLifecycleHotPtrOutput) Forcemerge() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotForcemerge {
		if v == nil {
			return nil
		}
		return v.Forcemerge
	}).(ElasticsearchIndexLifecycleHotForcemergePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleHotPtrOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *string {
		if v == nil {
			return nil
		}
		return v.MinAge
	}).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleHotPtrOutput) Readonly() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotReadonly {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(ElasticsearchIndexLifecycleHotReadonlyPtrOutput)
}

// Rolls over a target to a new index when the existing index meets one or more of the rollover conditions.
func (o ElasticsearchIndexLifecycleHotPtrOutput) Rollover() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotRollover {
		if v == nil {
			return nil
		}
		return v.Rollover
	}).(ElasticsearchIndexLifecycleHotRolloverPtrOutput)
}

// Takes a snapshot of the managed index in the configured repository and mounts it as a searchable snapshot.
func (o ElasticsearchIndexLifecycleHotPtrOutput) SearchableSnapshot() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotSearchableSnapshot {
		if v == nil {
			return nil
		}
		return v.SearchableSnapshot
	}).(ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleHotPtrOutput) SetPriority() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotSetPriority {
		if v == nil {
			return nil
		}
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleHotSetPriorityPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleHotPtrOutput) Shrink() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotShrink {
		if v == nil {
			return nil
		}
		return v.Shrink
	}).(ElasticsearchIndexLifecycleHotShrinkPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleHotPtrOutput) Unfollow() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHot) *ElasticsearchIndexLifecycleHotUnfollow {
		if v == nil {
			return nil
		}
		return v.Unfollow
	}).(ElasticsearchIndexLifecycleHotUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleHotForcemerge struct {
	IndexCodec     *string `pulumi:"indexCodec"`
	MaxNumSegments int     `pulumi:"maxNumSegments"`
}

// ElasticsearchIndexLifecycleHotForcemergeInput is an input type that accepts ElasticsearchIndexLifecycleHotForcemergeArgs and ElasticsearchIndexLifecycleHotForcemergeOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotForcemergeInput` via:
//
//          ElasticsearchIndexLifecycleHotForcemergeArgs{...}
type ElasticsearchIndexLifecycleHotForcemergeInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotForcemergeOutput() ElasticsearchIndexLifecycleHotForcemergeOutput
	ToElasticsearchIndexLifecycleHotForcemergeOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotForcemergeOutput
}

type ElasticsearchIndexLifecycleHotForcemergeArgs struct {
	IndexCodec     pulumi.StringPtrInput `pulumi:"indexCodec"`
	MaxNumSegments pulumi.IntInput       `pulumi:"maxNumSegments"`
}

func (ElasticsearchIndexLifecycleHotForcemergeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotForcemerge)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotForcemergeArgs) ToElasticsearchIndexLifecycleHotForcemergeOutput() ElasticsearchIndexLifecycleHotForcemergeOutput {
	return i.ToElasticsearchIndexLifecycleHotForcemergeOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotForcemergeArgs) ToElasticsearchIndexLifecycleHotForcemergeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotForcemergeOutput)
}

func (i ElasticsearchIndexLifecycleHotForcemergeArgs) ToElasticsearchIndexLifecycleHotForcemergePtrOutput() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return i.ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotForcemergeArgs) ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotForcemergeOutput).ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotForcemergePtrInput is an input type that accepts ElasticsearchIndexLifecycleHotForcemergeArgs, ElasticsearchIndexLifecycleHotForcemergePtr and ElasticsearchIndexLifecycleHotForcemergePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotForcemergePtrInput` via:
//
//          ElasticsearchIndexLifecycleHotForcemergeArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotForcemergePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotForcemergePtrOutput() ElasticsearchIndexLifecycleHotForcemergePtrOutput
	ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotForcemergePtrOutput
}

type elasticsearchIndexLifecycleHotForcemergePtrType ElasticsearchIndexLifecycleHotForcemergeArgs

func ElasticsearchIndexLifecycleHotForcemergePtr(v *ElasticsearchIndexLifecycleHotForcemergeArgs) ElasticsearchIndexLifecycleHotForcemergePtrInput {
	return (*elasticsearchIndexLifecycleHotForcemergePtrType)(v)
}

func (*elasticsearchIndexLifecycleHotForcemergePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotForcemerge)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotForcemergePtrType) ToElasticsearchIndexLifecycleHotForcemergePtrOutput() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return i.ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotForcemergePtrType) ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotForcemergePtrOutput)
}

type ElasticsearchIndexLifecycleHotForcemergeOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotForcemergeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotForcemerge)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) ToElasticsearchIndexLifecycleHotForcemergeOutput() ElasticsearchIndexLifecycleHotForcemergeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) ToElasticsearchIndexLifecycleHotForcemergeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) ToElasticsearchIndexLifecycleHotForcemergePtrOutput() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o.ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotForcemerge) *ElasticsearchIndexLifecycleHotForcemerge {
		return &v
	}).(ElasticsearchIndexLifecycleHotForcemergePtrOutput)
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) IndexCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotForcemerge) *string { return v.IndexCodec }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotForcemergeOutput) MaxNumSegments() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotForcemerge) int { return v.MaxNumSegments }).(pulumi.IntOutput)
}

type ElasticsearchIndexLifecycleHotForcemergePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotForcemergePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotForcemerge)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotForcemergePtrOutput) ToElasticsearchIndexLifecycleHotForcemergePtrOutput() ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotForcemergePtrOutput) ToElasticsearchIndexLifecycleHotForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotForcemergePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotForcemergePtrOutput) Elem() ElasticsearchIndexLifecycleHotForcemergeOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotForcemerge) ElasticsearchIndexLifecycleHotForcemerge {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotForcemerge
		return ret
	}).(ElasticsearchIndexLifecycleHotForcemergeOutput)
}

func (o ElasticsearchIndexLifecycleHotForcemergePtrOutput) IndexCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotForcemerge) *string {
		if v == nil {
			return nil
		}
		return v.IndexCodec
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotForcemergePtrOutput) MaxNumSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotForcemerge) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNumSegments
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleHotReadonly struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleHotReadonlyInput is an input type that accepts ElasticsearchIndexLifecycleHotReadonlyArgs and ElasticsearchIndexLifecycleHotReadonlyOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotReadonlyInput` via:
//
//          ElasticsearchIndexLifecycleHotReadonlyArgs{...}
type ElasticsearchIndexLifecycleHotReadonlyInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotReadonlyOutput() ElasticsearchIndexLifecycleHotReadonlyOutput
	ToElasticsearchIndexLifecycleHotReadonlyOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotReadonlyOutput
}

type ElasticsearchIndexLifecycleHotReadonlyArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleHotReadonlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotReadonly)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotReadonlyArgs) ToElasticsearchIndexLifecycleHotReadonlyOutput() ElasticsearchIndexLifecycleHotReadonlyOutput {
	return i.ToElasticsearchIndexLifecycleHotReadonlyOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotReadonlyArgs) ToElasticsearchIndexLifecycleHotReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotReadonlyOutput)
}

func (i ElasticsearchIndexLifecycleHotReadonlyArgs) ToElasticsearchIndexLifecycleHotReadonlyPtrOutput() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotReadonlyArgs) ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotReadonlyOutput).ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotReadonlyPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotReadonlyArgs, ElasticsearchIndexLifecycleHotReadonlyPtr and ElasticsearchIndexLifecycleHotReadonlyPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotReadonlyPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotReadonlyArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotReadonlyPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotReadonlyPtrOutput() ElasticsearchIndexLifecycleHotReadonlyPtrOutput
	ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotReadonlyPtrOutput
}

type elasticsearchIndexLifecycleHotReadonlyPtrType ElasticsearchIndexLifecycleHotReadonlyArgs

func ElasticsearchIndexLifecycleHotReadonlyPtr(v *ElasticsearchIndexLifecycleHotReadonlyArgs) ElasticsearchIndexLifecycleHotReadonlyPtrInput {
	return (*elasticsearchIndexLifecycleHotReadonlyPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotReadonlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotReadonly)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotReadonlyPtrType) ToElasticsearchIndexLifecycleHotReadonlyPtrOutput() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotReadonlyPtrType) ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotReadonlyPtrOutput)
}

type ElasticsearchIndexLifecycleHotReadonlyOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotReadonlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotReadonlyOutput) ToElasticsearchIndexLifecycleHotReadonlyOutput() ElasticsearchIndexLifecycleHotReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotReadonlyOutput) ToElasticsearchIndexLifecycleHotReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotReadonlyOutput) ToElasticsearchIndexLifecycleHotReadonlyPtrOutput() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotReadonlyOutput) ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotReadonly) *ElasticsearchIndexLifecycleHotReadonly {
		return &v
	}).(ElasticsearchIndexLifecycleHotReadonlyPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotReadonlyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotReadonly) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleHotReadonlyPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotReadonlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotReadonlyPtrOutput) ToElasticsearchIndexLifecycleHotReadonlyPtrOutput() ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotReadonlyPtrOutput) ToElasticsearchIndexLifecycleHotReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotReadonlyPtrOutput) Elem() ElasticsearchIndexLifecycleHotReadonlyOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotReadonly) ElasticsearchIndexLifecycleHotReadonly {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotReadonly
		return ret
	}).(ElasticsearchIndexLifecycleHotReadonlyOutput)
}

func (o ElasticsearchIndexLifecycleHotReadonlyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotReadonly) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleHotRollover struct {
	MaxAge              *string `pulumi:"maxAge"`
	MaxDocs             *int    `pulumi:"maxDocs"`
	MaxPrimaryShardSize *string `pulumi:"maxPrimaryShardSize"`
	MaxSize             *string `pulumi:"maxSize"`
}

// ElasticsearchIndexLifecycleHotRolloverInput is an input type that accepts ElasticsearchIndexLifecycleHotRolloverArgs and ElasticsearchIndexLifecycleHotRolloverOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotRolloverInput` via:
//
//          ElasticsearchIndexLifecycleHotRolloverArgs{...}
type ElasticsearchIndexLifecycleHotRolloverInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotRolloverOutput() ElasticsearchIndexLifecycleHotRolloverOutput
	ToElasticsearchIndexLifecycleHotRolloverOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotRolloverOutput
}

type ElasticsearchIndexLifecycleHotRolloverArgs struct {
	MaxAge              pulumi.StringPtrInput `pulumi:"maxAge"`
	MaxDocs             pulumi.IntPtrInput    `pulumi:"maxDocs"`
	MaxPrimaryShardSize pulumi.StringPtrInput `pulumi:"maxPrimaryShardSize"`
	MaxSize             pulumi.StringPtrInput `pulumi:"maxSize"`
}

func (ElasticsearchIndexLifecycleHotRolloverArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotRollover)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotRolloverArgs) ToElasticsearchIndexLifecycleHotRolloverOutput() ElasticsearchIndexLifecycleHotRolloverOutput {
	return i.ToElasticsearchIndexLifecycleHotRolloverOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotRolloverArgs) ToElasticsearchIndexLifecycleHotRolloverOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotRolloverOutput)
}

func (i ElasticsearchIndexLifecycleHotRolloverArgs) ToElasticsearchIndexLifecycleHotRolloverPtrOutput() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotRolloverArgs) ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotRolloverOutput).ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotRolloverPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotRolloverArgs, ElasticsearchIndexLifecycleHotRolloverPtr and ElasticsearchIndexLifecycleHotRolloverPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotRolloverPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotRolloverArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotRolloverPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotRolloverPtrOutput() ElasticsearchIndexLifecycleHotRolloverPtrOutput
	ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotRolloverPtrOutput
}

type elasticsearchIndexLifecycleHotRolloverPtrType ElasticsearchIndexLifecycleHotRolloverArgs

func ElasticsearchIndexLifecycleHotRolloverPtr(v *ElasticsearchIndexLifecycleHotRolloverArgs) ElasticsearchIndexLifecycleHotRolloverPtrInput {
	return (*elasticsearchIndexLifecycleHotRolloverPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotRolloverPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotRollover)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotRolloverPtrType) ToElasticsearchIndexLifecycleHotRolloverPtrOutput() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotRolloverPtrType) ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotRolloverPtrOutput)
}

type ElasticsearchIndexLifecycleHotRolloverOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotRolloverOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotRollover)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) ToElasticsearchIndexLifecycleHotRolloverOutput() ElasticsearchIndexLifecycleHotRolloverOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) ToElasticsearchIndexLifecycleHotRolloverOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) ToElasticsearchIndexLifecycleHotRolloverPtrOutput() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotRollover) *ElasticsearchIndexLifecycleHotRollover {
		return &v
	}).(ElasticsearchIndexLifecycleHotRolloverPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotRollover) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) MaxDocs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotRollover) *int { return v.MaxDocs }).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotRollover) *string { return v.MaxPrimaryShardSize }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotRollover) *string { return v.MaxSize }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleHotRolloverPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotRolloverPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotRollover)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) ToElasticsearchIndexLifecycleHotRolloverPtrOutput() ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) ToElasticsearchIndexLifecycleHotRolloverPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotRolloverPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) Elem() ElasticsearchIndexLifecycleHotRolloverOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotRollover) ElasticsearchIndexLifecycleHotRollover {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotRollover
		return ret
	}).(ElasticsearchIndexLifecycleHotRolloverOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotRollover) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) MaxDocs() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotRollover) *int {
		if v == nil {
			return nil
		}
		return v.MaxDocs
	}).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotRollover) *string {
		if v == nil {
			return nil
		}
		return v.MaxPrimaryShardSize
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotRolloverPtrOutput) MaxSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotRollover) *string {
		if v == nil {
			return nil
		}
		return v.MaxSize
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleHotSearchableSnapshot struct {
	ForceMergeIndex    *bool  `pulumi:"forceMergeIndex"`
	SnapshotRepository string `pulumi:"snapshotRepository"`
}

// ElasticsearchIndexLifecycleHotSearchableSnapshotInput is an input type that accepts ElasticsearchIndexLifecycleHotSearchableSnapshotArgs and ElasticsearchIndexLifecycleHotSearchableSnapshotOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotSearchableSnapshotInput` via:
//
//          ElasticsearchIndexLifecycleHotSearchableSnapshotArgs{...}
type ElasticsearchIndexLifecycleHotSearchableSnapshotInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotSearchableSnapshotOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotOutput
	ToElasticsearchIndexLifecycleHotSearchableSnapshotOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotOutput
}

type ElasticsearchIndexLifecycleHotSearchableSnapshotArgs struct {
	ForceMergeIndex    pulumi.BoolPtrInput `pulumi:"forceMergeIndex"`
	SnapshotRepository pulumi.StringInput  `pulumi:"snapshotRepository"`
}

func (ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotSearchableSnapshot)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ToElasticsearchIndexLifecycleHotSearchableSnapshotOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotOutput {
	return i.ToElasticsearchIndexLifecycleHotSearchableSnapshotOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ToElasticsearchIndexLifecycleHotSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSearchableSnapshotOutput)
}

func (i ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSearchableSnapshotOutput).ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotSearchableSnapshotArgs, ElasticsearchIndexLifecycleHotSearchableSnapshotPtr and ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotSearchableSnapshotArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput
	ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput
}

type elasticsearchIndexLifecycleHotSearchableSnapshotPtrType ElasticsearchIndexLifecycleHotSearchableSnapshotArgs

func ElasticsearchIndexLifecycleHotSearchableSnapshotPtr(v *ElasticsearchIndexLifecycleHotSearchableSnapshotArgs) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput {
	return (*elasticsearchIndexLifecycleHotSearchableSnapshotPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotSearchableSnapshotPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotSearchableSnapshot)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotSearchableSnapshotPtrType) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput)
}

type ElasticsearchIndexLifecycleHotSearchableSnapshotOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotSearchableSnapshot) *ElasticsearchIndexLifecycleHotSearchableSnapshot {
		return &v
	}).(ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotSearchableSnapshot) *bool { return v.ForceMergeIndex }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotOutput) SnapshotRepository() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotSearchableSnapshot) string { return v.SnapshotRepository }).(pulumi.StringOutput)
}

type ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotSearchableSnapshot)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput() ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) ToElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) Elem() ElasticsearchIndexLifecycleHotSearchableSnapshotOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotSearchableSnapshot) ElasticsearchIndexLifecycleHotSearchableSnapshot {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotSearchableSnapshot
		return ret
	}).(ElasticsearchIndexLifecycleHotSearchableSnapshotOutput)
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) ForceMergeIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotSearchableSnapshot) *bool {
		if v == nil {
			return nil
		}
		return v.ForceMergeIndex
	}).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput) SnapshotRepository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotSearchableSnapshot) *string {
		if v == nil {
			return nil
		}
		return &v.SnapshotRepository
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleHotSetPriority struct {
	Priority int `pulumi:"priority"`
}

// ElasticsearchIndexLifecycleHotSetPriorityInput is an input type that accepts ElasticsearchIndexLifecycleHotSetPriorityArgs and ElasticsearchIndexLifecycleHotSetPriorityOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotSetPriorityInput` via:
//
//          ElasticsearchIndexLifecycleHotSetPriorityArgs{...}
type ElasticsearchIndexLifecycleHotSetPriorityInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotSetPriorityOutput() ElasticsearchIndexLifecycleHotSetPriorityOutput
	ToElasticsearchIndexLifecycleHotSetPriorityOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotSetPriorityOutput
}

type ElasticsearchIndexLifecycleHotSetPriorityArgs struct {
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (ElasticsearchIndexLifecycleHotSetPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotSetPriority)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotSetPriorityArgs) ToElasticsearchIndexLifecycleHotSetPriorityOutput() ElasticsearchIndexLifecycleHotSetPriorityOutput {
	return i.ToElasticsearchIndexLifecycleHotSetPriorityOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotSetPriorityArgs) ToElasticsearchIndexLifecycleHotSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSetPriorityOutput)
}

func (i ElasticsearchIndexLifecycleHotSetPriorityArgs) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutput() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotSetPriorityArgs) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSetPriorityOutput).ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotSetPriorityPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotSetPriorityArgs, ElasticsearchIndexLifecycleHotSetPriorityPtr and ElasticsearchIndexLifecycleHotSetPriorityPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotSetPriorityPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotSetPriorityArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotSetPriorityPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotSetPriorityPtrOutput() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput
	ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotSetPriorityPtrOutput
}

type elasticsearchIndexLifecycleHotSetPriorityPtrType ElasticsearchIndexLifecycleHotSetPriorityArgs

func ElasticsearchIndexLifecycleHotSetPriorityPtr(v *ElasticsearchIndexLifecycleHotSetPriorityArgs) ElasticsearchIndexLifecycleHotSetPriorityPtrInput {
	return (*elasticsearchIndexLifecycleHotSetPriorityPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotSetPriorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotSetPriority)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotSetPriorityPtrType) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutput() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotSetPriorityPtrType) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotSetPriorityPtrOutput)
}

type ElasticsearchIndexLifecycleHotSetPriorityOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotSetPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotSetPriorityOutput) ToElasticsearchIndexLifecycleHotSetPriorityOutput() ElasticsearchIndexLifecycleHotSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSetPriorityOutput) ToElasticsearchIndexLifecycleHotSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSetPriorityOutput) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutput() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotSetPriorityOutput) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotSetPriority) *ElasticsearchIndexLifecycleHotSetPriority {
		return &v
	}).(ElasticsearchIndexLifecycleHotSetPriorityPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotSetPriorityOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotSetPriority) int { return v.Priority }).(pulumi.IntOutput)
}

type ElasticsearchIndexLifecycleHotSetPriorityPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotSetPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotSetPriorityPtrOutput) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutput() ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSetPriorityPtrOutput) ToElasticsearchIndexLifecycleHotSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotSetPriorityPtrOutput) Elem() ElasticsearchIndexLifecycleHotSetPriorityOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotSetPriority) ElasticsearchIndexLifecycleHotSetPriority {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotSetPriority
		return ret
	}).(ElasticsearchIndexLifecycleHotSetPriorityOutput)
}

func (o ElasticsearchIndexLifecycleHotSetPriorityPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotSetPriority) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleHotShrink struct {
	MaxPrimaryShardSize *string `pulumi:"maxPrimaryShardSize"`
	NumberOfShards      *int    `pulumi:"numberOfShards"`
}

// ElasticsearchIndexLifecycleHotShrinkInput is an input type that accepts ElasticsearchIndexLifecycleHotShrinkArgs and ElasticsearchIndexLifecycleHotShrinkOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotShrinkInput` via:
//
//          ElasticsearchIndexLifecycleHotShrinkArgs{...}
type ElasticsearchIndexLifecycleHotShrinkInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotShrinkOutput() ElasticsearchIndexLifecycleHotShrinkOutput
	ToElasticsearchIndexLifecycleHotShrinkOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotShrinkOutput
}

type ElasticsearchIndexLifecycleHotShrinkArgs struct {
	MaxPrimaryShardSize pulumi.StringPtrInput `pulumi:"maxPrimaryShardSize"`
	NumberOfShards      pulumi.IntPtrInput    `pulumi:"numberOfShards"`
}

func (ElasticsearchIndexLifecycleHotShrinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotShrink)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotShrinkArgs) ToElasticsearchIndexLifecycleHotShrinkOutput() ElasticsearchIndexLifecycleHotShrinkOutput {
	return i.ToElasticsearchIndexLifecycleHotShrinkOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotShrinkArgs) ToElasticsearchIndexLifecycleHotShrinkOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotShrinkOutput)
}

func (i ElasticsearchIndexLifecycleHotShrinkArgs) ToElasticsearchIndexLifecycleHotShrinkPtrOutput() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotShrinkArgs) ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotShrinkOutput).ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotShrinkPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotShrinkArgs, ElasticsearchIndexLifecycleHotShrinkPtr and ElasticsearchIndexLifecycleHotShrinkPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotShrinkPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotShrinkArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotShrinkPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotShrinkPtrOutput() ElasticsearchIndexLifecycleHotShrinkPtrOutput
	ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotShrinkPtrOutput
}

type elasticsearchIndexLifecycleHotShrinkPtrType ElasticsearchIndexLifecycleHotShrinkArgs

func ElasticsearchIndexLifecycleHotShrinkPtr(v *ElasticsearchIndexLifecycleHotShrinkArgs) ElasticsearchIndexLifecycleHotShrinkPtrInput {
	return (*elasticsearchIndexLifecycleHotShrinkPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotShrinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotShrink)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotShrinkPtrType) ToElasticsearchIndexLifecycleHotShrinkPtrOutput() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotShrinkPtrType) ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotShrinkPtrOutput)
}

type ElasticsearchIndexLifecycleHotShrinkOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotShrinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotShrink)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) ToElasticsearchIndexLifecycleHotShrinkOutput() ElasticsearchIndexLifecycleHotShrinkOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) ToElasticsearchIndexLifecycleHotShrinkOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) ToElasticsearchIndexLifecycleHotShrinkPtrOutput() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotShrink) *ElasticsearchIndexLifecycleHotShrink {
		return &v
	}).(ElasticsearchIndexLifecycleHotShrinkPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotShrink) *string { return v.MaxPrimaryShardSize }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotShrinkOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotShrink) *int { return v.NumberOfShards }).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleHotShrinkPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotShrinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotShrink)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotShrinkPtrOutput) ToElasticsearchIndexLifecycleHotShrinkPtrOutput() ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotShrinkPtrOutput) ToElasticsearchIndexLifecycleHotShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotShrinkPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotShrinkPtrOutput) Elem() ElasticsearchIndexLifecycleHotShrinkOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotShrink) ElasticsearchIndexLifecycleHotShrink {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotShrink
		return ret
	}).(ElasticsearchIndexLifecycleHotShrinkOutput)
}

func (o ElasticsearchIndexLifecycleHotShrinkPtrOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotShrink) *string {
		if v == nil {
			return nil
		}
		return v.MaxPrimaryShardSize
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotShrinkPtrOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotShrink) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleHotUnfollow struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleHotUnfollowInput is an input type that accepts ElasticsearchIndexLifecycleHotUnfollowArgs and ElasticsearchIndexLifecycleHotUnfollowOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotUnfollowInput` via:
//
//          ElasticsearchIndexLifecycleHotUnfollowArgs{...}
type ElasticsearchIndexLifecycleHotUnfollowInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotUnfollowOutput() ElasticsearchIndexLifecycleHotUnfollowOutput
	ToElasticsearchIndexLifecycleHotUnfollowOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotUnfollowOutput
}

type ElasticsearchIndexLifecycleHotUnfollowArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleHotUnfollowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotUnfollow)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleHotUnfollowArgs) ToElasticsearchIndexLifecycleHotUnfollowOutput() ElasticsearchIndexLifecycleHotUnfollowOutput {
	return i.ToElasticsearchIndexLifecycleHotUnfollowOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotUnfollowArgs) ToElasticsearchIndexLifecycleHotUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotUnfollowOutput)
}

func (i ElasticsearchIndexLifecycleHotUnfollowArgs) ToElasticsearchIndexLifecycleHotUnfollowPtrOutput() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleHotUnfollowArgs) ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotUnfollowOutput).ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleHotUnfollowPtrInput is an input type that accepts ElasticsearchIndexLifecycleHotUnfollowArgs, ElasticsearchIndexLifecycleHotUnfollowPtr and ElasticsearchIndexLifecycleHotUnfollowPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleHotUnfollowPtrInput` via:
//
//          ElasticsearchIndexLifecycleHotUnfollowArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleHotUnfollowPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleHotUnfollowPtrOutput() ElasticsearchIndexLifecycleHotUnfollowPtrOutput
	ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleHotUnfollowPtrOutput
}

type elasticsearchIndexLifecycleHotUnfollowPtrType ElasticsearchIndexLifecycleHotUnfollowArgs

func ElasticsearchIndexLifecycleHotUnfollowPtr(v *ElasticsearchIndexLifecycleHotUnfollowArgs) ElasticsearchIndexLifecycleHotUnfollowPtrInput {
	return (*elasticsearchIndexLifecycleHotUnfollowPtrType)(v)
}

func (*elasticsearchIndexLifecycleHotUnfollowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotUnfollow)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleHotUnfollowPtrType) ToElasticsearchIndexLifecycleHotUnfollowPtrOutput() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleHotUnfollowPtrType) ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleHotUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleHotUnfollowOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotUnfollowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleHotUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotUnfollowOutput) ToElasticsearchIndexLifecycleHotUnfollowOutput() ElasticsearchIndexLifecycleHotUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotUnfollowOutput) ToElasticsearchIndexLifecycleHotUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotUnfollowOutput) ToElasticsearchIndexLifecycleHotUnfollowPtrOutput() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o.ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleHotUnfollowOutput) ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleHotUnfollow) *ElasticsearchIndexLifecycleHotUnfollow {
		return &v
	}).(ElasticsearchIndexLifecycleHotUnfollowPtrOutput)
}

func (o ElasticsearchIndexLifecycleHotUnfollowOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleHotUnfollow) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleHotUnfollowPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleHotUnfollowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleHotUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleHotUnfollowPtrOutput) ToElasticsearchIndexLifecycleHotUnfollowPtrOutput() ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotUnfollowPtrOutput) ToElasticsearchIndexLifecycleHotUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleHotUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleHotUnfollowPtrOutput) Elem() ElasticsearchIndexLifecycleHotUnfollowOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotUnfollow) ElasticsearchIndexLifecycleHotUnfollow {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleHotUnfollow
		return ret
	}).(ElasticsearchIndexLifecycleHotUnfollowOutput)
}

func (o ElasticsearchIndexLifecycleHotUnfollowPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleHotUnfollow) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarm struct {
	// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
	Allocate *ElasticsearchIndexLifecycleWarmAllocate `pulumi:"allocate"`
	// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
	Forcemerge *ElasticsearchIndexLifecycleWarmForcemerge `pulumi:"forcemerge"`
	// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
	Migrate *ElasticsearchIndexLifecycleWarmMigrate `pulumi:"migrate"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge *string `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly *ElasticsearchIndexLifecycleWarmReadonly `pulumi:"readonly"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority *ElasticsearchIndexLifecycleWarmSetPriority `pulumi:"setPriority"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	Shrink *ElasticsearchIndexLifecycleWarmShrink `pulumi:"shrink"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow *ElasticsearchIndexLifecycleWarmUnfollow `pulumi:"unfollow"`
}

// ElasticsearchIndexLifecycleWarmInput is an input type that accepts ElasticsearchIndexLifecycleWarmArgs and ElasticsearchIndexLifecycleWarmOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmInput` via:
//
//          ElasticsearchIndexLifecycleWarmArgs{...}
type ElasticsearchIndexLifecycleWarmInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmOutput() ElasticsearchIndexLifecycleWarmOutput
	ToElasticsearchIndexLifecycleWarmOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmOutput
}

type ElasticsearchIndexLifecycleWarmArgs struct {
	// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
	Allocate ElasticsearchIndexLifecycleWarmAllocatePtrInput `pulumi:"allocate"`
	// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
	Forcemerge ElasticsearchIndexLifecycleWarmForcemergePtrInput `pulumi:"forcemerge"`
	// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
	Migrate ElasticsearchIndexLifecycleWarmMigratePtrInput `pulumi:"migrate"`
	// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
	MinAge pulumi.StringPtrInput `pulumi:"minAge"`
	// Makes the index read-only.
	Readonly ElasticsearchIndexLifecycleWarmReadonlyPtrInput `pulumi:"readonly"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	SetPriority ElasticsearchIndexLifecycleWarmSetPriorityPtrInput `pulumi:"setPriority"`
	// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
	Shrink ElasticsearchIndexLifecycleWarmShrinkPtrInput `pulumi:"shrink"`
	// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
	Unfollow ElasticsearchIndexLifecycleWarmUnfollowPtrInput `pulumi:"unfollow"`
}

func (ElasticsearchIndexLifecycleWarmArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarm)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmArgs) ToElasticsearchIndexLifecycleWarmOutput() ElasticsearchIndexLifecycleWarmOutput {
	return i.ToElasticsearchIndexLifecycleWarmOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmArgs) ToElasticsearchIndexLifecycleWarmOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmOutput)
}

func (i ElasticsearchIndexLifecycleWarmArgs) ToElasticsearchIndexLifecycleWarmPtrOutput() ElasticsearchIndexLifecycleWarmPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmArgs) ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmOutput).ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmPtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmArgs, ElasticsearchIndexLifecycleWarmPtr and ElasticsearchIndexLifecycleWarmPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmPtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmPtrOutput() ElasticsearchIndexLifecycleWarmPtrOutput
	ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmPtrOutput
}

type elasticsearchIndexLifecycleWarmPtrType ElasticsearchIndexLifecycleWarmArgs

func ElasticsearchIndexLifecycleWarmPtr(v *ElasticsearchIndexLifecycleWarmArgs) ElasticsearchIndexLifecycleWarmPtrInput {
	return (*elasticsearchIndexLifecycleWarmPtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarm)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmPtrType) ToElasticsearchIndexLifecycleWarmPtrOutput() ElasticsearchIndexLifecycleWarmPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmPtrType) ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmPtrOutput)
}

type ElasticsearchIndexLifecycleWarmOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarm)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmOutput) ToElasticsearchIndexLifecycleWarmOutput() ElasticsearchIndexLifecycleWarmOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmOutput) ToElasticsearchIndexLifecycleWarmOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmOutput) ToElasticsearchIndexLifecycleWarmPtrOutput() ElasticsearchIndexLifecycleWarmPtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmOutput) ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarm {
		return &v
	}).(ElasticsearchIndexLifecycleWarmPtrOutput)
}

// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
func (o ElasticsearchIndexLifecycleWarmOutput) Allocate() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmAllocate { return v.Allocate }).(ElasticsearchIndexLifecycleWarmAllocatePtrOutput)
}

// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
func (o ElasticsearchIndexLifecycleWarmOutput) Forcemerge() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmForcemerge {
		return v.Forcemerge
	}).(ElasticsearchIndexLifecycleWarmForcemergePtrOutput)
}

// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
func (o ElasticsearchIndexLifecycleWarmOutput) Migrate() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmMigrate { return v.Migrate }).(ElasticsearchIndexLifecycleWarmMigratePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleWarmOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *string { return v.MinAge }).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleWarmOutput) Readonly() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmReadonly { return v.Readonly }).(ElasticsearchIndexLifecycleWarmReadonlyPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleWarmOutput) SetPriority() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmSetPriority {
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleWarmOutput) Shrink() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmShrink { return v.Shrink }).(ElasticsearchIndexLifecycleWarmShrinkPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleWarmOutput) Unfollow() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmUnfollow { return v.Unfollow }).(ElasticsearchIndexLifecycleWarmUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleWarmPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarm)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmPtrOutput) ToElasticsearchIndexLifecycleWarmPtrOutput() ElasticsearchIndexLifecycleWarmPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmPtrOutput) ToElasticsearchIndexLifecycleWarmPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmPtrOutput) Elem() ElasticsearchIndexLifecycleWarmOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) ElasticsearchIndexLifecycleWarm {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarm
		return ret
	}).(ElasticsearchIndexLifecycleWarmOutput)
}

// Updates the index settings to change which nodes are allowed to host the index shards and change the number of replicas.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Allocate() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmAllocate {
		if v == nil {
			return nil
		}
		return v.Allocate
	}).(ElasticsearchIndexLifecycleWarmAllocatePtrOutput)
}

// Force merges the index into the specified maximum number of segments. This action makes the index read-only.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Forcemerge() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmForcemerge {
		if v == nil {
			return nil
		}
		return v.Forcemerge
	}).(ElasticsearchIndexLifecycleWarmForcemergePtrOutput)
}

// Moves the index to the data tier that corresponds to the current phase by updating the "index.routing.allocation.include.*tier*preference" index setting.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Migrate() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmMigrate {
		if v == nil {
			return nil
		}
		return v.Migrate
	}).(ElasticsearchIndexLifecycleWarmMigratePtrOutput)
}

// ILM moves indices through the lifecycle according to their age. To control the timing of these transitions, you set a minimum age for each phase.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) MinAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *string {
		if v == nil {
			return nil
		}
		return v.MinAge
	}).(pulumi.StringPtrOutput)
}

// Makes the index read-only.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Readonly() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmReadonly {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(ElasticsearchIndexLifecycleWarmReadonlyPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) SetPriority() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmSetPriority {
		if v == nil {
			return nil
		}
		return v.SetPriority
	}).(ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput)
}

// Sets a source index to read-only and shrinks it into a new index with fewer primary shards.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Shrink() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmShrink {
		if v == nil {
			return nil
		}
		return v.Shrink
	}).(ElasticsearchIndexLifecycleWarmShrinkPtrOutput)
}

// Convert a follower index to a regular index. Performed automatically before a rollover, shrink, or searchable snapshot action.
func (o ElasticsearchIndexLifecycleWarmPtrOutput) Unfollow() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarm) *ElasticsearchIndexLifecycleWarmUnfollow {
		if v == nil {
			return nil
		}
		return v.Unfollow
	}).(ElasticsearchIndexLifecycleWarmUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleWarmAllocate struct {
	Exclude          *string `pulumi:"exclude"`
	Include          *string `pulumi:"include"`
	NumberOfReplicas *int    `pulumi:"numberOfReplicas"`
	Require          *string `pulumi:"require"`
}

// ElasticsearchIndexLifecycleWarmAllocateInput is an input type that accepts ElasticsearchIndexLifecycleWarmAllocateArgs and ElasticsearchIndexLifecycleWarmAllocateOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmAllocateInput` via:
//
//          ElasticsearchIndexLifecycleWarmAllocateArgs{...}
type ElasticsearchIndexLifecycleWarmAllocateInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmAllocateOutput() ElasticsearchIndexLifecycleWarmAllocateOutput
	ToElasticsearchIndexLifecycleWarmAllocateOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmAllocateOutput
}

type ElasticsearchIndexLifecycleWarmAllocateArgs struct {
	Exclude          pulumi.StringPtrInput `pulumi:"exclude"`
	Include          pulumi.StringPtrInput `pulumi:"include"`
	NumberOfReplicas pulumi.IntPtrInput    `pulumi:"numberOfReplicas"`
	Require          pulumi.StringPtrInput `pulumi:"require"`
}

func (ElasticsearchIndexLifecycleWarmAllocateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmAllocate)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmAllocateArgs) ToElasticsearchIndexLifecycleWarmAllocateOutput() ElasticsearchIndexLifecycleWarmAllocateOutput {
	return i.ToElasticsearchIndexLifecycleWarmAllocateOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmAllocateArgs) ToElasticsearchIndexLifecycleWarmAllocateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmAllocateOutput)
}

func (i ElasticsearchIndexLifecycleWarmAllocateArgs) ToElasticsearchIndexLifecycleWarmAllocatePtrOutput() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmAllocateArgs) ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmAllocateOutput).ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmAllocatePtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmAllocateArgs, ElasticsearchIndexLifecycleWarmAllocatePtr and ElasticsearchIndexLifecycleWarmAllocatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmAllocatePtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmAllocateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmAllocatePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmAllocatePtrOutput() ElasticsearchIndexLifecycleWarmAllocatePtrOutput
	ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmAllocatePtrOutput
}

type elasticsearchIndexLifecycleWarmAllocatePtrType ElasticsearchIndexLifecycleWarmAllocateArgs

func ElasticsearchIndexLifecycleWarmAllocatePtr(v *ElasticsearchIndexLifecycleWarmAllocateArgs) ElasticsearchIndexLifecycleWarmAllocatePtrInput {
	return (*elasticsearchIndexLifecycleWarmAllocatePtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmAllocatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmAllocate)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmAllocatePtrType) ToElasticsearchIndexLifecycleWarmAllocatePtrOutput() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmAllocatePtrType) ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmAllocatePtrOutput)
}

type ElasticsearchIndexLifecycleWarmAllocateOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmAllocateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmAllocate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) ToElasticsearchIndexLifecycleWarmAllocateOutput() ElasticsearchIndexLifecycleWarmAllocateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) ToElasticsearchIndexLifecycleWarmAllocateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) ToElasticsearchIndexLifecycleWarmAllocatePtrOutput() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmAllocate) *ElasticsearchIndexLifecycleWarmAllocate {
		return &v
	}).(ElasticsearchIndexLifecycleWarmAllocatePtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmAllocate) *string { return v.Exclude }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmAllocate) *string { return v.Include }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmAllocate) *int { return v.NumberOfReplicas }).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocateOutput) Require() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmAllocate) *string { return v.Require }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleWarmAllocatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmAllocatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmAllocate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) ToElasticsearchIndexLifecycleWarmAllocatePtrOutput() ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) ToElasticsearchIndexLifecycleWarmAllocatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmAllocatePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) Elem() ElasticsearchIndexLifecycleWarmAllocateOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmAllocate) ElasticsearchIndexLifecycleWarmAllocate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmAllocate
		return ret
	}).(ElasticsearchIndexLifecycleWarmAllocateOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) Exclude() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Exclude
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) Include() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Include
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) NumberOfReplicas() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmAllocate) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfReplicas
	}).(pulumi.IntPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmAllocatePtrOutput) Require() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmAllocate) *string {
		if v == nil {
			return nil
		}
		return v.Require
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexLifecycleWarmForcemerge struct {
	IndexCodec     *string `pulumi:"indexCodec"`
	MaxNumSegments int     `pulumi:"maxNumSegments"`
}

// ElasticsearchIndexLifecycleWarmForcemergeInput is an input type that accepts ElasticsearchIndexLifecycleWarmForcemergeArgs and ElasticsearchIndexLifecycleWarmForcemergeOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmForcemergeInput` via:
//
//          ElasticsearchIndexLifecycleWarmForcemergeArgs{...}
type ElasticsearchIndexLifecycleWarmForcemergeInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmForcemergeOutput() ElasticsearchIndexLifecycleWarmForcemergeOutput
	ToElasticsearchIndexLifecycleWarmForcemergeOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmForcemergeOutput
}

type ElasticsearchIndexLifecycleWarmForcemergeArgs struct {
	IndexCodec     pulumi.StringPtrInput `pulumi:"indexCodec"`
	MaxNumSegments pulumi.IntInput       `pulumi:"maxNumSegments"`
}

func (ElasticsearchIndexLifecycleWarmForcemergeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmForcemerge)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmForcemergeArgs) ToElasticsearchIndexLifecycleWarmForcemergeOutput() ElasticsearchIndexLifecycleWarmForcemergeOutput {
	return i.ToElasticsearchIndexLifecycleWarmForcemergeOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmForcemergeArgs) ToElasticsearchIndexLifecycleWarmForcemergeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmForcemergeOutput)
}

func (i ElasticsearchIndexLifecycleWarmForcemergeArgs) ToElasticsearchIndexLifecycleWarmForcemergePtrOutput() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmForcemergeArgs) ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmForcemergeOutput).ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmForcemergePtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmForcemergeArgs, ElasticsearchIndexLifecycleWarmForcemergePtr and ElasticsearchIndexLifecycleWarmForcemergePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmForcemergePtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmForcemergeArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmForcemergePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmForcemergePtrOutput() ElasticsearchIndexLifecycleWarmForcemergePtrOutput
	ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmForcemergePtrOutput
}

type elasticsearchIndexLifecycleWarmForcemergePtrType ElasticsearchIndexLifecycleWarmForcemergeArgs

func ElasticsearchIndexLifecycleWarmForcemergePtr(v *ElasticsearchIndexLifecycleWarmForcemergeArgs) ElasticsearchIndexLifecycleWarmForcemergePtrInput {
	return (*elasticsearchIndexLifecycleWarmForcemergePtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmForcemergePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmForcemerge)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmForcemergePtrType) ToElasticsearchIndexLifecycleWarmForcemergePtrOutput() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmForcemergePtrType) ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmForcemergePtrOutput)
}

type ElasticsearchIndexLifecycleWarmForcemergeOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmForcemergeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmForcemerge)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) ToElasticsearchIndexLifecycleWarmForcemergeOutput() ElasticsearchIndexLifecycleWarmForcemergeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) ToElasticsearchIndexLifecycleWarmForcemergeOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergeOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) ToElasticsearchIndexLifecycleWarmForcemergePtrOutput() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmForcemerge) *ElasticsearchIndexLifecycleWarmForcemerge {
		return &v
	}).(ElasticsearchIndexLifecycleWarmForcemergePtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) IndexCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmForcemerge) *string { return v.IndexCodec }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmForcemergeOutput) MaxNumSegments() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmForcemerge) int { return v.MaxNumSegments }).(pulumi.IntOutput)
}

type ElasticsearchIndexLifecycleWarmForcemergePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmForcemergePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmForcemerge)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmForcemergePtrOutput) ToElasticsearchIndexLifecycleWarmForcemergePtrOutput() ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmForcemergePtrOutput) ToElasticsearchIndexLifecycleWarmForcemergePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmForcemergePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmForcemergePtrOutput) Elem() ElasticsearchIndexLifecycleWarmForcemergeOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmForcemerge) ElasticsearchIndexLifecycleWarmForcemerge {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmForcemerge
		return ret
	}).(ElasticsearchIndexLifecycleWarmForcemergeOutput)
}

func (o ElasticsearchIndexLifecycleWarmForcemergePtrOutput) IndexCodec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmForcemerge) *string {
		if v == nil {
			return nil
		}
		return v.IndexCodec
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmForcemergePtrOutput) MaxNumSegments() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmForcemerge) *int {
		if v == nil {
			return nil
		}
		return &v.MaxNumSegments
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleWarmMigrate struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleWarmMigrateInput is an input type that accepts ElasticsearchIndexLifecycleWarmMigrateArgs and ElasticsearchIndexLifecycleWarmMigrateOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmMigrateInput` via:
//
//          ElasticsearchIndexLifecycleWarmMigrateArgs{...}
type ElasticsearchIndexLifecycleWarmMigrateInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmMigrateOutput() ElasticsearchIndexLifecycleWarmMigrateOutput
	ToElasticsearchIndexLifecycleWarmMigrateOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmMigrateOutput
}

type ElasticsearchIndexLifecycleWarmMigrateArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleWarmMigrateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmMigrate)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmMigrateArgs) ToElasticsearchIndexLifecycleWarmMigrateOutput() ElasticsearchIndexLifecycleWarmMigrateOutput {
	return i.ToElasticsearchIndexLifecycleWarmMigrateOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmMigrateArgs) ToElasticsearchIndexLifecycleWarmMigrateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigrateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmMigrateOutput)
}

func (i ElasticsearchIndexLifecycleWarmMigrateArgs) ToElasticsearchIndexLifecycleWarmMigratePtrOutput() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmMigrateArgs) ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmMigrateOutput).ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmMigratePtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmMigrateArgs, ElasticsearchIndexLifecycleWarmMigratePtr and ElasticsearchIndexLifecycleWarmMigratePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmMigratePtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmMigrateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmMigratePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmMigratePtrOutput() ElasticsearchIndexLifecycleWarmMigratePtrOutput
	ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmMigratePtrOutput
}

type elasticsearchIndexLifecycleWarmMigratePtrType ElasticsearchIndexLifecycleWarmMigrateArgs

func ElasticsearchIndexLifecycleWarmMigratePtr(v *ElasticsearchIndexLifecycleWarmMigrateArgs) ElasticsearchIndexLifecycleWarmMigratePtrInput {
	return (*elasticsearchIndexLifecycleWarmMigratePtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmMigratePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmMigrate)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmMigratePtrType) ToElasticsearchIndexLifecycleWarmMigratePtrOutput() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmMigratePtrType) ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmMigratePtrOutput)
}

type ElasticsearchIndexLifecycleWarmMigrateOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmMigrateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmMigrate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmMigrateOutput) ToElasticsearchIndexLifecycleWarmMigrateOutput() ElasticsearchIndexLifecycleWarmMigrateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmMigrateOutput) ToElasticsearchIndexLifecycleWarmMigrateOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigrateOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmMigrateOutput) ToElasticsearchIndexLifecycleWarmMigratePtrOutput() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmMigrateOutput) ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmMigrate) *ElasticsearchIndexLifecycleWarmMigrate {
		return &v
	}).(ElasticsearchIndexLifecycleWarmMigratePtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmMigrateOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmMigrate) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarmMigratePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmMigratePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmMigrate)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmMigratePtrOutput) ToElasticsearchIndexLifecycleWarmMigratePtrOutput() ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmMigratePtrOutput) ToElasticsearchIndexLifecycleWarmMigratePtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmMigratePtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmMigratePtrOutput) Elem() ElasticsearchIndexLifecycleWarmMigrateOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmMigrate) ElasticsearchIndexLifecycleWarmMigrate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmMigrate
		return ret
	}).(ElasticsearchIndexLifecycleWarmMigrateOutput)
}

func (o ElasticsearchIndexLifecycleWarmMigratePtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmMigrate) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarmReadonly struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleWarmReadonlyInput is an input type that accepts ElasticsearchIndexLifecycleWarmReadonlyArgs and ElasticsearchIndexLifecycleWarmReadonlyOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmReadonlyInput` via:
//
//          ElasticsearchIndexLifecycleWarmReadonlyArgs{...}
type ElasticsearchIndexLifecycleWarmReadonlyInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmReadonlyOutput() ElasticsearchIndexLifecycleWarmReadonlyOutput
	ToElasticsearchIndexLifecycleWarmReadonlyOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmReadonlyOutput
}

type ElasticsearchIndexLifecycleWarmReadonlyArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleWarmReadonlyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmReadonly)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmReadonlyArgs) ToElasticsearchIndexLifecycleWarmReadonlyOutput() ElasticsearchIndexLifecycleWarmReadonlyOutput {
	return i.ToElasticsearchIndexLifecycleWarmReadonlyOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmReadonlyArgs) ToElasticsearchIndexLifecycleWarmReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmReadonlyOutput)
}

func (i ElasticsearchIndexLifecycleWarmReadonlyArgs) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutput() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmReadonlyArgs) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmReadonlyOutput).ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmReadonlyPtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmReadonlyArgs, ElasticsearchIndexLifecycleWarmReadonlyPtr and ElasticsearchIndexLifecycleWarmReadonlyPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmReadonlyPtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmReadonlyArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmReadonlyPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmReadonlyPtrOutput() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput
	ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmReadonlyPtrOutput
}

type elasticsearchIndexLifecycleWarmReadonlyPtrType ElasticsearchIndexLifecycleWarmReadonlyArgs

func ElasticsearchIndexLifecycleWarmReadonlyPtr(v *ElasticsearchIndexLifecycleWarmReadonlyArgs) ElasticsearchIndexLifecycleWarmReadonlyPtrInput {
	return (*elasticsearchIndexLifecycleWarmReadonlyPtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmReadonlyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmReadonly)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmReadonlyPtrType) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutput() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmReadonlyPtrType) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmReadonlyPtrOutput)
}

type ElasticsearchIndexLifecycleWarmReadonlyOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmReadonlyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmReadonlyOutput) ToElasticsearchIndexLifecycleWarmReadonlyOutput() ElasticsearchIndexLifecycleWarmReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmReadonlyOutput) ToElasticsearchIndexLifecycleWarmReadonlyOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmReadonlyOutput) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutput() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmReadonlyOutput) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmReadonly) *ElasticsearchIndexLifecycleWarmReadonly {
		return &v
	}).(ElasticsearchIndexLifecycleWarmReadonlyPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmReadonlyOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmReadonly) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarmReadonlyPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmReadonlyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmReadonly)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmReadonlyPtrOutput) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutput() ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmReadonlyPtrOutput) ToElasticsearchIndexLifecycleWarmReadonlyPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmReadonlyPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmReadonlyPtrOutput) Elem() ElasticsearchIndexLifecycleWarmReadonlyOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmReadonly) ElasticsearchIndexLifecycleWarmReadonly {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmReadonly
		return ret
	}).(ElasticsearchIndexLifecycleWarmReadonlyOutput)
}

func (o ElasticsearchIndexLifecycleWarmReadonlyPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmReadonly) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarmSetPriority struct {
	Priority int `pulumi:"priority"`
}

// ElasticsearchIndexLifecycleWarmSetPriorityInput is an input type that accepts ElasticsearchIndexLifecycleWarmSetPriorityArgs and ElasticsearchIndexLifecycleWarmSetPriorityOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmSetPriorityInput` via:
//
//          ElasticsearchIndexLifecycleWarmSetPriorityArgs{...}
type ElasticsearchIndexLifecycleWarmSetPriorityInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmSetPriorityOutput() ElasticsearchIndexLifecycleWarmSetPriorityOutput
	ToElasticsearchIndexLifecycleWarmSetPriorityOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmSetPriorityOutput
}

type ElasticsearchIndexLifecycleWarmSetPriorityArgs struct {
	Priority pulumi.IntInput `pulumi:"priority"`
}

func (ElasticsearchIndexLifecycleWarmSetPriorityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmSetPriority)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmSetPriorityArgs) ToElasticsearchIndexLifecycleWarmSetPriorityOutput() ElasticsearchIndexLifecycleWarmSetPriorityOutput {
	return i.ToElasticsearchIndexLifecycleWarmSetPriorityOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmSetPriorityArgs) ToElasticsearchIndexLifecycleWarmSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmSetPriorityOutput)
}

func (i ElasticsearchIndexLifecycleWarmSetPriorityArgs) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutput() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmSetPriorityArgs) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmSetPriorityOutput).ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmSetPriorityPtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmSetPriorityArgs, ElasticsearchIndexLifecycleWarmSetPriorityPtr and ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmSetPriorityPtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmSetPriorityArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmSetPriorityPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutput() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput
	ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput
}

type elasticsearchIndexLifecycleWarmSetPriorityPtrType ElasticsearchIndexLifecycleWarmSetPriorityArgs

func ElasticsearchIndexLifecycleWarmSetPriorityPtr(v *ElasticsearchIndexLifecycleWarmSetPriorityArgs) ElasticsearchIndexLifecycleWarmSetPriorityPtrInput {
	return (*elasticsearchIndexLifecycleWarmSetPriorityPtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmSetPriorityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmSetPriority)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmSetPriorityPtrType) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutput() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmSetPriorityPtrType) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput)
}

type ElasticsearchIndexLifecycleWarmSetPriorityOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmSetPriorityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityOutput) ToElasticsearchIndexLifecycleWarmSetPriorityOutput() ElasticsearchIndexLifecycleWarmSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityOutput) ToElasticsearchIndexLifecycleWarmSetPriorityOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityOutput) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutput() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityOutput) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmSetPriority) *ElasticsearchIndexLifecycleWarmSetPriority {
		return &v
	}).(ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmSetPriority) int { return v.Priority }).(pulumi.IntOutput)
}

type ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmSetPriority)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutput() ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput) ToElasticsearchIndexLifecycleWarmSetPriorityPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput) Elem() ElasticsearchIndexLifecycleWarmSetPriorityOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmSetPriority) ElasticsearchIndexLifecycleWarmSetPriority {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmSetPriority
		return ret
	}).(ElasticsearchIndexLifecycleWarmSetPriorityOutput)
}

func (o ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmSetPriority) *int {
		if v == nil {
			return nil
		}
		return &v.Priority
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleWarmShrink struct {
	MaxPrimaryShardSize *string `pulumi:"maxPrimaryShardSize"`
	NumberOfShards      *int    `pulumi:"numberOfShards"`
}

// ElasticsearchIndexLifecycleWarmShrinkInput is an input type that accepts ElasticsearchIndexLifecycleWarmShrinkArgs and ElasticsearchIndexLifecycleWarmShrinkOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmShrinkInput` via:
//
//          ElasticsearchIndexLifecycleWarmShrinkArgs{...}
type ElasticsearchIndexLifecycleWarmShrinkInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmShrinkOutput() ElasticsearchIndexLifecycleWarmShrinkOutput
	ToElasticsearchIndexLifecycleWarmShrinkOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmShrinkOutput
}

type ElasticsearchIndexLifecycleWarmShrinkArgs struct {
	MaxPrimaryShardSize pulumi.StringPtrInput `pulumi:"maxPrimaryShardSize"`
	NumberOfShards      pulumi.IntPtrInput    `pulumi:"numberOfShards"`
}

func (ElasticsearchIndexLifecycleWarmShrinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmShrink)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmShrinkArgs) ToElasticsearchIndexLifecycleWarmShrinkOutput() ElasticsearchIndexLifecycleWarmShrinkOutput {
	return i.ToElasticsearchIndexLifecycleWarmShrinkOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmShrinkArgs) ToElasticsearchIndexLifecycleWarmShrinkOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmShrinkOutput)
}

func (i ElasticsearchIndexLifecycleWarmShrinkArgs) ToElasticsearchIndexLifecycleWarmShrinkPtrOutput() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmShrinkArgs) ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmShrinkOutput).ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmShrinkPtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmShrinkArgs, ElasticsearchIndexLifecycleWarmShrinkPtr and ElasticsearchIndexLifecycleWarmShrinkPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmShrinkPtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmShrinkArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmShrinkPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmShrinkPtrOutput() ElasticsearchIndexLifecycleWarmShrinkPtrOutput
	ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmShrinkPtrOutput
}

type elasticsearchIndexLifecycleWarmShrinkPtrType ElasticsearchIndexLifecycleWarmShrinkArgs

func ElasticsearchIndexLifecycleWarmShrinkPtr(v *ElasticsearchIndexLifecycleWarmShrinkArgs) ElasticsearchIndexLifecycleWarmShrinkPtrInput {
	return (*elasticsearchIndexLifecycleWarmShrinkPtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmShrinkPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmShrink)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmShrinkPtrType) ToElasticsearchIndexLifecycleWarmShrinkPtrOutput() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmShrinkPtrType) ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmShrinkPtrOutput)
}

type ElasticsearchIndexLifecycleWarmShrinkOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmShrinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmShrink)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) ToElasticsearchIndexLifecycleWarmShrinkOutput() ElasticsearchIndexLifecycleWarmShrinkOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) ToElasticsearchIndexLifecycleWarmShrinkOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) ToElasticsearchIndexLifecycleWarmShrinkPtrOutput() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmShrink) *ElasticsearchIndexLifecycleWarmShrink {
		return &v
	}).(ElasticsearchIndexLifecycleWarmShrinkPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmShrink) *string { return v.MaxPrimaryShardSize }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmShrinkOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmShrink) *int { return v.NumberOfShards }).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleWarmShrinkPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmShrinkPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmShrink)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmShrinkPtrOutput) ToElasticsearchIndexLifecycleWarmShrinkPtrOutput() ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmShrinkPtrOutput) ToElasticsearchIndexLifecycleWarmShrinkPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmShrinkPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmShrinkPtrOutput) Elem() ElasticsearchIndexLifecycleWarmShrinkOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmShrink) ElasticsearchIndexLifecycleWarmShrink {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmShrink
		return ret
	}).(ElasticsearchIndexLifecycleWarmShrinkOutput)
}

func (o ElasticsearchIndexLifecycleWarmShrinkPtrOutput) MaxPrimaryShardSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmShrink) *string {
		if v == nil {
			return nil
		}
		return v.MaxPrimaryShardSize
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmShrinkPtrOutput) NumberOfShards() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmShrink) *int {
		if v == nil {
			return nil
		}
		return v.NumberOfShards
	}).(pulumi.IntPtrOutput)
}

type ElasticsearchIndexLifecycleWarmUnfollow struct {
	Enabled *bool `pulumi:"enabled"`
}

// ElasticsearchIndexLifecycleWarmUnfollowInput is an input type that accepts ElasticsearchIndexLifecycleWarmUnfollowArgs and ElasticsearchIndexLifecycleWarmUnfollowOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmUnfollowInput` via:
//
//          ElasticsearchIndexLifecycleWarmUnfollowArgs{...}
type ElasticsearchIndexLifecycleWarmUnfollowInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmUnfollowOutput() ElasticsearchIndexLifecycleWarmUnfollowOutput
	ToElasticsearchIndexLifecycleWarmUnfollowOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmUnfollowOutput
}

type ElasticsearchIndexLifecycleWarmUnfollowArgs struct {
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (ElasticsearchIndexLifecycleWarmUnfollowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmUnfollow)(nil)).Elem()
}

func (i ElasticsearchIndexLifecycleWarmUnfollowArgs) ToElasticsearchIndexLifecycleWarmUnfollowOutput() ElasticsearchIndexLifecycleWarmUnfollowOutput {
	return i.ToElasticsearchIndexLifecycleWarmUnfollowOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmUnfollowArgs) ToElasticsearchIndexLifecycleWarmUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmUnfollowOutput)
}

func (i ElasticsearchIndexLifecycleWarmUnfollowArgs) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutput() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexLifecycleWarmUnfollowArgs) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmUnfollowOutput).ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(ctx)
}

// ElasticsearchIndexLifecycleWarmUnfollowPtrInput is an input type that accepts ElasticsearchIndexLifecycleWarmUnfollowArgs, ElasticsearchIndexLifecycleWarmUnfollowPtr and ElasticsearchIndexLifecycleWarmUnfollowPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexLifecycleWarmUnfollowPtrInput` via:
//
//          ElasticsearchIndexLifecycleWarmUnfollowArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexLifecycleWarmUnfollowPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexLifecycleWarmUnfollowPtrOutput() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput
	ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(context.Context) ElasticsearchIndexLifecycleWarmUnfollowPtrOutput
}

type elasticsearchIndexLifecycleWarmUnfollowPtrType ElasticsearchIndexLifecycleWarmUnfollowArgs

func ElasticsearchIndexLifecycleWarmUnfollowPtr(v *ElasticsearchIndexLifecycleWarmUnfollowArgs) ElasticsearchIndexLifecycleWarmUnfollowPtrInput {
	return (*elasticsearchIndexLifecycleWarmUnfollowPtrType)(v)
}

func (*elasticsearchIndexLifecycleWarmUnfollowPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmUnfollow)(nil)).Elem()
}

func (i *elasticsearchIndexLifecycleWarmUnfollowPtrType) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutput() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return i.ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexLifecycleWarmUnfollowPtrType) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexLifecycleWarmUnfollowPtrOutput)
}

type ElasticsearchIndexLifecycleWarmUnfollowOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmUnfollowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexLifecycleWarmUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmUnfollowOutput) ToElasticsearchIndexLifecycleWarmUnfollowOutput() ElasticsearchIndexLifecycleWarmUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmUnfollowOutput) ToElasticsearchIndexLifecycleWarmUnfollowOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmUnfollowOutput) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutput() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o.ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexLifecycleWarmUnfollowOutput) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexLifecycleWarmUnfollow) *ElasticsearchIndexLifecycleWarmUnfollow {
		return &v
	}).(ElasticsearchIndexLifecycleWarmUnfollowPtrOutput)
}

func (o ElasticsearchIndexLifecycleWarmUnfollowOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexLifecycleWarmUnfollow) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexLifecycleWarmUnfollowPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexLifecycleWarmUnfollowPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexLifecycleWarmUnfollow)(nil)).Elem()
}

func (o ElasticsearchIndexLifecycleWarmUnfollowPtrOutput) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutput() ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmUnfollowPtrOutput) ToElasticsearchIndexLifecycleWarmUnfollowPtrOutputWithContext(ctx context.Context) ElasticsearchIndexLifecycleWarmUnfollowPtrOutput {
	return o
}

func (o ElasticsearchIndexLifecycleWarmUnfollowPtrOutput) Elem() ElasticsearchIndexLifecycleWarmUnfollowOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmUnfollow) ElasticsearchIndexLifecycleWarmUnfollow {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexLifecycleWarmUnfollow
		return ret
	}).(ElasticsearchIndexLifecycleWarmUnfollowOutput)
}

func (o ElasticsearchIndexLifecycleWarmUnfollowPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexLifecycleWarmUnfollow) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexSettings struct {
	// Defines the setting for the index.
	Settings []ElasticsearchIndexSettingsSetting `pulumi:"settings"`
}

// ElasticsearchIndexSettingsInput is an input type that accepts ElasticsearchIndexSettingsArgs and ElasticsearchIndexSettingsOutput values.
// You can construct a concrete instance of `ElasticsearchIndexSettingsInput` via:
//
//          ElasticsearchIndexSettingsArgs{...}
type ElasticsearchIndexSettingsInput interface {
	pulumi.Input

	ToElasticsearchIndexSettingsOutput() ElasticsearchIndexSettingsOutput
	ToElasticsearchIndexSettingsOutputWithContext(context.Context) ElasticsearchIndexSettingsOutput
}

type ElasticsearchIndexSettingsArgs struct {
	// Defines the setting for the index.
	Settings ElasticsearchIndexSettingsSettingArrayInput `pulumi:"settings"`
}

func (ElasticsearchIndexSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexSettings)(nil)).Elem()
}

func (i ElasticsearchIndexSettingsArgs) ToElasticsearchIndexSettingsOutput() ElasticsearchIndexSettingsOutput {
	return i.ToElasticsearchIndexSettingsOutputWithContext(context.Background())
}

func (i ElasticsearchIndexSettingsArgs) ToElasticsearchIndexSettingsOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexSettingsOutput)
}

func (i ElasticsearchIndexSettingsArgs) ToElasticsearchIndexSettingsPtrOutput() ElasticsearchIndexSettingsPtrOutput {
	return i.ToElasticsearchIndexSettingsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexSettingsArgs) ToElasticsearchIndexSettingsPtrOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexSettingsOutput).ToElasticsearchIndexSettingsPtrOutputWithContext(ctx)
}

// ElasticsearchIndexSettingsPtrInput is an input type that accepts ElasticsearchIndexSettingsArgs, ElasticsearchIndexSettingsPtr and ElasticsearchIndexSettingsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexSettingsPtrInput` via:
//
//          ElasticsearchIndexSettingsArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexSettingsPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexSettingsPtrOutput() ElasticsearchIndexSettingsPtrOutput
	ToElasticsearchIndexSettingsPtrOutputWithContext(context.Context) ElasticsearchIndexSettingsPtrOutput
}

type elasticsearchIndexSettingsPtrType ElasticsearchIndexSettingsArgs

func ElasticsearchIndexSettingsPtr(v *ElasticsearchIndexSettingsArgs) ElasticsearchIndexSettingsPtrInput {
	return (*elasticsearchIndexSettingsPtrType)(v)
}

func (*elasticsearchIndexSettingsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexSettings)(nil)).Elem()
}

func (i *elasticsearchIndexSettingsPtrType) ToElasticsearchIndexSettingsPtrOutput() ElasticsearchIndexSettingsPtrOutput {
	return i.ToElasticsearchIndexSettingsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexSettingsPtrType) ToElasticsearchIndexSettingsPtrOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexSettingsPtrOutput)
}

type ElasticsearchIndexSettingsOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexSettings)(nil)).Elem()
}

func (o ElasticsearchIndexSettingsOutput) ToElasticsearchIndexSettingsOutput() ElasticsearchIndexSettingsOutput {
	return o
}

func (o ElasticsearchIndexSettingsOutput) ToElasticsearchIndexSettingsOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsOutput {
	return o
}

func (o ElasticsearchIndexSettingsOutput) ToElasticsearchIndexSettingsPtrOutput() ElasticsearchIndexSettingsPtrOutput {
	return o.ToElasticsearchIndexSettingsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexSettingsOutput) ToElasticsearchIndexSettingsPtrOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexSettings) *ElasticsearchIndexSettings {
		return &v
	}).(ElasticsearchIndexSettingsPtrOutput)
}

// Defines the setting for the index.
func (o ElasticsearchIndexSettingsOutput) Settings() ElasticsearchIndexSettingsSettingArrayOutput {
	return o.ApplyT(func(v ElasticsearchIndexSettings) []ElasticsearchIndexSettingsSetting { return v.Settings }).(ElasticsearchIndexSettingsSettingArrayOutput)
}

type ElasticsearchIndexSettingsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexSettingsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexSettings)(nil)).Elem()
}

func (o ElasticsearchIndexSettingsPtrOutput) ToElasticsearchIndexSettingsPtrOutput() ElasticsearchIndexSettingsPtrOutput {
	return o
}

func (o ElasticsearchIndexSettingsPtrOutput) ToElasticsearchIndexSettingsPtrOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsPtrOutput {
	return o
}

func (o ElasticsearchIndexSettingsPtrOutput) Elem() ElasticsearchIndexSettingsOutput {
	return o.ApplyT(func(v *ElasticsearchIndexSettings) ElasticsearchIndexSettings {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexSettings
		return ret
	}).(ElasticsearchIndexSettingsOutput)
}

// Defines the setting for the index.
func (o ElasticsearchIndexSettingsPtrOutput) Settings() ElasticsearchIndexSettingsSettingArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIndexSettings) []ElasticsearchIndexSettingsSetting {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(ElasticsearchIndexSettingsSettingArrayOutput)
}

type ElasticsearchIndexSettingsSetting struct {
	// Name of the index you wish to create.
	Name  string `pulumi:"name"`
	Value string `pulumi:"value"`
}

// ElasticsearchIndexSettingsSettingInput is an input type that accepts ElasticsearchIndexSettingsSettingArgs and ElasticsearchIndexSettingsSettingOutput values.
// You can construct a concrete instance of `ElasticsearchIndexSettingsSettingInput` via:
//
//          ElasticsearchIndexSettingsSettingArgs{...}
type ElasticsearchIndexSettingsSettingInput interface {
	pulumi.Input

	ToElasticsearchIndexSettingsSettingOutput() ElasticsearchIndexSettingsSettingOutput
	ToElasticsearchIndexSettingsSettingOutputWithContext(context.Context) ElasticsearchIndexSettingsSettingOutput
}

type ElasticsearchIndexSettingsSettingArgs struct {
	// Name of the index you wish to create.
	Name  pulumi.StringInput `pulumi:"name"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (ElasticsearchIndexSettingsSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexSettingsSetting)(nil)).Elem()
}

func (i ElasticsearchIndexSettingsSettingArgs) ToElasticsearchIndexSettingsSettingOutput() ElasticsearchIndexSettingsSettingOutput {
	return i.ToElasticsearchIndexSettingsSettingOutputWithContext(context.Background())
}

func (i ElasticsearchIndexSettingsSettingArgs) ToElasticsearchIndexSettingsSettingOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexSettingsSettingOutput)
}

// ElasticsearchIndexSettingsSettingArrayInput is an input type that accepts ElasticsearchIndexSettingsSettingArray and ElasticsearchIndexSettingsSettingArrayOutput values.
// You can construct a concrete instance of `ElasticsearchIndexSettingsSettingArrayInput` via:
//
//          ElasticsearchIndexSettingsSettingArray{ ElasticsearchIndexSettingsSettingArgs{...} }
type ElasticsearchIndexSettingsSettingArrayInput interface {
	pulumi.Input

	ToElasticsearchIndexSettingsSettingArrayOutput() ElasticsearchIndexSettingsSettingArrayOutput
	ToElasticsearchIndexSettingsSettingArrayOutputWithContext(context.Context) ElasticsearchIndexSettingsSettingArrayOutput
}

type ElasticsearchIndexSettingsSettingArray []ElasticsearchIndexSettingsSettingInput

func (ElasticsearchIndexSettingsSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexSettingsSetting)(nil)).Elem()
}

func (i ElasticsearchIndexSettingsSettingArray) ToElasticsearchIndexSettingsSettingArrayOutput() ElasticsearchIndexSettingsSettingArrayOutput {
	return i.ToElasticsearchIndexSettingsSettingArrayOutputWithContext(context.Background())
}

func (i ElasticsearchIndexSettingsSettingArray) ToElasticsearchIndexSettingsSettingArrayOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexSettingsSettingArrayOutput)
}

type ElasticsearchIndexSettingsSettingOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexSettingsSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexSettingsSetting)(nil)).Elem()
}

func (o ElasticsearchIndexSettingsSettingOutput) ToElasticsearchIndexSettingsSettingOutput() ElasticsearchIndexSettingsSettingOutput {
	return o
}

func (o ElasticsearchIndexSettingsSettingOutput) ToElasticsearchIndexSettingsSettingOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsSettingOutput {
	return o
}

// Name of the index you wish to create.
func (o ElasticsearchIndexSettingsSettingOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexSettingsSetting) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElasticsearchIndexSettingsSettingOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexSettingsSetting) string { return v.Value }).(pulumi.StringOutput)
}

type ElasticsearchIndexSettingsSettingArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexSettingsSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexSettingsSetting)(nil)).Elem()
}

func (o ElasticsearchIndexSettingsSettingArrayOutput) ToElasticsearchIndexSettingsSettingArrayOutput() ElasticsearchIndexSettingsSettingArrayOutput {
	return o
}

func (o ElasticsearchIndexSettingsSettingArrayOutput) ToElasticsearchIndexSettingsSettingArrayOutputWithContext(ctx context.Context) ElasticsearchIndexSettingsSettingArrayOutput {
	return o
}

func (o ElasticsearchIndexSettingsSettingArrayOutput) Index(i pulumi.IntInput) ElasticsearchIndexSettingsSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchIndexSettingsSetting {
		return vs[0].([]ElasticsearchIndexSettingsSetting)[vs[1].(int)]
	}).(ElasticsearchIndexSettingsSettingOutput)
}

type ElasticsearchIndexTemplateDataStream struct {
	// If true, the data stream is hidden.
	Hidden *bool `pulumi:"hidden"`
}

// ElasticsearchIndexTemplateDataStreamInput is an input type that accepts ElasticsearchIndexTemplateDataStreamArgs and ElasticsearchIndexTemplateDataStreamOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateDataStreamInput` via:
//
//          ElasticsearchIndexTemplateDataStreamArgs{...}
type ElasticsearchIndexTemplateDataStreamInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateDataStreamOutput() ElasticsearchIndexTemplateDataStreamOutput
	ToElasticsearchIndexTemplateDataStreamOutputWithContext(context.Context) ElasticsearchIndexTemplateDataStreamOutput
}

type ElasticsearchIndexTemplateDataStreamArgs struct {
	// If true, the data stream is hidden.
	Hidden pulumi.BoolPtrInput `pulumi:"hidden"`
}

func (ElasticsearchIndexTemplateDataStreamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateDataStream)(nil)).Elem()
}

func (i ElasticsearchIndexTemplateDataStreamArgs) ToElasticsearchIndexTemplateDataStreamOutput() ElasticsearchIndexTemplateDataStreamOutput {
	return i.ToElasticsearchIndexTemplateDataStreamOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateDataStreamArgs) ToElasticsearchIndexTemplateDataStreamOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateDataStreamOutput)
}

func (i ElasticsearchIndexTemplateDataStreamArgs) ToElasticsearchIndexTemplateDataStreamPtrOutput() ElasticsearchIndexTemplateDataStreamPtrOutput {
	return i.ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateDataStreamArgs) ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateDataStreamOutput).ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(ctx)
}

// ElasticsearchIndexTemplateDataStreamPtrInput is an input type that accepts ElasticsearchIndexTemplateDataStreamArgs, ElasticsearchIndexTemplateDataStreamPtr and ElasticsearchIndexTemplateDataStreamPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateDataStreamPtrInput` via:
//
//          ElasticsearchIndexTemplateDataStreamArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexTemplateDataStreamPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateDataStreamPtrOutput() ElasticsearchIndexTemplateDataStreamPtrOutput
	ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(context.Context) ElasticsearchIndexTemplateDataStreamPtrOutput
}

type elasticsearchIndexTemplateDataStreamPtrType ElasticsearchIndexTemplateDataStreamArgs

func ElasticsearchIndexTemplateDataStreamPtr(v *ElasticsearchIndexTemplateDataStreamArgs) ElasticsearchIndexTemplateDataStreamPtrInput {
	return (*elasticsearchIndexTemplateDataStreamPtrType)(v)
}

func (*elasticsearchIndexTemplateDataStreamPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateDataStream)(nil)).Elem()
}

func (i *elasticsearchIndexTemplateDataStreamPtrType) ToElasticsearchIndexTemplateDataStreamPtrOutput() ElasticsearchIndexTemplateDataStreamPtrOutput {
	return i.ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexTemplateDataStreamPtrType) ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateDataStreamPtrOutput)
}

type ElasticsearchIndexTemplateDataStreamOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateDataStreamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateDataStream)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateDataStreamOutput) ToElasticsearchIndexTemplateDataStreamOutput() ElasticsearchIndexTemplateDataStreamOutput {
	return o
}

func (o ElasticsearchIndexTemplateDataStreamOutput) ToElasticsearchIndexTemplateDataStreamOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamOutput {
	return o
}

func (o ElasticsearchIndexTemplateDataStreamOutput) ToElasticsearchIndexTemplateDataStreamPtrOutput() ElasticsearchIndexTemplateDataStreamPtrOutput {
	return o.ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexTemplateDataStreamOutput) ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexTemplateDataStream) *ElasticsearchIndexTemplateDataStream {
		return &v
	}).(ElasticsearchIndexTemplateDataStreamPtrOutput)
}

// If true, the data stream is hidden.
func (o ElasticsearchIndexTemplateDataStreamOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateDataStream) *bool { return v.Hidden }).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexTemplateDataStreamPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateDataStreamPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateDataStream)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateDataStreamPtrOutput) ToElasticsearchIndexTemplateDataStreamPtrOutput() ElasticsearchIndexTemplateDataStreamPtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateDataStreamPtrOutput) ToElasticsearchIndexTemplateDataStreamPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateDataStreamPtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateDataStreamPtrOutput) Elem() ElasticsearchIndexTemplateDataStreamOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateDataStream) ElasticsearchIndexTemplateDataStream {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexTemplateDataStream
		return ret
	}).(ElasticsearchIndexTemplateDataStreamOutput)
}

// If true, the data stream is hidden.
func (o ElasticsearchIndexTemplateDataStreamPtrOutput) Hidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateDataStream) *bool {
		if v == nil {
			return nil
		}
		return v.Hidden
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchIndexTemplateElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchIndexTemplateElasticsearchConnectionInput is an input type that accepts ElasticsearchIndexTemplateElasticsearchConnectionArgs and ElasticsearchIndexTemplateElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateElasticsearchConnectionInput` via:
//
//          ElasticsearchIndexTemplateElasticsearchConnectionArgs{...}
type ElasticsearchIndexTemplateElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateElasticsearchConnectionOutput() ElasticsearchIndexTemplateElasticsearchConnectionOutput
	ToElasticsearchIndexTemplateElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchIndexTemplateElasticsearchConnectionOutput
}

type ElasticsearchIndexTemplateElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchIndexTemplateElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchIndexTemplateElasticsearchConnectionArgs) ToElasticsearchIndexTemplateElasticsearchConnectionOutput() ElasticsearchIndexTemplateElasticsearchConnectionOutput {
	return i.ToElasticsearchIndexTemplateElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateElasticsearchConnectionArgs) ToElasticsearchIndexTemplateElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateElasticsearchConnectionOutput)
}

func (i ElasticsearchIndexTemplateElasticsearchConnectionArgs) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutput() ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateElasticsearchConnectionArgs) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateElasticsearchConnectionOutput).ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchIndexTemplateElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchIndexTemplateElasticsearchConnectionArgs, ElasticsearchIndexTemplateElasticsearchConnectionPtr and ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchIndexTemplateElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexTemplateElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutput() ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput
	ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput
}

type elasticsearchIndexTemplateElasticsearchConnectionPtrType ElasticsearchIndexTemplateElasticsearchConnectionArgs

func ElasticsearchIndexTemplateElasticsearchConnectionPtr(v *ElasticsearchIndexTemplateElasticsearchConnectionArgs) ElasticsearchIndexTemplateElasticsearchConnectionPtrInput {
	return (*elasticsearchIndexTemplateElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchIndexTemplateElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchIndexTemplateElasticsearchConnectionPtrType) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutput() ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexTemplateElasticsearchConnectionPtrType) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput)
}

type ElasticsearchIndexTemplateElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) ToElasticsearchIndexTemplateElasticsearchConnectionOutput() ElasticsearchIndexTemplateElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) ToElasticsearchIndexTemplateElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutput() ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexTemplateElasticsearchConnection) *ElasticsearchIndexTemplateElasticsearchConnection {
		return &v
	}).(ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexTemplateElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutput() ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) ToElasticsearchIndexTemplateElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) Elem() ElasticsearchIndexTemplateElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) ElasticsearchIndexTemplateElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexTemplateElasticsearchConnection
		return ret
	}).(ElasticsearchIndexTemplateElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexTemplateTemplate struct {
	// Alias to add.
	Aliases []ElasticsearchIndexTemplateTemplateAlias `pulumi:"aliases"`
	// Mapping for fields in the index.
	Mappings *string `pulumi:"mappings"`
	// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
	Settings *string `pulumi:"settings"`
}

// ElasticsearchIndexTemplateTemplateInput is an input type that accepts ElasticsearchIndexTemplateTemplateArgs and ElasticsearchIndexTemplateTemplateOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateTemplateInput` via:
//
//          ElasticsearchIndexTemplateTemplateArgs{...}
type ElasticsearchIndexTemplateTemplateInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateTemplateOutput() ElasticsearchIndexTemplateTemplateOutput
	ToElasticsearchIndexTemplateTemplateOutputWithContext(context.Context) ElasticsearchIndexTemplateTemplateOutput
}

type ElasticsearchIndexTemplateTemplateArgs struct {
	// Alias to add.
	Aliases ElasticsearchIndexTemplateTemplateAliasArrayInput `pulumi:"aliases"`
	// Mapping for fields in the index.
	Mappings pulumi.StringPtrInput `pulumi:"mappings"`
	// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
	Settings pulumi.StringPtrInput `pulumi:"settings"`
}

func (ElasticsearchIndexTemplateTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateTemplate)(nil)).Elem()
}

func (i ElasticsearchIndexTemplateTemplateArgs) ToElasticsearchIndexTemplateTemplateOutput() ElasticsearchIndexTemplateTemplateOutput {
	return i.ToElasticsearchIndexTemplateTemplateOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateTemplateArgs) ToElasticsearchIndexTemplateTemplateOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateTemplateOutput)
}

func (i ElasticsearchIndexTemplateTemplateArgs) ToElasticsearchIndexTemplateTemplatePtrOutput() ElasticsearchIndexTemplateTemplatePtrOutput {
	return i.ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateTemplateArgs) ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateTemplateOutput).ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(ctx)
}

// ElasticsearchIndexTemplateTemplatePtrInput is an input type that accepts ElasticsearchIndexTemplateTemplateArgs, ElasticsearchIndexTemplateTemplatePtr and ElasticsearchIndexTemplateTemplatePtrOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateTemplatePtrInput` via:
//
//          ElasticsearchIndexTemplateTemplateArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIndexTemplateTemplatePtrInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateTemplatePtrOutput() ElasticsearchIndexTemplateTemplatePtrOutput
	ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(context.Context) ElasticsearchIndexTemplateTemplatePtrOutput
}

type elasticsearchIndexTemplateTemplatePtrType ElasticsearchIndexTemplateTemplateArgs

func ElasticsearchIndexTemplateTemplatePtr(v *ElasticsearchIndexTemplateTemplateArgs) ElasticsearchIndexTemplateTemplatePtrInput {
	return (*elasticsearchIndexTemplateTemplatePtrType)(v)
}

func (*elasticsearchIndexTemplateTemplatePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateTemplate)(nil)).Elem()
}

func (i *elasticsearchIndexTemplateTemplatePtrType) ToElasticsearchIndexTemplateTemplatePtrOutput() ElasticsearchIndexTemplateTemplatePtrOutput {
	return i.ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(context.Background())
}

func (i *elasticsearchIndexTemplateTemplatePtrType) ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplatePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateTemplatePtrOutput)
}

type ElasticsearchIndexTemplateTemplateOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateTemplate)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateTemplateOutput) ToElasticsearchIndexTemplateTemplateOutput() ElasticsearchIndexTemplateTemplateOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateOutput) ToElasticsearchIndexTemplateTemplateOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateOutput) ToElasticsearchIndexTemplateTemplatePtrOutput() ElasticsearchIndexTemplateTemplatePtrOutput {
	return o.ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(context.Background())
}

func (o ElasticsearchIndexTemplateTemplateOutput) ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplatePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIndexTemplateTemplate) *ElasticsearchIndexTemplateTemplate {
		return &v
	}).(ElasticsearchIndexTemplateTemplatePtrOutput)
}

// Alias to add.
func (o ElasticsearchIndexTemplateTemplateOutput) Aliases() ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplate) []ElasticsearchIndexTemplateTemplateAlias { return v.Aliases }).(ElasticsearchIndexTemplateTemplateAliasArrayOutput)
}

// Mapping for fields in the index.
func (o ElasticsearchIndexTemplateTemplateOutput) Mappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplate) *string { return v.Mappings }).(pulumi.StringPtrOutput)
}

// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
func (o ElasticsearchIndexTemplateTemplateOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplate) *string { return v.Settings }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexTemplateTemplatePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateTemplatePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIndexTemplateTemplate)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateTemplatePtrOutput) ToElasticsearchIndexTemplateTemplatePtrOutput() ElasticsearchIndexTemplateTemplatePtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplatePtrOutput) ToElasticsearchIndexTemplateTemplatePtrOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplatePtrOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplatePtrOutput) Elem() ElasticsearchIndexTemplateTemplateOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateTemplate) ElasticsearchIndexTemplateTemplate {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIndexTemplateTemplate
		return ret
	}).(ElasticsearchIndexTemplateTemplateOutput)
}

// Alias to add.
func (o ElasticsearchIndexTemplateTemplatePtrOutput) Aliases() ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateTemplate) []ElasticsearchIndexTemplateTemplateAlias {
		if v == nil {
			return nil
		}
		return v.Aliases
	}).(ElasticsearchIndexTemplateTemplateAliasArrayOutput)
}

// Mapping for fields in the index.
func (o ElasticsearchIndexTemplateTemplatePtrOutput) Mappings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Mappings
	}).(pulumi.StringPtrOutput)
}

// Configuration options for the index. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules.html#index-modules-settings
func (o ElasticsearchIndexTemplateTemplatePtrOutput) Settings() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIndexTemplateTemplate) *string {
		if v == nil {
			return nil
		}
		return v.Settings
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexTemplateTemplateAlias struct {
	Filter       *string `pulumi:"filter"`
	IndexRouting *string `pulumi:"indexRouting"`
	IsHidden     *bool   `pulumi:"isHidden"`
	IsWriteIndex *bool   `pulumi:"isWriteIndex"`
	// Name of the index template to create.
	Name          string  `pulumi:"name"`
	Routing       *string `pulumi:"routing"`
	SearchRouting *string `pulumi:"searchRouting"`
}

// ElasticsearchIndexTemplateTemplateAliasInput is an input type that accepts ElasticsearchIndexTemplateTemplateAliasArgs and ElasticsearchIndexTemplateTemplateAliasOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateTemplateAliasInput` via:
//
//          ElasticsearchIndexTemplateTemplateAliasArgs{...}
type ElasticsearchIndexTemplateTemplateAliasInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateTemplateAliasOutput() ElasticsearchIndexTemplateTemplateAliasOutput
	ToElasticsearchIndexTemplateTemplateAliasOutputWithContext(context.Context) ElasticsearchIndexTemplateTemplateAliasOutput
}

type ElasticsearchIndexTemplateTemplateAliasArgs struct {
	Filter       pulumi.StringPtrInput `pulumi:"filter"`
	IndexRouting pulumi.StringPtrInput `pulumi:"indexRouting"`
	IsHidden     pulumi.BoolPtrInput   `pulumi:"isHidden"`
	IsWriteIndex pulumi.BoolPtrInput   `pulumi:"isWriteIndex"`
	// Name of the index template to create.
	Name          pulumi.StringInput    `pulumi:"name"`
	Routing       pulumi.StringPtrInput `pulumi:"routing"`
	SearchRouting pulumi.StringPtrInput `pulumi:"searchRouting"`
}

func (ElasticsearchIndexTemplateTemplateAliasArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateTemplateAlias)(nil)).Elem()
}

func (i ElasticsearchIndexTemplateTemplateAliasArgs) ToElasticsearchIndexTemplateTemplateAliasOutput() ElasticsearchIndexTemplateTemplateAliasOutput {
	return i.ToElasticsearchIndexTemplateTemplateAliasOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateTemplateAliasArgs) ToElasticsearchIndexTemplateTemplateAliasOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateAliasOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateTemplateAliasOutput)
}

// ElasticsearchIndexTemplateTemplateAliasArrayInput is an input type that accepts ElasticsearchIndexTemplateTemplateAliasArray and ElasticsearchIndexTemplateTemplateAliasArrayOutput values.
// You can construct a concrete instance of `ElasticsearchIndexTemplateTemplateAliasArrayInput` via:
//
//          ElasticsearchIndexTemplateTemplateAliasArray{ ElasticsearchIndexTemplateTemplateAliasArgs{...} }
type ElasticsearchIndexTemplateTemplateAliasArrayInput interface {
	pulumi.Input

	ToElasticsearchIndexTemplateTemplateAliasArrayOutput() ElasticsearchIndexTemplateTemplateAliasArrayOutput
	ToElasticsearchIndexTemplateTemplateAliasArrayOutputWithContext(context.Context) ElasticsearchIndexTemplateTemplateAliasArrayOutput
}

type ElasticsearchIndexTemplateTemplateAliasArray []ElasticsearchIndexTemplateTemplateAliasInput

func (ElasticsearchIndexTemplateTemplateAliasArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexTemplateTemplateAlias)(nil)).Elem()
}

func (i ElasticsearchIndexTemplateTemplateAliasArray) ToElasticsearchIndexTemplateTemplateAliasArrayOutput() ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return i.ToElasticsearchIndexTemplateTemplateAliasArrayOutputWithContext(context.Background())
}

func (i ElasticsearchIndexTemplateTemplateAliasArray) ToElasticsearchIndexTemplateTemplateAliasArrayOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIndexTemplateTemplateAliasArrayOutput)
}

type ElasticsearchIndexTemplateTemplateAliasOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateTemplateAliasOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIndexTemplateTemplateAlias)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) ToElasticsearchIndexTemplateTemplateAliasOutput() ElasticsearchIndexTemplateTemplateAliasOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) ToElasticsearchIndexTemplateTemplateAliasOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateAliasOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) IndexRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *string { return v.IndexRouting }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) IsHidden() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *bool { return v.IsHidden }).(pulumi.BoolPtrOutput)
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) IsWriteIndex() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *bool { return v.IsWriteIndex }).(pulumi.BoolPtrOutput)
}

// Name of the index template to create.
func (o ElasticsearchIndexTemplateTemplateAliasOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) string { return v.Name }).(pulumi.StringOutput)
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) Routing() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *string { return v.Routing }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIndexTemplateTemplateAliasOutput) SearchRouting() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIndexTemplateTemplateAlias) *string { return v.SearchRouting }).(pulumi.StringPtrOutput)
}

type ElasticsearchIndexTemplateTemplateAliasArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchIndexTemplateTemplateAliasArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchIndexTemplateTemplateAlias)(nil)).Elem()
}

func (o ElasticsearchIndexTemplateTemplateAliasArrayOutput) ToElasticsearchIndexTemplateTemplateAliasArrayOutput() ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateAliasArrayOutput) ToElasticsearchIndexTemplateTemplateAliasArrayOutputWithContext(ctx context.Context) ElasticsearchIndexTemplateTemplateAliasArrayOutput {
	return o
}

func (o ElasticsearchIndexTemplateTemplateAliasArrayOutput) Index(i pulumi.IntInput) ElasticsearchIndexTemplateTemplateAliasOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchIndexTemplateTemplateAlias {
		return vs[0].([]ElasticsearchIndexTemplateTemplateAlias)[vs[1].(int)]
	}).(ElasticsearchIndexTemplateTemplateAliasOutput)
}

type ElasticsearchIngestPipelineElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchIngestPipelineElasticsearchConnectionInput is an input type that accepts ElasticsearchIngestPipelineElasticsearchConnectionArgs and ElasticsearchIngestPipelineElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchIngestPipelineElasticsearchConnectionInput` via:
//
//          ElasticsearchIngestPipelineElasticsearchConnectionArgs{...}
type ElasticsearchIngestPipelineElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchIngestPipelineElasticsearchConnectionOutput() ElasticsearchIngestPipelineElasticsearchConnectionOutput
	ToElasticsearchIngestPipelineElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchIngestPipelineElasticsearchConnectionOutput
}

type ElasticsearchIngestPipelineElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchIngestPipelineElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestPipelineElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchIngestPipelineElasticsearchConnectionArgs) ToElasticsearchIngestPipelineElasticsearchConnectionOutput() ElasticsearchIngestPipelineElasticsearchConnectionOutput {
	return i.ToElasticsearchIngestPipelineElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchIngestPipelineElasticsearchConnectionArgs) ToElasticsearchIngestPipelineElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIngestPipelineElasticsearchConnectionOutput)
}

func (i ElasticsearchIngestPipelineElasticsearchConnectionArgs) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutput() ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchIngestPipelineElasticsearchConnectionArgs) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIngestPipelineElasticsearchConnectionOutput).ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchIngestPipelineElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchIngestPipelineElasticsearchConnectionArgs, ElasticsearchIngestPipelineElasticsearchConnectionPtr and ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchIngestPipelineElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchIngestPipelineElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchIngestPipelineElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutput() ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput
	ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput
}

type elasticsearchIngestPipelineElasticsearchConnectionPtrType ElasticsearchIngestPipelineElasticsearchConnectionArgs

func ElasticsearchIngestPipelineElasticsearchConnectionPtr(v *ElasticsearchIngestPipelineElasticsearchConnectionArgs) ElasticsearchIngestPipelineElasticsearchConnectionPtrInput {
	return (*elasticsearchIngestPipelineElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchIngestPipelineElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIngestPipelineElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchIngestPipelineElasticsearchConnectionPtrType) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutput() ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchIngestPipelineElasticsearchConnectionPtrType) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput)
}

type ElasticsearchIngestPipelineElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestPipelineElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestPipelineElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) ToElasticsearchIngestPipelineElasticsearchConnectionOutput() ElasticsearchIngestPipelineElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) ToElasticsearchIngestPipelineElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutput() ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchIngestPipelineElasticsearchConnection) *ElasticsearchIngestPipelineElasticsearchConnection {
		return &v
	}).(ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestPipelineElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestPipelineElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestPipelineElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestPipelineElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIngestPipelineElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestPipelineElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchIngestPipelineElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutput() ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) ToElasticsearchIngestPipelineElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) Elem() ElasticsearchIngestPipelineElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) ElasticsearchIngestPipelineElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchIngestPipelineElasticsearchConnection
		return ret
	}).(ElasticsearchIngestPipelineElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchIngestPipelineElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSecurityRoleApplication struct {
	// The name of the application to which this entry applies.
	Application string `pulumi:"application"`
	// A list of strings, where each element is the name of an application privilege or action.
	Privileges []string `pulumi:"privileges"`
	// A list resources to which the privileges are applied.
	Resources []string `pulumi:"resources"`
}

// ElasticsearchSecurityRoleApplicationInput is an input type that accepts ElasticsearchSecurityRoleApplicationArgs and ElasticsearchSecurityRoleApplicationOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleApplicationInput` via:
//
//          ElasticsearchSecurityRoleApplicationArgs{...}
type ElasticsearchSecurityRoleApplicationInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleApplicationOutput() ElasticsearchSecurityRoleApplicationOutput
	ToElasticsearchSecurityRoleApplicationOutputWithContext(context.Context) ElasticsearchSecurityRoleApplicationOutput
}

type ElasticsearchSecurityRoleApplicationArgs struct {
	// The name of the application to which this entry applies.
	Application pulumi.StringInput `pulumi:"application"`
	// A list of strings, where each element is the name of an application privilege or action.
	Privileges pulumi.StringArrayInput `pulumi:"privileges"`
	// A list resources to which the privileges are applied.
	Resources pulumi.StringArrayInput `pulumi:"resources"`
}

func (ElasticsearchSecurityRoleApplicationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleApplication)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleApplicationArgs) ToElasticsearchSecurityRoleApplicationOutput() ElasticsearchSecurityRoleApplicationOutput {
	return i.ToElasticsearchSecurityRoleApplicationOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleApplicationArgs) ToElasticsearchSecurityRoleApplicationOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleApplicationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleApplicationOutput)
}

// ElasticsearchSecurityRoleApplicationArrayInput is an input type that accepts ElasticsearchSecurityRoleApplicationArray and ElasticsearchSecurityRoleApplicationArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleApplicationArrayInput` via:
//
//          ElasticsearchSecurityRoleApplicationArray{ ElasticsearchSecurityRoleApplicationArgs{...} }
type ElasticsearchSecurityRoleApplicationArrayInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleApplicationArrayOutput() ElasticsearchSecurityRoleApplicationArrayOutput
	ToElasticsearchSecurityRoleApplicationArrayOutputWithContext(context.Context) ElasticsearchSecurityRoleApplicationArrayOutput
}

type ElasticsearchSecurityRoleApplicationArray []ElasticsearchSecurityRoleApplicationInput

func (ElasticsearchSecurityRoleApplicationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSecurityRoleApplication)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleApplicationArray) ToElasticsearchSecurityRoleApplicationArrayOutput() ElasticsearchSecurityRoleApplicationArrayOutput {
	return i.ToElasticsearchSecurityRoleApplicationArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleApplicationArray) ToElasticsearchSecurityRoleApplicationArrayOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleApplicationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleApplicationArrayOutput)
}

type ElasticsearchSecurityRoleApplicationOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleApplicationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleApplication)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleApplicationOutput) ToElasticsearchSecurityRoleApplicationOutput() ElasticsearchSecurityRoleApplicationOutput {
	return o
}

func (o ElasticsearchSecurityRoleApplicationOutput) ToElasticsearchSecurityRoleApplicationOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleApplicationOutput {
	return o
}

// The name of the application to which this entry applies.
func (o ElasticsearchSecurityRoleApplicationOutput) Application() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleApplication) string { return v.Application }).(pulumi.StringOutput)
}

// A list of strings, where each element is the name of an application privilege or action.
func (o ElasticsearchSecurityRoleApplicationOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleApplication) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

// A list resources to which the privileges are applied.
func (o ElasticsearchSecurityRoleApplicationOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleApplication) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

type ElasticsearchSecurityRoleApplicationArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleApplicationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSecurityRoleApplication)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleApplicationArrayOutput) ToElasticsearchSecurityRoleApplicationArrayOutput() ElasticsearchSecurityRoleApplicationArrayOutput {
	return o
}

func (o ElasticsearchSecurityRoleApplicationArrayOutput) ToElasticsearchSecurityRoleApplicationArrayOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleApplicationArrayOutput {
	return o
}

func (o ElasticsearchSecurityRoleApplicationArrayOutput) Index(i pulumi.IntInput) ElasticsearchSecurityRoleApplicationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSecurityRoleApplication {
		return vs[0].([]ElasticsearchSecurityRoleApplication)[vs[1].(int)]
	}).(ElasticsearchSecurityRoleApplicationOutput)
}

type ElasticsearchSecurityRoleElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchSecurityRoleElasticsearchConnectionInput is an input type that accepts ElasticsearchSecurityRoleElasticsearchConnectionArgs and ElasticsearchSecurityRoleElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleElasticsearchConnectionInput` via:
//
//          ElasticsearchSecurityRoleElasticsearchConnectionArgs{...}
type ElasticsearchSecurityRoleElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleElasticsearchConnectionOutput() ElasticsearchSecurityRoleElasticsearchConnectionOutput
	ToElasticsearchSecurityRoleElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchSecurityRoleElasticsearchConnectionOutput
}

type ElasticsearchSecurityRoleElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchSecurityRoleElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleElasticsearchConnectionArgs) ToElasticsearchSecurityRoleElasticsearchConnectionOutput() ElasticsearchSecurityRoleElasticsearchConnectionOutput {
	return i.ToElasticsearchSecurityRoleElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleElasticsearchConnectionArgs) ToElasticsearchSecurityRoleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleElasticsearchConnectionOutput)
}

func (i ElasticsearchSecurityRoleElasticsearchConnectionArgs) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutput() ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleElasticsearchConnectionArgs) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleElasticsearchConnectionOutput).ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchSecurityRoleElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchSecurityRoleElasticsearchConnectionArgs, ElasticsearchSecurityRoleElasticsearchConnectionPtr and ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchSecurityRoleElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSecurityRoleElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutput() ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput
	ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput
}

type elasticsearchSecurityRoleElasticsearchConnectionPtrType ElasticsearchSecurityRoleElasticsearchConnectionArgs

func ElasticsearchSecurityRoleElasticsearchConnectionPtr(v *ElasticsearchSecurityRoleElasticsearchConnectionArgs) ElasticsearchSecurityRoleElasticsearchConnectionPtrInput {
	return (*elasticsearchSecurityRoleElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchSecurityRoleElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityRoleElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchSecurityRoleElasticsearchConnectionPtrType) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutput() ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSecurityRoleElasticsearchConnectionPtrType) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput)
}

type ElasticsearchSecurityRoleElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) ToElasticsearchSecurityRoleElasticsearchConnectionOutput() ElasticsearchSecurityRoleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) ToElasticsearchSecurityRoleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutput() ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSecurityRoleElasticsearchConnection) *ElasticsearchSecurityRoleElasticsearchConnection {
		return &v
	}).(ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityRoleElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityRoleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutput() ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) ToElasticsearchSecurityRoleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) Elem() ElasticsearchSecurityRoleElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) ElasticsearchSecurityRoleElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSecurityRoleElasticsearchConnection
		return ret
	}).(ElasticsearchSecurityRoleElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSecurityRoleIndex struct {
	// The document fields that the owners of the role have read access to.
	FieldSecurity *ElasticsearchSecurityRoleIndexFieldSecurity `pulumi:"fieldSecurity"`
	// A list of indices (or index name patterns) to which the permissions in this entry apply.
	Names []string `pulumi:"names"`
	// The index level privileges that the owners of the role have on the specified indices.
	Privileges []string `pulumi:"privileges"`
	// A search query that defines the documents the owners of the role have read access to.
	Query *string `pulumi:"query"`
}

// ElasticsearchSecurityRoleIndexInput is an input type that accepts ElasticsearchSecurityRoleIndexArgs and ElasticsearchSecurityRoleIndexOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleIndexInput` via:
//
//          ElasticsearchSecurityRoleIndexArgs{...}
type ElasticsearchSecurityRoleIndexInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleIndexOutput() ElasticsearchSecurityRoleIndexOutput
	ToElasticsearchSecurityRoleIndexOutputWithContext(context.Context) ElasticsearchSecurityRoleIndexOutput
}

type ElasticsearchSecurityRoleIndexArgs struct {
	// The document fields that the owners of the role have read access to.
	FieldSecurity ElasticsearchSecurityRoleIndexFieldSecurityPtrInput `pulumi:"fieldSecurity"`
	// A list of indices (or index name patterns) to which the permissions in this entry apply.
	Names pulumi.StringArrayInput `pulumi:"names"`
	// The index level privileges that the owners of the role have on the specified indices.
	Privileges pulumi.StringArrayInput `pulumi:"privileges"`
	// A search query that defines the documents the owners of the role have read access to.
	Query pulumi.StringPtrInput `pulumi:"query"`
}

func (ElasticsearchSecurityRoleIndexArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleIndex)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleIndexArgs) ToElasticsearchSecurityRoleIndexOutput() ElasticsearchSecurityRoleIndexOutput {
	return i.ToElasticsearchSecurityRoleIndexOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleIndexArgs) ToElasticsearchSecurityRoleIndexOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleIndexOutput)
}

// ElasticsearchSecurityRoleIndexArrayInput is an input type that accepts ElasticsearchSecurityRoleIndexArray and ElasticsearchSecurityRoleIndexArrayOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleIndexArrayInput` via:
//
//          ElasticsearchSecurityRoleIndexArray{ ElasticsearchSecurityRoleIndexArgs{...} }
type ElasticsearchSecurityRoleIndexArrayInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleIndexArrayOutput() ElasticsearchSecurityRoleIndexArrayOutput
	ToElasticsearchSecurityRoleIndexArrayOutputWithContext(context.Context) ElasticsearchSecurityRoleIndexArrayOutput
}

type ElasticsearchSecurityRoleIndexArray []ElasticsearchSecurityRoleIndexInput

func (ElasticsearchSecurityRoleIndexArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSecurityRoleIndex)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleIndexArray) ToElasticsearchSecurityRoleIndexArrayOutput() ElasticsearchSecurityRoleIndexArrayOutput {
	return i.ToElasticsearchSecurityRoleIndexArrayOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleIndexArray) ToElasticsearchSecurityRoleIndexArrayOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleIndexArrayOutput)
}

type ElasticsearchSecurityRoleIndexOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleIndexOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleIndex)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleIndexOutput) ToElasticsearchSecurityRoleIndexOutput() ElasticsearchSecurityRoleIndexOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexOutput) ToElasticsearchSecurityRoleIndexOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexOutput {
	return o
}

// The document fields that the owners of the role have read access to.
func (o ElasticsearchSecurityRoleIndexOutput) FieldSecurity() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndex) *ElasticsearchSecurityRoleIndexFieldSecurity {
		return v.FieldSecurity
	}).(ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput)
}

// A list of indices (or index name patterns) to which the permissions in this entry apply.
func (o ElasticsearchSecurityRoleIndexOutput) Names() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndex) []string { return v.Names }).(pulumi.StringArrayOutput)
}

// The index level privileges that the owners of the role have on the specified indices.
func (o ElasticsearchSecurityRoleIndexOutput) Privileges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndex) []string { return v.Privileges }).(pulumi.StringArrayOutput)
}

// A search query that defines the documents the owners of the role have read access to.
func (o ElasticsearchSecurityRoleIndexOutput) Query() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndex) *string { return v.Query }).(pulumi.StringPtrOutput)
}

type ElasticsearchSecurityRoleIndexArrayOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleIndexArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ElasticsearchSecurityRoleIndex)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleIndexArrayOutput) ToElasticsearchSecurityRoleIndexArrayOutput() ElasticsearchSecurityRoleIndexArrayOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexArrayOutput) ToElasticsearchSecurityRoleIndexArrayOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexArrayOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexArrayOutput) Index(i pulumi.IntInput) ElasticsearchSecurityRoleIndexOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ElasticsearchSecurityRoleIndex {
		return vs[0].([]ElasticsearchSecurityRoleIndex)[vs[1].(int)]
	}).(ElasticsearchSecurityRoleIndexOutput)
}

type ElasticsearchSecurityRoleIndexFieldSecurity struct {
	Excepts []string `pulumi:"excepts"`
	Grants  []string `pulumi:"grants"`
}

// ElasticsearchSecurityRoleIndexFieldSecurityInput is an input type that accepts ElasticsearchSecurityRoleIndexFieldSecurityArgs and ElasticsearchSecurityRoleIndexFieldSecurityOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleIndexFieldSecurityInput` via:
//
//          ElasticsearchSecurityRoleIndexFieldSecurityArgs{...}
type ElasticsearchSecurityRoleIndexFieldSecurityInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleIndexFieldSecurityOutput() ElasticsearchSecurityRoleIndexFieldSecurityOutput
	ToElasticsearchSecurityRoleIndexFieldSecurityOutputWithContext(context.Context) ElasticsearchSecurityRoleIndexFieldSecurityOutput
}

type ElasticsearchSecurityRoleIndexFieldSecurityArgs struct {
	Excepts pulumi.StringArrayInput `pulumi:"excepts"`
	Grants  pulumi.StringArrayInput `pulumi:"grants"`
}

func (ElasticsearchSecurityRoleIndexFieldSecurityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleIndexFieldSecurity)(nil)).Elem()
}

func (i ElasticsearchSecurityRoleIndexFieldSecurityArgs) ToElasticsearchSecurityRoleIndexFieldSecurityOutput() ElasticsearchSecurityRoleIndexFieldSecurityOutput {
	return i.ToElasticsearchSecurityRoleIndexFieldSecurityOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleIndexFieldSecurityArgs) ToElasticsearchSecurityRoleIndexFieldSecurityOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleIndexFieldSecurityOutput)
}

func (i ElasticsearchSecurityRoleIndexFieldSecurityArgs) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutput() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return i.ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityRoleIndexFieldSecurityArgs) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleIndexFieldSecurityOutput).ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(ctx)
}

// ElasticsearchSecurityRoleIndexFieldSecurityPtrInput is an input type that accepts ElasticsearchSecurityRoleIndexFieldSecurityArgs, ElasticsearchSecurityRoleIndexFieldSecurityPtr and ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityRoleIndexFieldSecurityPtrInput` via:
//
//          ElasticsearchSecurityRoleIndexFieldSecurityArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSecurityRoleIndexFieldSecurityPtrInput interface {
	pulumi.Input

	ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutput() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput
	ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(context.Context) ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput
}

type elasticsearchSecurityRoleIndexFieldSecurityPtrType ElasticsearchSecurityRoleIndexFieldSecurityArgs

func ElasticsearchSecurityRoleIndexFieldSecurityPtr(v *ElasticsearchSecurityRoleIndexFieldSecurityArgs) ElasticsearchSecurityRoleIndexFieldSecurityPtrInput {
	return (*elasticsearchSecurityRoleIndexFieldSecurityPtrType)(v)
}

func (*elasticsearchSecurityRoleIndexFieldSecurityPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityRoleIndexFieldSecurity)(nil)).Elem()
}

func (i *elasticsearchSecurityRoleIndexFieldSecurityPtrType) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutput() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return i.ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSecurityRoleIndexFieldSecurityPtrType) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput)
}

type ElasticsearchSecurityRoleIndexFieldSecurityOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleIndexFieldSecurityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityRoleIndexFieldSecurity)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) ToElasticsearchSecurityRoleIndexFieldSecurityOutput() ElasticsearchSecurityRoleIndexFieldSecurityOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) ToElasticsearchSecurityRoleIndexFieldSecurityOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutput() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return o.ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSecurityRoleIndexFieldSecurity) *ElasticsearchSecurityRoleIndexFieldSecurity {
		return &v
	}).(ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput)
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) Excepts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndexFieldSecurity) []string { return v.Excepts }).(pulumi.StringArrayOutput)
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityOutput) Grants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityRoleIndexFieldSecurity) []string { return v.Grants }).(pulumi.StringArrayOutput)
}

type ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityRoleIndexFieldSecurity)(nil)).Elem()
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutput() ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) ToElasticsearchSecurityRoleIndexFieldSecurityPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput {
	return o
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) Elem() ElasticsearchSecurityRoleIndexFieldSecurityOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleIndexFieldSecurity) ElasticsearchSecurityRoleIndexFieldSecurity {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSecurityRoleIndexFieldSecurity
		return ret
	}).(ElasticsearchSecurityRoleIndexFieldSecurityOutput)
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) Excepts() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleIndexFieldSecurity) []string {
		if v == nil {
			return nil
		}
		return v.Excepts
	}).(pulumi.StringArrayOutput)
}

func (o ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput) Grants() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityRoleIndexFieldSecurity) []string {
		if v == nil {
			return nil
		}
		return v.Grants
	}).(pulumi.StringArrayOutput)
}

type ElasticsearchSecurityUserElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchSecurityUserElasticsearchConnectionInput is an input type that accepts ElasticsearchSecurityUserElasticsearchConnectionArgs and ElasticsearchSecurityUserElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityUserElasticsearchConnectionInput` via:
//
//          ElasticsearchSecurityUserElasticsearchConnectionArgs{...}
type ElasticsearchSecurityUserElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchSecurityUserElasticsearchConnectionOutput() ElasticsearchSecurityUserElasticsearchConnectionOutput
	ToElasticsearchSecurityUserElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchSecurityUserElasticsearchConnectionOutput
}

type ElasticsearchSecurityUserElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchSecurityUserElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityUserElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchSecurityUserElasticsearchConnectionArgs) ToElasticsearchSecurityUserElasticsearchConnectionOutput() ElasticsearchSecurityUserElasticsearchConnectionOutput {
	return i.ToElasticsearchSecurityUserElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityUserElasticsearchConnectionArgs) ToElasticsearchSecurityUserElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityUserElasticsearchConnectionOutput)
}

func (i ElasticsearchSecurityUserElasticsearchConnectionArgs) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutput() ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSecurityUserElasticsearchConnectionArgs) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityUserElasticsearchConnectionOutput).ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchSecurityUserElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchSecurityUserElasticsearchConnectionArgs, ElasticsearchSecurityUserElasticsearchConnectionPtr and ElasticsearchSecurityUserElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSecurityUserElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchSecurityUserElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSecurityUserElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchSecurityUserElasticsearchConnectionPtrOutput() ElasticsearchSecurityUserElasticsearchConnectionPtrOutput
	ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchSecurityUserElasticsearchConnectionPtrOutput
}

type elasticsearchSecurityUserElasticsearchConnectionPtrType ElasticsearchSecurityUserElasticsearchConnectionArgs

func ElasticsearchSecurityUserElasticsearchConnectionPtr(v *ElasticsearchSecurityUserElasticsearchConnectionArgs) ElasticsearchSecurityUserElasticsearchConnectionPtrInput {
	return (*elasticsearchSecurityUserElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchSecurityUserElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityUserElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchSecurityUserElasticsearchConnectionPtrType) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutput() ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSecurityUserElasticsearchConnectionPtrType) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSecurityUserElasticsearchConnectionPtrOutput)
}

type ElasticsearchSecurityUserElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityUserElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSecurityUserElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) ToElasticsearchSecurityUserElasticsearchConnectionOutput() ElasticsearchSecurityUserElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) ToElasticsearchSecurityUserElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutput() ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSecurityUserElasticsearchConnection) *ElasticsearchSecurityUserElasticsearchConnection {
		return &v
	}).(ElasticsearchSecurityUserElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityUserElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSecurityUserElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityUserElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityUserElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityUserElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSecurityUserElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchSecurityUserElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSecurityUserElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutput() ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) ToElasticsearchSecurityUserElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSecurityUserElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) Elem() ElasticsearchSecurityUserElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) ElasticsearchSecurityUserElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSecurityUserElasticsearchConnection
		return ret
	}).(ElasticsearchSecurityUserElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSecurityUserElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSecurityUserElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotLifecycleElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchSnapshotLifecycleElasticsearchConnectionInput is an input type that accepts ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs and ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotLifecycleElasticsearchConnectionInput` via:
//
//          ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs{...}
type ElasticsearchSnapshotLifecycleElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput
	ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput
}

type ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotLifecycleElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput {
	return i.ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput)
}

func (i ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput).ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs, ElasticsearchSnapshotLifecycleElasticsearchConnectionPtr and ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput
	ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput
}

type elasticsearchSnapshotLifecycleElasticsearchConnectionPtrType ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs

func ElasticsearchSnapshotLifecycleElasticsearchConnectionPtr(v *ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrInput {
	return (*elasticsearchSnapshotLifecycleElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchSnapshotLifecycleElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotLifecycleElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchSnapshotLifecycleElasticsearchConnectionPtrType) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotLifecycleElasticsearchConnectionPtrType) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput)
}

type ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotLifecycleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotLifecycleElasticsearchConnection) *ElasticsearchSnapshotLifecycleElasticsearchConnection {
		return &v
	}).(ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotLifecycleElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotLifecycleElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotLifecycleElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotLifecycleElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotLifecycleElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotLifecycleElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput() ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) ToElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) Elem() ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) ElasticsearchSnapshotLifecycleElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotLifecycleElasticsearchConnection
		return ret
	}).(ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotLifecycleElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryAzure struct {
	// Specifies the path within the container to the repository data.
	BasePath *string `pulumi:"basePath"`
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// Azure named client to use.
	Client *string `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Container name. You must create the Azure container before creating the repository.
	Container string `pulumi:"container"`
	// Location mode. `primaryOnly` or `secondaryOnly`. See: https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy
	LocationMode *string `pulumi:"locationMode"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
}

// ElasticsearchSnapshotRepositoryAzureInput is an input type that accepts ElasticsearchSnapshotRepositoryAzureArgs and ElasticsearchSnapshotRepositoryAzureOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryAzureInput` via:
//
//          ElasticsearchSnapshotRepositoryAzureArgs{...}
type ElasticsearchSnapshotRepositoryAzureInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryAzureOutput() ElasticsearchSnapshotRepositoryAzureOutput
	ToElasticsearchSnapshotRepositoryAzureOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryAzureOutput
}

type ElasticsearchSnapshotRepositoryAzureArgs struct {
	// Specifies the path within the container to the repository data.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// Azure named client to use.
	Client pulumi.StringPtrInput `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Container name. You must create the Azure container before creating the repository.
	Container pulumi.StringInput `pulumi:"container"`
	// Location mode. `primaryOnly` or `secondaryOnly`. See: https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy
	LocationMode pulumi.StringPtrInput `pulumi:"locationMode"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (ElasticsearchSnapshotRepositoryAzureArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryAzure)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryAzureArgs) ToElasticsearchSnapshotRepositoryAzureOutput() ElasticsearchSnapshotRepositoryAzureOutput {
	return i.ToElasticsearchSnapshotRepositoryAzureOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryAzureArgs) ToElasticsearchSnapshotRepositoryAzureOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzureOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryAzureOutput)
}

func (i ElasticsearchSnapshotRepositoryAzureArgs) ToElasticsearchSnapshotRepositoryAzurePtrOutput() ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return i.ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryAzureArgs) ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryAzureOutput).ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryAzurePtrInput is an input type that accepts ElasticsearchSnapshotRepositoryAzureArgs, ElasticsearchSnapshotRepositoryAzurePtr and ElasticsearchSnapshotRepositoryAzurePtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryAzurePtrInput` via:
//
//          ElasticsearchSnapshotRepositoryAzureArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryAzurePtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryAzurePtrOutput() ElasticsearchSnapshotRepositoryAzurePtrOutput
	ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryAzurePtrOutput
}

type elasticsearchSnapshotRepositoryAzurePtrType ElasticsearchSnapshotRepositoryAzureArgs

func ElasticsearchSnapshotRepositoryAzurePtr(v *ElasticsearchSnapshotRepositoryAzureArgs) ElasticsearchSnapshotRepositoryAzurePtrInput {
	return (*elasticsearchSnapshotRepositoryAzurePtrType)(v)
}

func (*elasticsearchSnapshotRepositoryAzurePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryAzure)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryAzurePtrType) ToElasticsearchSnapshotRepositoryAzurePtrOutput() ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return i.ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryAzurePtrType) ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryAzurePtrOutput)
}

type ElasticsearchSnapshotRepositoryAzureOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryAzureOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryAzure)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryAzureOutput) ToElasticsearchSnapshotRepositoryAzureOutput() ElasticsearchSnapshotRepositoryAzureOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryAzureOutput) ToElasticsearchSnapshotRepositoryAzureOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzureOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryAzureOutput) ToElasticsearchSnapshotRepositoryAzurePtrOutput() ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return o.ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryAzureOutput) ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryAzure) *ElasticsearchSnapshotRepositoryAzure {
		return &v
	}).(ElasticsearchSnapshotRepositoryAzurePtrOutput)
}

// Specifies the path within the container to the repository data.
func (o ElasticsearchSnapshotRepositoryAzureOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryAzureOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// Azure named client to use.
func (o ElasticsearchSnapshotRepositoryAzureOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.Client }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryAzureOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Container name. You must create the Azure container before creating the repository.
func (o ElasticsearchSnapshotRepositoryAzureOutput) Container() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) string { return v.Container }).(pulumi.StringOutput)
}

// Location mode. `primaryOnly` or `secondaryOnly`. See: https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy
func (o ElasticsearchSnapshotRepositoryAzureOutput) LocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.LocationMode }).(pulumi.StringPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryAzureOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryAzureOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryAzureOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryAzure) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryAzurePtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryAzurePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryAzure)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) ToElasticsearchSnapshotRepositoryAzurePtrOutput() ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) ToElasticsearchSnapshotRepositoryAzurePtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryAzurePtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) Elem() ElasticsearchSnapshotRepositoryAzureOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) ElasticsearchSnapshotRepositoryAzure {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryAzure
		return ret
	}).(ElasticsearchSnapshotRepositoryAzureOutput)
}

// Specifies the path within the container to the repository data.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.BasePath
	}).(pulumi.StringPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// Azure named client to use.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.Client
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Container name. You must create the Azure container before creating the repository.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) Container() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return &v.Container
	}).(pulumi.StringPtrOutput)
}

// Location mode. `primaryOnly` or `secondaryOnly`. See: https://docs.microsoft.com/en-us/azure/storage/common/storage-redundancy
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) LocationMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.LocationMode
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryAzurePtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryAzure) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryElasticsearchConnection struct {
	// Path to a custom Certificate Authority certificate
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure *bool `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password *string `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username *string `pulumi:"username"`
}

// ElasticsearchSnapshotRepositoryElasticsearchConnectionInput is an input type that accepts ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs and ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryElasticsearchConnectionInput` via:
//
//          ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs{...}
type ElasticsearchSnapshotRepositoryElasticsearchConnectionInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput
	ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput
}

type ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs struct {
	// Path to a custom Certificate Authority certificate
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	// Disable TLS certificate validation
	Insecure pulumi.BoolPtrInput `pulumi:"insecure"`
	// A password to use for API authentication to Elasticsearch.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// A username to use for API authentication to Elasticsearch.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryElasticsearchConnection)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput {
	return i.ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput)
}

func (i ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput).ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrInput is an input type that accepts ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs, ElasticsearchSnapshotRepositoryElasticsearchConnectionPtr and ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrInput` via:
//
//          ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput
	ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput
}

type elasticsearchSnapshotRepositoryElasticsearchConnectionPtrType ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs

func ElasticsearchSnapshotRepositoryElasticsearchConnectionPtr(v *ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrInput {
	return (*elasticsearchSnapshotRepositoryElasticsearchConnectionPtrType)(v)
}

func (*elasticsearchSnapshotRepositoryElasticsearchConnectionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryElasticsearchConnection)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryElasticsearchConnectionPtrType) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryElasticsearchConnectionPtrType) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput)
}

type ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return o.ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryElasticsearchConnection) *ElasticsearchSnapshotRepositoryElasticsearchConnection {
		return &v
	}).(ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryElasticsearchConnection) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryElasticsearchConnection) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryElasticsearchConnection) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryElasticsearchConnection) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryElasticsearchConnection) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryElasticsearchConnection)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput() ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) ToElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) Elem() ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) ElasticsearchSnapshotRepositoryElasticsearchConnection {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryElasticsearchConnection
		return ret
	}).(ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput)
}

// Path to a custom Certificate Authority certificate
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

// Disable TLS certificate validation
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

// A password to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// A username to use for API authentication to Elasticsearch.
func (o ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryElasticsearchConnection) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryFs struct {
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Location of the shared filesystem used to store and retrieve snapshots.
	Location string `pulumi:"location"`
	// Maximum number of snapshots the repository can contain.
	MaxNumberOfSnapshots *int `pulumi:"maxNumberOfSnapshots"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
}

// ElasticsearchSnapshotRepositoryFsInput is an input type that accepts ElasticsearchSnapshotRepositoryFsArgs and ElasticsearchSnapshotRepositoryFsOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryFsInput` via:
//
//          ElasticsearchSnapshotRepositoryFsArgs{...}
type ElasticsearchSnapshotRepositoryFsInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryFsOutput() ElasticsearchSnapshotRepositoryFsOutput
	ToElasticsearchSnapshotRepositoryFsOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryFsOutput
}

type ElasticsearchSnapshotRepositoryFsArgs struct {
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Location of the shared filesystem used to store and retrieve snapshots.
	Location pulumi.StringInput `pulumi:"location"`
	// Maximum number of snapshots the repository can contain.
	MaxNumberOfSnapshots pulumi.IntPtrInput `pulumi:"maxNumberOfSnapshots"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (ElasticsearchSnapshotRepositoryFsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryFs)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryFsArgs) ToElasticsearchSnapshotRepositoryFsOutput() ElasticsearchSnapshotRepositoryFsOutput {
	return i.ToElasticsearchSnapshotRepositoryFsOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryFsArgs) ToElasticsearchSnapshotRepositoryFsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryFsOutput)
}

func (i ElasticsearchSnapshotRepositoryFsArgs) ToElasticsearchSnapshotRepositoryFsPtrOutput() ElasticsearchSnapshotRepositoryFsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryFsArgs) ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryFsOutput).ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryFsPtrInput is an input type that accepts ElasticsearchSnapshotRepositoryFsArgs, ElasticsearchSnapshotRepositoryFsPtr and ElasticsearchSnapshotRepositoryFsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryFsPtrInput` via:
//
//          ElasticsearchSnapshotRepositoryFsArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryFsPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryFsPtrOutput() ElasticsearchSnapshotRepositoryFsPtrOutput
	ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryFsPtrOutput
}

type elasticsearchSnapshotRepositoryFsPtrType ElasticsearchSnapshotRepositoryFsArgs

func ElasticsearchSnapshotRepositoryFsPtr(v *ElasticsearchSnapshotRepositoryFsArgs) ElasticsearchSnapshotRepositoryFsPtrInput {
	return (*elasticsearchSnapshotRepositoryFsPtrType)(v)
}

func (*elasticsearchSnapshotRepositoryFsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryFs)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryFsPtrType) ToElasticsearchSnapshotRepositoryFsPtrOutput() ElasticsearchSnapshotRepositoryFsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryFsPtrType) ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryFsPtrOutput)
}

type ElasticsearchSnapshotRepositoryFsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryFsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryFs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryFsOutput) ToElasticsearchSnapshotRepositoryFsOutput() ElasticsearchSnapshotRepositoryFsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryFsOutput) ToElasticsearchSnapshotRepositoryFsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryFsOutput) ToElasticsearchSnapshotRepositoryFsPtrOutput() ElasticsearchSnapshotRepositoryFsPtrOutput {
	return o.ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryFsOutput) ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryFs) *ElasticsearchSnapshotRepositoryFs {
		return &v
	}).(ElasticsearchSnapshotRepositoryFsPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryFsOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryFsOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Location of the shared filesystem used to store and retrieve snapshots.
func (o ElasticsearchSnapshotRepositoryFsOutput) Location() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) string { return v.Location }).(pulumi.StringOutput)
}

// Maximum number of snapshots the repository can contain.
func (o ElasticsearchSnapshotRepositoryFsOutput) MaxNumberOfSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *int { return v.MaxNumberOfSnapshots }).(pulumi.IntPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryFsOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryFsOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryFsOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryFs) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryFsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryFsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryFs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryFsPtrOutput) ToElasticsearchSnapshotRepositoryFsPtrOutput() ElasticsearchSnapshotRepositoryFsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryFsPtrOutput) ToElasticsearchSnapshotRepositoryFsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryFsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryFsPtrOutput) Elem() ElasticsearchSnapshotRepositoryFsOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) ElasticsearchSnapshotRepositoryFs {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryFs
		return ret
	}).(ElasticsearchSnapshotRepositoryFsOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Location of the shared filesystem used to store and retrieve snapshots.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) Location() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *string {
		if v == nil {
			return nil
		}
		return &v.Location
	}).(pulumi.StringPtrOutput)
}

// Maximum number of snapshots the repository can contain.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) MaxNumberOfSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfSnapshots
	}).(pulumi.IntPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryFsPtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryFs) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryGcs struct {
	// Specifies the path within the bucket to the repository data. Defaults to the root of the bucket.
	BasePath *string `pulumi:"basePath"`
	// The name of the bucket to be used for snapshots.
	Bucket string `pulumi:"bucket"`
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// The name of the client to use to connect to Google Cloud Storage.
	Client *string `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
}

// ElasticsearchSnapshotRepositoryGcsInput is an input type that accepts ElasticsearchSnapshotRepositoryGcsArgs and ElasticsearchSnapshotRepositoryGcsOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryGcsInput` via:
//
//          ElasticsearchSnapshotRepositoryGcsArgs{...}
type ElasticsearchSnapshotRepositoryGcsInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryGcsOutput() ElasticsearchSnapshotRepositoryGcsOutput
	ToElasticsearchSnapshotRepositoryGcsOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryGcsOutput
}

type ElasticsearchSnapshotRepositoryGcsArgs struct {
	// Specifies the path within the bucket to the repository data. Defaults to the root of the bucket.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// The name of the bucket to be used for snapshots.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// The name of the client to use to connect to Google Cloud Storage.
	Client pulumi.StringPtrInput `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
}

func (ElasticsearchSnapshotRepositoryGcsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryGcs)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryGcsArgs) ToElasticsearchSnapshotRepositoryGcsOutput() ElasticsearchSnapshotRepositoryGcsOutput {
	return i.ToElasticsearchSnapshotRepositoryGcsOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryGcsArgs) ToElasticsearchSnapshotRepositoryGcsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryGcsOutput)
}

func (i ElasticsearchSnapshotRepositoryGcsArgs) ToElasticsearchSnapshotRepositoryGcsPtrOutput() ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryGcsArgs) ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryGcsOutput).ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryGcsPtrInput is an input type that accepts ElasticsearchSnapshotRepositoryGcsArgs, ElasticsearchSnapshotRepositoryGcsPtr and ElasticsearchSnapshotRepositoryGcsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryGcsPtrInput` via:
//
//          ElasticsearchSnapshotRepositoryGcsArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryGcsPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryGcsPtrOutput() ElasticsearchSnapshotRepositoryGcsPtrOutput
	ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryGcsPtrOutput
}

type elasticsearchSnapshotRepositoryGcsPtrType ElasticsearchSnapshotRepositoryGcsArgs

func ElasticsearchSnapshotRepositoryGcsPtr(v *ElasticsearchSnapshotRepositoryGcsArgs) ElasticsearchSnapshotRepositoryGcsPtrInput {
	return (*elasticsearchSnapshotRepositoryGcsPtrType)(v)
}

func (*elasticsearchSnapshotRepositoryGcsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryGcs)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryGcsPtrType) ToElasticsearchSnapshotRepositoryGcsPtrOutput() ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryGcsPtrType) ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryGcsPtrOutput)
}

type ElasticsearchSnapshotRepositoryGcsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryGcsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryGcs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryGcsOutput) ToElasticsearchSnapshotRepositoryGcsOutput() ElasticsearchSnapshotRepositoryGcsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryGcsOutput) ToElasticsearchSnapshotRepositoryGcsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryGcsOutput) ToElasticsearchSnapshotRepositoryGcsPtrOutput() ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return o.ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryGcsOutput) ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryGcs) *ElasticsearchSnapshotRepositoryGcs {
		return &v
	}).(ElasticsearchSnapshotRepositoryGcsPtrOutput)
}

// Specifies the path within the bucket to the repository data. Defaults to the root of the bucket.
func (o ElasticsearchSnapshotRepositoryGcsOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// The name of the bucket to be used for snapshots.
func (o ElasticsearchSnapshotRepositoryGcsOutput) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) string { return v.Bucket }).(pulumi.StringOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryGcsOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// The name of the client to use to connect to Google Cloud Storage.
func (o ElasticsearchSnapshotRepositoryGcsOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *string { return v.Client }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryGcsOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryGcsOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryGcsOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryGcsOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryGcs) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryGcsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryGcsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryGcs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) ToElasticsearchSnapshotRepositoryGcsPtrOutput() ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) ToElasticsearchSnapshotRepositoryGcsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryGcsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) Elem() ElasticsearchSnapshotRepositoryGcsOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) ElasticsearchSnapshotRepositoryGcs {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryGcs
		return ret
	}).(ElasticsearchSnapshotRepositoryGcsOutput)
}

// Specifies the path within the bucket to the repository data. Defaults to the root of the bucket.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return v.BasePath
	}).(pulumi.StringPtrOutput)
}

// The name of the bucket to be used for snapshots.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// The name of the client to use to connect to Google Cloud Storage.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return v.Client
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryGcsPtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryGcs) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

type ElasticsearchSnapshotRepositoryHdfs struct {
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Whether to load the default Hadoop configuration or not.
	LoadDefaults *bool `pulumi:"loadDefaults"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// The file path within the filesystem where data is stored/loaded.
	Path string `pulumi:"path"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
	// The uri address for hdfs. ex: "hdfs://\n\n:\n\n/".
	Uri string `pulumi:"uri"`
}

// ElasticsearchSnapshotRepositoryHdfsInput is an input type that accepts ElasticsearchSnapshotRepositoryHdfsArgs and ElasticsearchSnapshotRepositoryHdfsOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryHdfsInput` via:
//
//          ElasticsearchSnapshotRepositoryHdfsArgs{...}
type ElasticsearchSnapshotRepositoryHdfsInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryHdfsOutput() ElasticsearchSnapshotRepositoryHdfsOutput
	ToElasticsearchSnapshotRepositoryHdfsOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryHdfsOutput
}

type ElasticsearchSnapshotRepositoryHdfsArgs struct {
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Whether to load the default Hadoop configuration or not.
	LoadDefaults pulumi.BoolPtrInput `pulumi:"loadDefaults"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// The file path within the filesystem where data is stored/loaded.
	Path pulumi.StringInput `pulumi:"path"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// The uri address for hdfs. ex: "hdfs://\n\n:\n\n/".
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (ElasticsearchSnapshotRepositoryHdfsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryHdfs)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryHdfsArgs) ToElasticsearchSnapshotRepositoryHdfsOutput() ElasticsearchSnapshotRepositoryHdfsOutput {
	return i.ToElasticsearchSnapshotRepositoryHdfsOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryHdfsArgs) ToElasticsearchSnapshotRepositoryHdfsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryHdfsOutput)
}

func (i ElasticsearchSnapshotRepositoryHdfsArgs) ToElasticsearchSnapshotRepositoryHdfsPtrOutput() ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryHdfsArgs) ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryHdfsOutput).ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryHdfsPtrInput is an input type that accepts ElasticsearchSnapshotRepositoryHdfsArgs, ElasticsearchSnapshotRepositoryHdfsPtr and ElasticsearchSnapshotRepositoryHdfsPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryHdfsPtrInput` via:
//
//          ElasticsearchSnapshotRepositoryHdfsArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryHdfsPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryHdfsPtrOutput() ElasticsearchSnapshotRepositoryHdfsPtrOutput
	ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryHdfsPtrOutput
}

type elasticsearchSnapshotRepositoryHdfsPtrType ElasticsearchSnapshotRepositoryHdfsArgs

func ElasticsearchSnapshotRepositoryHdfsPtr(v *ElasticsearchSnapshotRepositoryHdfsArgs) ElasticsearchSnapshotRepositoryHdfsPtrInput {
	return (*elasticsearchSnapshotRepositoryHdfsPtrType)(v)
}

func (*elasticsearchSnapshotRepositoryHdfsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryHdfs)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryHdfsPtrType) ToElasticsearchSnapshotRepositoryHdfsPtrOutput() ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryHdfsPtrType) ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryHdfsPtrOutput)
}

type ElasticsearchSnapshotRepositoryHdfsOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryHdfsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryHdfs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryHdfsOutput) ToElasticsearchSnapshotRepositoryHdfsOutput() ElasticsearchSnapshotRepositoryHdfsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryHdfsOutput) ToElasticsearchSnapshotRepositoryHdfsOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryHdfsOutput) ToElasticsearchSnapshotRepositoryHdfsPtrOutput() ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return o.ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryHdfsOutput) ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryHdfs) *ElasticsearchSnapshotRepositoryHdfs {
		return &v
	}).(ElasticsearchSnapshotRepositoryHdfsPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Whether to load the default Hadoop configuration or not.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) LoadDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *bool { return v.LoadDefaults }).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// The file path within the filesystem where data is stored/loaded.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) string { return v.Path }).(pulumi.StringOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryHdfsOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// The uri address for hdfs. ex: "hdfs://\n\n:\n\n/".
func (o ElasticsearchSnapshotRepositoryHdfsOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryHdfs) string { return v.Uri }).(pulumi.StringOutput)
}

type ElasticsearchSnapshotRepositoryHdfsPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryHdfsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryHdfs)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) ToElasticsearchSnapshotRepositoryHdfsPtrOutput() ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) ToElasticsearchSnapshotRepositoryHdfsPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryHdfsPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) Elem() ElasticsearchSnapshotRepositoryHdfsOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) ElasticsearchSnapshotRepositoryHdfs {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryHdfs
		return ret
	}).(ElasticsearchSnapshotRepositoryHdfsOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Whether to load the default Hadoop configuration or not.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) LoadDefaults() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *bool {
		if v == nil {
			return nil
		}
		return v.LoadDefaults
	}).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// The file path within the filesystem where data is stored/loaded.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *string {
		if v == nil {
			return nil
		}
		return &v.Path
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

// The uri address for hdfs. ex: "hdfs://\n\n:\n\n/".
func (o ElasticsearchSnapshotRepositoryHdfsPtrOutput) Uri() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryHdfs) *string {
		if v == nil {
			return nil
		}
		return &v.Uri
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryS3 struct {
	// Specifies the path to the repository data within its bucket.
	BasePath *string `pulumi:"basePath"`
	// Name of the S3 bucket to use for snapshots.
	Bucket string `pulumi:"bucket"`
	// Minimum threshold below which the chunk is uploaded using a single request.
	BufferSize *string `pulumi:"bufferSize"`
	// The S3 repository supports all S3 canned ACLs.
	CannedAcl *string `pulumi:"cannedAcl"`
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// The name of the S3 client to use to connect to S3.
	Client *string `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
	// When true, files are encrypted server-side using AES-256 algorithm.
	ServerSideEncryption *bool `pulumi:"serverSideEncryption"`
	// Sets the S3 storage class for objects stored in the snapshot repository.
	StorageClass *string `pulumi:"storageClass"`
}

// ElasticsearchSnapshotRepositoryS3Input is an input type that accepts ElasticsearchSnapshotRepositoryS3Args and ElasticsearchSnapshotRepositoryS3Output values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryS3Input` via:
//
//          ElasticsearchSnapshotRepositoryS3Args{...}
type ElasticsearchSnapshotRepositoryS3Input interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryS3Output() ElasticsearchSnapshotRepositoryS3Output
	ToElasticsearchSnapshotRepositoryS3OutputWithContext(context.Context) ElasticsearchSnapshotRepositoryS3Output
}

type ElasticsearchSnapshotRepositoryS3Args struct {
	// Specifies the path to the repository data within its bucket.
	BasePath pulumi.StringPtrInput `pulumi:"basePath"`
	// Name of the S3 bucket to use for snapshots.
	Bucket pulumi.StringInput `pulumi:"bucket"`
	// Minimum threshold below which the chunk is uploaded using a single request.
	BufferSize pulumi.StringPtrInput `pulumi:"bufferSize"`
	// The S3 repository supports all S3 canned ACLs.
	CannedAcl pulumi.StringPtrInput `pulumi:"cannedAcl"`
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// The name of the S3 client to use to connect to S3.
	Client pulumi.StringPtrInput `pulumi:"client"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// When true, files are encrypted server-side using AES-256 algorithm.
	ServerSideEncryption pulumi.BoolPtrInput `pulumi:"serverSideEncryption"`
	// Sets the S3 storage class for objects stored in the snapshot repository.
	StorageClass pulumi.StringPtrInput `pulumi:"storageClass"`
}

func (ElasticsearchSnapshotRepositoryS3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryS3)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryS3Args) ToElasticsearchSnapshotRepositoryS3Output() ElasticsearchSnapshotRepositoryS3Output {
	return i.ToElasticsearchSnapshotRepositoryS3OutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryS3Args) ToElasticsearchSnapshotRepositoryS3OutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3Output {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryS3Output)
}

func (i ElasticsearchSnapshotRepositoryS3Args) ToElasticsearchSnapshotRepositoryS3PtrOutput() ElasticsearchSnapshotRepositoryS3PtrOutput {
	return i.ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryS3Args) ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryS3Output).ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryS3PtrInput is an input type that accepts ElasticsearchSnapshotRepositoryS3Args, ElasticsearchSnapshotRepositoryS3Ptr and ElasticsearchSnapshotRepositoryS3PtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryS3PtrInput` via:
//
//          ElasticsearchSnapshotRepositoryS3Args{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryS3PtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryS3PtrOutput() ElasticsearchSnapshotRepositoryS3PtrOutput
	ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryS3PtrOutput
}

type elasticsearchSnapshotRepositoryS3PtrType ElasticsearchSnapshotRepositoryS3Args

func ElasticsearchSnapshotRepositoryS3Ptr(v *ElasticsearchSnapshotRepositoryS3Args) ElasticsearchSnapshotRepositoryS3PtrInput {
	return (*elasticsearchSnapshotRepositoryS3PtrType)(v)
}

func (*elasticsearchSnapshotRepositoryS3PtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryS3)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryS3PtrType) ToElasticsearchSnapshotRepositoryS3PtrOutput() ElasticsearchSnapshotRepositoryS3PtrOutput {
	return i.ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryS3PtrType) ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3PtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryS3PtrOutput)
}

type ElasticsearchSnapshotRepositoryS3Output struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryS3Output) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryS3)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryS3Output) ToElasticsearchSnapshotRepositoryS3Output() ElasticsearchSnapshotRepositoryS3Output {
	return o
}

func (o ElasticsearchSnapshotRepositoryS3Output) ToElasticsearchSnapshotRepositoryS3OutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3Output {
	return o
}

func (o ElasticsearchSnapshotRepositoryS3Output) ToElasticsearchSnapshotRepositoryS3PtrOutput() ElasticsearchSnapshotRepositoryS3PtrOutput {
	return o.ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryS3Output) ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3PtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryS3) *ElasticsearchSnapshotRepositoryS3 {
		return &v
	}).(ElasticsearchSnapshotRepositoryS3PtrOutput)
}

// Specifies the path to the repository data within its bucket.
func (o ElasticsearchSnapshotRepositoryS3Output) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.BasePath }).(pulumi.StringPtrOutput)
}

// Name of the S3 bucket to use for snapshots.
func (o ElasticsearchSnapshotRepositoryS3Output) Bucket() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) string { return v.Bucket }).(pulumi.StringOutput)
}

// Minimum threshold below which the chunk is uploaded using a single request.
func (o ElasticsearchSnapshotRepositoryS3Output) BufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.BufferSize }).(pulumi.StringPtrOutput)
}

// The S3 repository supports all S3 canned ACLs.
func (o ElasticsearchSnapshotRepositoryS3Output) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.CannedAcl }).(pulumi.StringPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryS3Output) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// The name of the S3 client to use to connect to S3.
func (o ElasticsearchSnapshotRepositoryS3Output) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.Client }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryS3Output) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryS3Output) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryS3Output) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryS3Output) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// When true, files are encrypted server-side using AES-256 algorithm.
func (o ElasticsearchSnapshotRepositoryS3Output) ServerSideEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *bool { return v.ServerSideEncryption }).(pulumi.BoolPtrOutput)
}

// Sets the S3 storage class for objects stored in the snapshot repository.
func (o ElasticsearchSnapshotRepositoryS3Output) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryS3) *string { return v.StorageClass }).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryS3PtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryS3PtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryS3)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryS3PtrOutput) ToElasticsearchSnapshotRepositoryS3PtrOutput() ElasticsearchSnapshotRepositoryS3PtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryS3PtrOutput) ToElasticsearchSnapshotRepositoryS3PtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryS3PtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryS3PtrOutput) Elem() ElasticsearchSnapshotRepositoryS3Output {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) ElasticsearchSnapshotRepositoryS3 {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryS3
		return ret
	}).(ElasticsearchSnapshotRepositoryS3Output)
}

// Specifies the path to the repository data within its bucket.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) BasePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.BasePath
	}).(pulumi.StringPtrOutput)
}

// Name of the S3 bucket to use for snapshots.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) Bucket() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return &v.Bucket
	}).(pulumi.StringPtrOutput)
}

// Minimum threshold below which the chunk is uploaded using a single request.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) BufferSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.BufferSize
	}).(pulumi.StringPtrOutput)
}

// The S3 repository supports all S3 canned ACLs.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) CannedAcl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.CannedAcl
	}).(pulumi.StringPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// The name of the S3 client to use to connect to S3.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) Client() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.Client
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

// When true, files are encrypted server-side using AES-256 algorithm.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) ServerSideEncryption() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *bool {
		if v == nil {
			return nil
		}
		return v.ServerSideEncryption
	}).(pulumi.BoolPtrOutput)
}

// Sets the S3 storage class for objects stored in the snapshot repository.
func (o ElasticsearchSnapshotRepositoryS3PtrOutput) StorageClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryS3) *string {
		if v == nil {
			return nil
		}
		return v.StorageClass
	}).(pulumi.StringPtrOutput)
}

type ElasticsearchSnapshotRepositoryUrl struct {
	// Maximum size of files in snapshots.
	ChunkSize *string `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress *bool `pulumi:"compress"`
	// Maximum number of retries for http and https URLs.
	HttpMaxRetries *int `pulumi:"httpMaxRetries"`
	// Maximum wait time for data transfers over a connection.
	HttpSocketTimeout *string `pulumi:"httpSocketTimeout"`
	// Maximum number of snapshots the repository can contain.
	MaxNumberOfSnapshots *int `pulumi:"maxNumberOfSnapshots"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec *string `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec *string `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly *bool `pulumi:"readonly"`
	// URL location of the root of the shared filesystem repository.
	Url string `pulumi:"url"`
}

// ElasticsearchSnapshotRepositoryUrlInput is an input type that accepts ElasticsearchSnapshotRepositoryUrlArgs and ElasticsearchSnapshotRepositoryUrlOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryUrlInput` via:
//
//          ElasticsearchSnapshotRepositoryUrlArgs{...}
type ElasticsearchSnapshotRepositoryUrlInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryUrlOutput() ElasticsearchSnapshotRepositoryUrlOutput
	ToElasticsearchSnapshotRepositoryUrlOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryUrlOutput
}

type ElasticsearchSnapshotRepositoryUrlArgs struct {
	// Maximum size of files in snapshots.
	ChunkSize pulumi.StringPtrInput `pulumi:"chunkSize"`
	// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
	Compress pulumi.BoolPtrInput `pulumi:"compress"`
	// Maximum number of retries for http and https URLs.
	HttpMaxRetries pulumi.IntPtrInput `pulumi:"httpMaxRetries"`
	// Maximum wait time for data transfers over a connection.
	HttpSocketTimeout pulumi.StringPtrInput `pulumi:"httpSocketTimeout"`
	// Maximum number of snapshots the repository can contain.
	MaxNumberOfSnapshots pulumi.IntPtrInput `pulumi:"maxNumberOfSnapshots"`
	// Maximum snapshot restore rate per node.
	MaxRestoreBytesPerSec pulumi.StringPtrInput `pulumi:"maxRestoreBytesPerSec"`
	// Maximum snapshot creation rate per node.
	MaxSnapshotBytesPerSec pulumi.StringPtrInput `pulumi:"maxSnapshotBytesPerSec"`
	// If true, the repository is read-only.
	Readonly pulumi.BoolPtrInput `pulumi:"readonly"`
	// URL location of the root of the shared filesystem repository.
	Url pulumi.StringInput `pulumi:"url"`
}

func (ElasticsearchSnapshotRepositoryUrlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryUrl)(nil)).Elem()
}

func (i ElasticsearchSnapshotRepositoryUrlArgs) ToElasticsearchSnapshotRepositoryUrlOutput() ElasticsearchSnapshotRepositoryUrlOutput {
	return i.ToElasticsearchSnapshotRepositoryUrlOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryUrlArgs) ToElasticsearchSnapshotRepositoryUrlOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryUrlOutput)
}

func (i ElasticsearchSnapshotRepositoryUrlArgs) ToElasticsearchSnapshotRepositoryUrlPtrOutput() ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(context.Background())
}

func (i ElasticsearchSnapshotRepositoryUrlArgs) ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryUrlOutput).ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(ctx)
}

// ElasticsearchSnapshotRepositoryUrlPtrInput is an input type that accepts ElasticsearchSnapshotRepositoryUrlArgs, ElasticsearchSnapshotRepositoryUrlPtr and ElasticsearchSnapshotRepositoryUrlPtrOutput values.
// You can construct a concrete instance of `ElasticsearchSnapshotRepositoryUrlPtrInput` via:
//
//          ElasticsearchSnapshotRepositoryUrlArgs{...}
//
//  or:
//
//          nil
type ElasticsearchSnapshotRepositoryUrlPtrInput interface {
	pulumi.Input

	ToElasticsearchSnapshotRepositoryUrlPtrOutput() ElasticsearchSnapshotRepositoryUrlPtrOutput
	ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(context.Context) ElasticsearchSnapshotRepositoryUrlPtrOutput
}

type elasticsearchSnapshotRepositoryUrlPtrType ElasticsearchSnapshotRepositoryUrlArgs

func ElasticsearchSnapshotRepositoryUrlPtr(v *ElasticsearchSnapshotRepositoryUrlArgs) ElasticsearchSnapshotRepositoryUrlPtrInput {
	return (*elasticsearchSnapshotRepositoryUrlPtrType)(v)
}

func (*elasticsearchSnapshotRepositoryUrlPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryUrl)(nil)).Elem()
}

func (i *elasticsearchSnapshotRepositoryUrlPtrType) ToElasticsearchSnapshotRepositoryUrlPtrOutput() ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return i.ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(context.Background())
}

func (i *elasticsearchSnapshotRepositoryUrlPtrType) ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticsearchSnapshotRepositoryUrlPtrOutput)
}

type ElasticsearchSnapshotRepositoryUrlOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryUrlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchSnapshotRepositoryUrl)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryUrlOutput) ToElasticsearchSnapshotRepositoryUrlOutput() ElasticsearchSnapshotRepositoryUrlOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryUrlOutput) ToElasticsearchSnapshotRepositoryUrlOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryUrlOutput) ToElasticsearchSnapshotRepositoryUrlPtrOutput() ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return o.ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(context.Background())
}

func (o ElasticsearchSnapshotRepositoryUrlOutput) ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ElasticsearchSnapshotRepositoryUrl) *ElasticsearchSnapshotRepositoryUrl {
		return &v
	}).(ElasticsearchSnapshotRepositoryUrlPtrOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryUrlOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *string { return v.ChunkSize }).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryUrlOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *bool { return v.Compress }).(pulumi.BoolPtrOutput)
}

// Maximum number of retries for http and https URLs.
func (o ElasticsearchSnapshotRepositoryUrlOutput) HttpMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *int { return v.HttpMaxRetries }).(pulumi.IntPtrOutput)
}

// Maximum wait time for data transfers over a connection.
func (o ElasticsearchSnapshotRepositoryUrlOutput) HttpSocketTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *string { return v.HttpSocketTimeout }).(pulumi.StringPtrOutput)
}

// Maximum number of snapshots the repository can contain.
func (o ElasticsearchSnapshotRepositoryUrlOutput) MaxNumberOfSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *int { return v.MaxNumberOfSnapshots }).(pulumi.IntPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryUrlOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *string { return v.MaxRestoreBytesPerSec }).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryUrlOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *string { return v.MaxSnapshotBytesPerSec }).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryUrlOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) *bool { return v.Readonly }).(pulumi.BoolPtrOutput)
}

// URL location of the root of the shared filesystem repository.
func (o ElasticsearchSnapshotRepositoryUrlOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchSnapshotRepositoryUrl) string { return v.Url }).(pulumi.StringOutput)
}

type ElasticsearchSnapshotRepositoryUrlPtrOutput struct{ *pulumi.OutputState }

func (ElasticsearchSnapshotRepositoryUrlPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticsearchSnapshotRepositoryUrl)(nil)).Elem()
}

func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) ToElasticsearchSnapshotRepositoryUrlPtrOutput() ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) ToElasticsearchSnapshotRepositoryUrlPtrOutputWithContext(ctx context.Context) ElasticsearchSnapshotRepositoryUrlPtrOutput {
	return o
}

func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) Elem() ElasticsearchSnapshotRepositoryUrlOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) ElasticsearchSnapshotRepositoryUrl {
		if v != nil {
			return *v
		}
		var ret ElasticsearchSnapshotRepositoryUrl
		return ret
	}).(ElasticsearchSnapshotRepositoryUrlOutput)
}

// Maximum size of files in snapshots.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) ChunkSize() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *string {
		if v == nil {
			return nil
		}
		return v.ChunkSize
	}).(pulumi.StringPtrOutput)
}

// If true, metadata files, such as index mappings and settings, are compressed in snapshots.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) Compress() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *bool {
		if v == nil {
			return nil
		}
		return v.Compress
	}).(pulumi.BoolPtrOutput)
}

// Maximum number of retries for http and https URLs.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) HttpMaxRetries() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *int {
		if v == nil {
			return nil
		}
		return v.HttpMaxRetries
	}).(pulumi.IntPtrOutput)
}

// Maximum wait time for data transfers over a connection.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) HttpSocketTimeout() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *string {
		if v == nil {
			return nil
		}
		return v.HttpSocketTimeout
	}).(pulumi.StringPtrOutput)
}

// Maximum number of snapshots the repository can contain.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) MaxNumberOfSnapshots() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *int {
		if v == nil {
			return nil
		}
		return v.MaxNumberOfSnapshots
	}).(pulumi.IntPtrOutput)
}

// Maximum snapshot restore rate per node.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) MaxRestoreBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *string {
		if v == nil {
			return nil
		}
		return v.MaxRestoreBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// Maximum snapshot creation rate per node.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) MaxSnapshotBytesPerSec() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *string {
		if v == nil {
			return nil
		}
		return v.MaxSnapshotBytesPerSec
	}).(pulumi.StringPtrOutput)
}

// If true, the repository is read-only.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) Readonly() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *bool {
		if v == nil {
			return nil
		}
		return v.Readonly
	}).(pulumi.BoolPtrOutput)
}

// URL location of the root of the shared filesystem repository.
func (o ElasticsearchSnapshotRepositoryUrlPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticsearchSnapshotRepositoryUrl) *string {
		if v == nil {
			return nil
		}
		return &v.Url
	}).(pulumi.StringPtrOutput)
}

type ProviderElasticsearch struct {
	CaFile    *string  `pulumi:"caFile"`
	Endpoints []string `pulumi:"endpoints"`
	Insecure  *bool    `pulumi:"insecure"`
	Password  *string  `pulumi:"password"`
	Username  *string  `pulumi:"username"`
}

// ProviderElasticsearchInput is an input type that accepts ProviderElasticsearchArgs and ProviderElasticsearchOutput values.
// You can construct a concrete instance of `ProviderElasticsearchInput` via:
//
//          ProviderElasticsearchArgs{...}
type ProviderElasticsearchInput interface {
	pulumi.Input

	ToProviderElasticsearchOutput() ProviderElasticsearchOutput
	ToProviderElasticsearchOutputWithContext(context.Context) ProviderElasticsearchOutput
}

type ProviderElasticsearchArgs struct {
	CaFile    pulumi.StringPtrInput   `pulumi:"caFile"`
	Endpoints pulumi.StringArrayInput `pulumi:"endpoints"`
	Insecure  pulumi.BoolPtrInput     `pulumi:"insecure"`
	Password  pulumi.StringPtrInput   `pulumi:"password"`
	Username  pulumi.StringPtrInput   `pulumi:"username"`
}

func (ProviderElasticsearchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderElasticsearch)(nil)).Elem()
}

func (i ProviderElasticsearchArgs) ToProviderElasticsearchOutput() ProviderElasticsearchOutput {
	return i.ToProviderElasticsearchOutputWithContext(context.Background())
}

func (i ProviderElasticsearchArgs) ToProviderElasticsearchOutputWithContext(ctx context.Context) ProviderElasticsearchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderElasticsearchOutput)
}

func (i ProviderElasticsearchArgs) ToProviderElasticsearchPtrOutput() ProviderElasticsearchPtrOutput {
	return i.ToProviderElasticsearchPtrOutputWithContext(context.Background())
}

func (i ProviderElasticsearchArgs) ToProviderElasticsearchPtrOutputWithContext(ctx context.Context) ProviderElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderElasticsearchOutput).ToProviderElasticsearchPtrOutputWithContext(ctx)
}

// ProviderElasticsearchPtrInput is an input type that accepts ProviderElasticsearchArgs, ProviderElasticsearchPtr and ProviderElasticsearchPtrOutput values.
// You can construct a concrete instance of `ProviderElasticsearchPtrInput` via:
//
//          ProviderElasticsearchArgs{...}
//
//  or:
//
//          nil
type ProviderElasticsearchPtrInput interface {
	pulumi.Input

	ToProviderElasticsearchPtrOutput() ProviderElasticsearchPtrOutput
	ToProviderElasticsearchPtrOutputWithContext(context.Context) ProviderElasticsearchPtrOutput
}

type providerElasticsearchPtrType ProviderElasticsearchArgs

func ProviderElasticsearchPtr(v *ProviderElasticsearchArgs) ProviderElasticsearchPtrInput {
	return (*providerElasticsearchPtrType)(v)
}

func (*providerElasticsearchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderElasticsearch)(nil)).Elem()
}

func (i *providerElasticsearchPtrType) ToProviderElasticsearchPtrOutput() ProviderElasticsearchPtrOutput {
	return i.ToProviderElasticsearchPtrOutputWithContext(context.Background())
}

func (i *providerElasticsearchPtrType) ToProviderElasticsearchPtrOutputWithContext(ctx context.Context) ProviderElasticsearchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderElasticsearchPtrOutput)
}

type ProviderElasticsearchOutput struct{ *pulumi.OutputState }

func (ProviderElasticsearchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProviderElasticsearch)(nil)).Elem()
}

func (o ProviderElasticsearchOutput) ToProviderElasticsearchOutput() ProviderElasticsearchOutput {
	return o
}

func (o ProviderElasticsearchOutput) ToProviderElasticsearchOutputWithContext(ctx context.Context) ProviderElasticsearchOutput {
	return o
}

func (o ProviderElasticsearchOutput) ToProviderElasticsearchPtrOutput() ProviderElasticsearchPtrOutput {
	return o.ToProviderElasticsearchPtrOutputWithContext(context.Background())
}

func (o ProviderElasticsearchOutput) ToProviderElasticsearchPtrOutputWithContext(ctx context.Context) ProviderElasticsearchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProviderElasticsearch) *ProviderElasticsearch {
		return &v
	}).(ProviderElasticsearchPtrOutput)
}

func (o ProviderElasticsearchOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderElasticsearch) *string { return v.CaFile }).(pulumi.StringPtrOutput)
}

func (o ProviderElasticsearchOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ProviderElasticsearch) []string { return v.Endpoints }).(pulumi.StringArrayOutput)
}

func (o ProviderElasticsearchOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ProviderElasticsearch) *bool { return v.Insecure }).(pulumi.BoolPtrOutput)
}

func (o ProviderElasticsearchOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderElasticsearch) *string { return v.Password }).(pulumi.StringPtrOutput)
}

func (o ProviderElasticsearchOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProviderElasticsearch) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type ProviderElasticsearchPtrOutput struct{ *pulumi.OutputState }

func (ProviderElasticsearchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProviderElasticsearch)(nil)).Elem()
}

func (o ProviderElasticsearchPtrOutput) ToProviderElasticsearchPtrOutput() ProviderElasticsearchPtrOutput {
	return o
}

func (o ProviderElasticsearchPtrOutput) ToProviderElasticsearchPtrOutputWithContext(ctx context.Context) ProviderElasticsearchPtrOutput {
	return o
}

func (o ProviderElasticsearchPtrOutput) Elem() ProviderElasticsearchOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) ProviderElasticsearch {
		if v != nil {
			return *v
		}
		var ret ProviderElasticsearch
		return ret
	}).(ProviderElasticsearchOutput)
}

func (o ProviderElasticsearchPtrOutput) CaFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.CaFile
	}).(pulumi.StringPtrOutput)
}

func (o ProviderElasticsearchPtrOutput) Endpoints() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) []string {
		if v == nil {
			return nil
		}
		return v.Endpoints
	}).(pulumi.StringArrayOutput)
}

func (o ProviderElasticsearchPtrOutput) Insecure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) *bool {
		if v == nil {
			return nil
		}
		return v.Insecure
	}).(pulumi.BoolPtrOutput)
}

func (o ProviderElasticsearchPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

func (o ProviderElasticsearchPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProviderElasticsearch) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchClusterSettingsElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchClusterSettingsElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsPersistentInput)(nil)).Elem(), ElasticsearchClusterSettingsPersistentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsPersistentPtrInput)(nil)).Elem(), ElasticsearchClusterSettingsPersistentArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsPersistentSettingInput)(nil)).Elem(), ElasticsearchClusterSettingsPersistentSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsPersistentSettingArrayInput)(nil)).Elem(), ElasticsearchClusterSettingsPersistentSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsTransientInput)(nil)).Elem(), ElasticsearchClusterSettingsTransientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsTransientPtrInput)(nil)).Elem(), ElasticsearchClusterSettingsTransientArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsTransientSettingInput)(nil)).Elem(), ElasticsearchClusterSettingsTransientSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchClusterSettingsTransientSettingArrayInput)(nil)).Elem(), ElasticsearchClusterSettingsTransientSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchComponentTemplateElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchComponentTemplateElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateTemplateInput)(nil)).Elem(), ElasticsearchComponentTemplateTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateTemplatePtrInput)(nil)).Elem(), ElasticsearchComponentTemplateTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateTemplateAliasInput)(nil)).Elem(), ElasticsearchComponentTemplateTemplateAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchComponentTemplateTemplateAliasArrayInput)(nil)).Elem(), ElasticsearchComponentTemplateTemplateAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchDataStreamElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchDataStreamElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamIndexInput)(nil)).Elem(), ElasticsearchDataStreamIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchDataStreamIndexArrayInput)(nil)).Elem(), ElasticsearchDataStreamIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexAliasInput)(nil)).Elem(), ElasticsearchIndexAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexAliasArrayInput)(nil)).Elem(), ElasticsearchIndexAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchIndexElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchIndexElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdAllocateInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdAllocateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdAllocatePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdAllocateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdFreezeInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdFreezeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdFreezePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdFreezeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdMigrateInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdMigrateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdMigratePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdMigrateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdReadonlyInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdReadonlyPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdSearchableSnapshotInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdSearchableSnapshotPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdSetPriorityInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdSetPriorityPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdUnfollowInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleColdUnfollowPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleColdUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeletePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteDeleteInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteDeletePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteDeleteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteWaitForSnapshotInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleDeleteWaitForSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchIndexLifecycleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenInput)(nil)).Elem(), ElasticsearchIndexLifecycleFrozenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleFrozenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenSearchableSnapshotInput)(nil)).Elem(), ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleFrozenSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotForcemergeInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotForcemergeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotForcemergePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotForcemergeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotReadonlyInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotReadonlyPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotRolloverInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotRolloverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotRolloverPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotRolloverArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotSearchableSnapshotInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotSearchableSnapshotPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotSearchableSnapshotArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotSetPriorityInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotSetPriorityPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotShrinkInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotShrinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotShrinkPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotShrinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotUnfollowInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleHotUnfollowPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleHotUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmAllocateInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmAllocateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmAllocatePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmAllocateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmForcemergeInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmForcemergeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmForcemergePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmForcemergeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmMigrateInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmMigrateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmMigratePtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmMigrateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmReadonlyInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmReadonlyPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmReadonlyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmSetPriorityInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmSetPriorityPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmSetPriorityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmShrinkInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmShrinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmShrinkPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmShrinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmUnfollowInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexLifecycleWarmUnfollowPtrInput)(nil)).Elem(), ElasticsearchIndexLifecycleWarmUnfollowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexSettingsInput)(nil)).Elem(), ElasticsearchIndexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexSettingsPtrInput)(nil)).Elem(), ElasticsearchIndexSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexSettingsSettingInput)(nil)).Elem(), ElasticsearchIndexSettingsSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexSettingsSettingArrayInput)(nil)).Elem(), ElasticsearchIndexSettingsSettingArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateDataStreamInput)(nil)).Elem(), ElasticsearchIndexTemplateDataStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateDataStreamPtrInput)(nil)).Elem(), ElasticsearchIndexTemplateDataStreamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchIndexTemplateElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchIndexTemplateElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateTemplateInput)(nil)).Elem(), ElasticsearchIndexTemplateTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateTemplatePtrInput)(nil)).Elem(), ElasticsearchIndexTemplateTemplateArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateTemplateAliasInput)(nil)).Elem(), ElasticsearchIndexTemplateTemplateAliasArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIndexTemplateTemplateAliasArrayInput)(nil)).Elem(), ElasticsearchIndexTemplateTemplateAliasArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIngestPipelineElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchIngestPipelineElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchIngestPipelineElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchIngestPipelineElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleApplicationInput)(nil)).Elem(), ElasticsearchSecurityRoleApplicationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleApplicationArrayInput)(nil)).Elem(), ElasticsearchSecurityRoleApplicationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchSecurityRoleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchSecurityRoleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleIndexInput)(nil)).Elem(), ElasticsearchSecurityRoleIndexArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleIndexArrayInput)(nil)).Elem(), ElasticsearchSecurityRoleIndexArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleIndexFieldSecurityInput)(nil)).Elem(), ElasticsearchSecurityRoleIndexFieldSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityRoleIndexFieldSecurityPtrInput)(nil)).Elem(), ElasticsearchSecurityRoleIndexFieldSecurityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityUserElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchSecurityUserElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSecurityUserElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchSecurityUserElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotLifecycleElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchSnapshotLifecycleElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryAzureInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryAzurePtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryAzureArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryElasticsearchConnectionInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryFsInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryFsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryFsPtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryFsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryGcsInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryGcsPtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryGcsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryHdfsInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryHdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryHdfsPtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryHdfsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryS3Input)(nil)).Elem(), ElasticsearchSnapshotRepositoryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryS3PtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryS3Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryUrlInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticsearchSnapshotRepositoryUrlPtrInput)(nil)).Elem(), ElasticsearchSnapshotRepositoryUrlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderElasticsearchInput)(nil)).Elem(), ProviderElasticsearchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderElasticsearchPtrInput)(nil)).Elem(), ProviderElasticsearchArgs{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsPersistentOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsPersistentPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsPersistentSettingOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsPersistentSettingArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsTransientOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsTransientPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsTransientSettingOutput{})
	pulumi.RegisterOutputType(ElasticsearchClusterSettingsTransientSettingArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateTemplateOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateTemplatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateTemplateAliasOutput{})
	pulumi.RegisterOutputType(ElasticsearchComponentTemplateTemplateAliasArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamIndexOutput{})
	pulumi.RegisterOutputType(ElasticsearchDataStreamIndexArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexAliasOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexAliasArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdAllocateOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdAllocatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdFreezeOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdFreezePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdMigrateOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdMigratePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdReadonlyOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdReadonlyPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdSearchableSnapshotOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdSearchableSnapshotPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdSetPriorityOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdSetPriorityPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdUnfollowOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleColdUnfollowPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeleteOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeletePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeleteDeleteOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeleteDeletePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeleteWaitForSnapshotOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleDeleteWaitForSnapshotPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleFrozenOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleFrozenPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleFrozenSearchableSnapshotOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleFrozenSearchableSnapshotPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotForcemergeOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotForcemergePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotReadonlyOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotReadonlyPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotRolloverOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotRolloverPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotSearchableSnapshotOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotSearchableSnapshotPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotSetPriorityOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotSetPriorityPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotShrinkOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotShrinkPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotUnfollowOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleHotUnfollowPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmAllocateOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmAllocatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmForcemergeOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmForcemergePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmMigrateOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmMigratePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmReadonlyOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmReadonlyPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmSetPriorityOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmSetPriorityPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmShrinkOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmShrinkPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmUnfollowOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexLifecycleWarmUnfollowPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexSettingsOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexSettingsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexSettingsSettingOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexSettingsSettingArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateDataStreamOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateDataStreamPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateTemplateOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateTemplatePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateTemplateAliasOutput{})
	pulumi.RegisterOutputType(ElasticsearchIndexTemplateTemplateAliasArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchIngestPipelineElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchIngestPipelineElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleApplicationOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleApplicationArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleIndexOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleIndexArrayOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleIndexFieldSecurityOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityRoleIndexFieldSecurityPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityUserElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchSecurityUserElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotLifecycleElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotLifecycleElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryAzureOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryAzurePtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryElasticsearchConnectionOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryElasticsearchConnectionPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryFsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryFsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryGcsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryGcsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryHdfsOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryHdfsPtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryS3Output{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryS3PtrOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryUrlOutput{})
	pulumi.RegisterOutputType(ElasticsearchSnapshotRepositoryUrlPtrOutput{})
	pulumi.RegisterOutputType(ProviderElasticsearchOutput{})
	pulumi.RegisterOutputType(ProviderElasticsearchPtrOutput{})
}
