// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Runs an inline or stored script on incoming documents. The script runs in the ingest context.
//
// The script processor uses the script cache to avoid recompiling the script for each incoming document. To improve performance, ensure the script cache is properly sized before using a script processor in production.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html
func ElasticsearchIngestProcessorScript(ctx *pulumi.Context, args *ElasticsearchIngestProcessorScriptArgs, opts ...pulumi.InvokeOption) (*ElasticsearchIngestProcessorScriptResult, error) {
	var rv ElasticsearchIngestProcessorScriptResult
	err := ctx.Invoke("elasticstack:index/elasticsearchIngestProcessorScript:ElasticsearchIngestProcessorScript", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticsearchIngestProcessorScript.
type ElasticsearchIngestProcessorScriptArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Script language.
	Lang *string `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params *string `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId *string `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source *string `pulumi:"source"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by ElasticsearchIngestProcessorScript.
type ElasticsearchIngestProcessorScriptResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Script language.
	Lang *string `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params *string `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId *string `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source *string `pulumi:"source"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func ElasticsearchIngestProcessorScriptOutput(ctx *pulumi.Context, args ElasticsearchIngestProcessorScriptOutputArgs, opts ...pulumi.InvokeOption) ElasticsearchIngestProcessorScriptResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticsearchIngestProcessorScriptResult, error) {
			args := v.(ElasticsearchIngestProcessorScriptArgs)
			r, err := ElasticsearchIngestProcessorScript(ctx, &args, opts...)
			return *r, err
		}).(ElasticsearchIngestProcessorScriptResultOutput)
}

// A collection of arguments for invoking ElasticsearchIngestProcessorScript.
type ElasticsearchIngestProcessorScriptOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Script language.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params pulumi.StringPtrInput `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId pulumi.StringPtrInput `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ElasticsearchIngestProcessorScriptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorScriptArgs)(nil)).Elem()
}

// A collection of values returned by ElasticsearchIngestProcessorScript.
type ElasticsearchIngestProcessorScriptResultOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestProcessorScriptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorScriptResult)(nil)).Elem()
}

func (o ElasticsearchIngestProcessorScriptResultOutput) ToElasticsearchIngestProcessorScriptResultOutput() ElasticsearchIngestProcessorScriptResultOutput {
	return o
}

func (o ElasticsearchIngestProcessorScriptResultOutput) ToElasticsearchIngestProcessorScriptResultOutputWithContext(ctx context.Context) ElasticsearchIngestProcessorScriptResultOutput {
	return o
}

// Description of the processor.
func (o ElasticsearchIngestProcessorScriptResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal identifier of the resource.
func (o ElasticsearchIngestProcessorScriptResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticsearchIngestProcessorScriptResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticsearchIngestProcessorScriptResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticsearchIngestProcessorScriptResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) string { return v.Json }).(pulumi.StringOutput)
}

// Script language.
func (o ElasticsearchIngestProcessorScriptResultOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Handle failures for the processor.
func (o ElasticsearchIngestProcessorScriptResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Object containing parameters for the script.
func (o ElasticsearchIngestProcessorScriptResultOutput) Params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.Params }).(pulumi.StringPtrOutput)
}

// ID of a stored script. If no `source` is specified, this parameter is required.
func (o ElasticsearchIngestProcessorScriptResultOutput) ScriptId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.ScriptId }).(pulumi.StringPtrOutput)
}

// Inline script. If no id is specified, this parameter is required.
func (o ElasticsearchIngestProcessorScriptResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Identifier for the processor.
func (o ElasticsearchIngestProcessorScriptResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorScriptResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchIngestProcessorScriptResultOutput{})
}
