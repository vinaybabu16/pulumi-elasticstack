// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Raises an exception. This is useful for when you expect a pipeline to fail and want to relay a specific message to the requester.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/fail-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "ctx.tags.contains('production') != true"
// 		fail, err := elasticstack.ElasticsearchIngestProcessorFail(ctx, &ElasticsearchIngestProcessorFailArgs{
// 			If:      &opt0,
// 			Message: "The production tag is not present, found tags: {{{tags}}}",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = elasticstack.NewElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticsearchIngestPipelineArgs{
// 			Processors: pulumi.StringArray{
// 				pulumi.String(fail.Json),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func ElasticsearchIngestProcessorFail(ctx *pulumi.Context, args *ElasticsearchIngestProcessorFailArgs, opts ...pulumi.InvokeOption) (*ElasticsearchIngestProcessorFailResult, error) {
	var rv ElasticsearchIngestProcessorFailResult
	err := ctx.Invoke("elasticstack:index/elasticsearchIngestProcessorFail:ElasticsearchIngestProcessorFail", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticsearchIngestProcessorFail.
type ElasticsearchIngestProcessorFailArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// The error message thrown by the processor.
	Message string `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by ElasticsearchIngestProcessorFail.
type ElasticsearchIngestProcessorFailResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Internal identifier of the resource
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// The error message thrown by the processor.
	Message string `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func ElasticsearchIngestProcessorFailOutput(ctx *pulumi.Context, args ElasticsearchIngestProcessorFailOutputArgs, opts ...pulumi.InvokeOption) ElasticsearchIngestProcessorFailResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticsearchIngestProcessorFailResult, error) {
			args := v.(ElasticsearchIngestProcessorFailArgs)
			r, err := ElasticsearchIngestProcessorFail(ctx, &args, opts...)
			return *r, err
		}).(ElasticsearchIngestProcessorFailResultOutput)
}

// A collection of arguments for invoking ElasticsearchIngestProcessorFail.
type ElasticsearchIngestProcessorFailOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// The error message thrown by the processor.
	Message pulumi.StringInput `pulumi:"message"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ElasticsearchIngestProcessorFailOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorFailArgs)(nil)).Elem()
}

// A collection of values returned by ElasticsearchIngestProcessorFail.
type ElasticsearchIngestProcessorFailResultOutput struct{ *pulumi.OutputState }

func (ElasticsearchIngestProcessorFailResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticsearchIngestProcessorFailResult)(nil)).Elem()
}

func (o ElasticsearchIngestProcessorFailResultOutput) ToElasticsearchIngestProcessorFailResultOutput() ElasticsearchIngestProcessorFailResultOutput {
	return o
}

func (o ElasticsearchIngestProcessorFailResultOutput) ToElasticsearchIngestProcessorFailResultOutputWithContext(ctx context.Context) ElasticsearchIngestProcessorFailResultOutput {
	return o
}

// Description of the processor.
func (o ElasticsearchIngestProcessorFailResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal identifier of the resource
func (o ElasticsearchIngestProcessorFailResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticsearchIngestProcessorFailResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticsearchIngestProcessorFailResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticsearchIngestProcessorFailResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) string { return v.Json }).(pulumi.StringOutput)
}

// The error message thrown by the processor.
func (o ElasticsearchIngestProcessorFailResultOutput) Message() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) string { return v.Message }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticsearchIngestProcessorFailResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o ElasticsearchIngestProcessorFailResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticsearchIngestProcessorFailResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticsearchIngestProcessorFailResultOutput{})
}
