// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "./types";
import * as utilities from "./utilities";

/**
 * Updates cluster-wide settings. If the Elasticsearch security features are enabled, you must have the manage cluster privilege to use this API. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 *
 * const myClusterSettings = new elasticstack.ElasticsearchClusterSettings("my_cluster_settings", {
 *     persistent: {
 *         settings: [
 *             {
 *                 name: "indices.lifecycle.poll_interval",
 *                 value: "10m",
 *             },
 *             {
 *                 name: "indices.recovery.max_bytes_per_sec",
 *                 value: "50mb",
 *             },
 *             {
 *                 name: "indices.breaker.accounting.limit",
 *                 value: "100%",
 *             },
 *             {
 *                 name: "xpack.security.audit.logfile.events.include",
 *                 valueLists: [
 *                     "ACCESS_DENIED",
 *                     "ACCESS_GRANTED",
 *                 ],
 *             },
 *         ],
 *     },
 *     transient: {
 *         settings: [{
 *             name: "indices.breaker.accounting.limit",
 *             value: "99%",
 *         }],
 *     },
 * });
 * ```
 */
export class ElasticsearchClusterSettings extends pulumi.CustomResource {
    /**
     * Get an existing ElasticsearchClusterSettings resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ElasticsearchClusterSettingsState, opts?: pulumi.CustomResourceOptions): ElasticsearchClusterSettings {
        return new ElasticsearchClusterSettings(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'elasticstack:index/elasticsearchClusterSettings:ElasticsearchClusterSettings';

    /**
     * Returns true if the given object is an instance of ElasticsearchClusterSettings.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ElasticsearchClusterSettings {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ElasticsearchClusterSettings.__pulumiType;
    }

    /**
     * Used to establish connection to Elasticsearch server. Overrides environment variables if present.
     */
    public readonly elasticsearchConnection!: pulumi.Output<outputs.ElasticsearchClusterSettingsElasticsearchConnection | undefined>;
    /**
     * Internal identifier of the resource
     */
    public /*out*/ readonly id!: pulumi.Output<string>;
    /**
     * Settings will apply across restarts.
     */
    public readonly persistent!: pulumi.Output<outputs.ElasticsearchClusterSettingsPersistent | undefined>;
    /**
     * Settings do not survive a full cluster restart.
     */
    public readonly transient!: pulumi.Output<outputs.ElasticsearchClusterSettingsTransient | undefined>;

    /**
     * Create a ElasticsearchClusterSettings resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ElasticsearchClusterSettingsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ElasticsearchClusterSettingsArgs | ElasticsearchClusterSettingsState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ElasticsearchClusterSettingsState | undefined;
            resourceInputs["elasticsearchConnection"] = state ? state.elasticsearchConnection : undefined;
            resourceInputs["id"] = state ? state.id : undefined;
            resourceInputs["persistent"] = state ? state.persistent : undefined;
            resourceInputs["transient"] = state ? state.transient : undefined;
        } else {
            const args = argsOrState as ElasticsearchClusterSettingsArgs | undefined;
            resourceInputs["elasticsearchConnection"] = args ? args.elasticsearchConnection : undefined;
            resourceInputs["persistent"] = args ? args.persistent : undefined;
            resourceInputs["transient"] = args ? args.transient : undefined;
            resourceInputs["id"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ElasticsearchClusterSettings.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ElasticsearchClusterSettings resources.
 */
export interface ElasticsearchClusterSettingsState {
    /**
     * Used to establish connection to Elasticsearch server. Overrides environment variables if present.
     */
    elasticsearchConnection?: pulumi.Input<inputs.ElasticsearchClusterSettingsElasticsearchConnection>;
    /**
     * Internal identifier of the resource
     */
    id?: pulumi.Input<string>;
    /**
     * Settings will apply across restarts.
     */
    persistent?: pulumi.Input<inputs.ElasticsearchClusterSettingsPersistent>;
    /**
     * Settings do not survive a full cluster restart.
     */
    transient?: pulumi.Input<inputs.ElasticsearchClusterSettingsTransient>;
}

/**
 * The set of arguments for constructing a ElasticsearchClusterSettings resource.
 */
export interface ElasticsearchClusterSettingsArgs {
    /**
     * Used to establish connection to Elasticsearch server. Overrides environment variables if present.
     */
    elasticsearchConnection?: pulumi.Input<inputs.ElasticsearchClusterSettingsElasticsearchConnection>;
    /**
     * Settings will apply across restarts.
     */
    persistent?: pulumi.Input<inputs.ElasticsearchClusterSettingsPersistent>;
    /**
     * Settings do not survive a full cluster restart.
     */
    transient?: pulumi.Input<inputs.ElasticsearchClusterSettingsTransient>;
}
