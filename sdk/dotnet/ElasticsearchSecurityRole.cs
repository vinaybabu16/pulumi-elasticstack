// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack
{
    /// <summary>
    /// Adds and updates roles in the native realm. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Text.Json;
    /// using Pulumi;
    /// using Elasticstack = Pulumi.Elasticstack;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var roleElasticsearchSecurityRole = new Elasticstack.ElasticsearchSecurityRole("roleElasticsearchSecurityRole", new Elasticstack.ElasticsearchSecurityRoleArgs
    ///         {
    ///             Clusters = 
    ///             {
    ///                 "all",
    ///             },
    ///             Indices = 
    ///             {
    ///                 new Elasticstack.Inputs.ElasticsearchSecurityRoleIndexArgs
    ///                 {
    ///                     Names = 
    ///                     {
    ///                         "index1",
    ///                         "index2",
    ///                     },
    ///                     Privileges = 
    ///                     {
    ///                         "all",
    ///                     },
    ///                 },
    ///             },
    ///             Applications = 
    ///             {
    ///                 new Elasticstack.Inputs.ElasticsearchSecurityRoleApplicationArgs
    ///                 {
    ///                     Application = "myapp",
    ///                     Privileges = 
    ///                     {
    ///                         "admin",
    ///                         "read",
    ///                     },
    ///                     Resources = 
    ///                     {
    ///                         "*",
    ///                     },
    ///                 },
    ///             },
    ///             RunAs = 
    ///             {
    ///                 "other_user",
    ///             },
    ///             Metadata = JsonSerializer.Serialize(new Dictionary&lt;string, object?&gt;
    ///             {
    ///                 { "version", 1 },
    ///             }),
    ///         });
    ///         this.Role = roleElasticsearchSecurityRole;
    ///     }
    /// 
    ///     [Output("role")]
    ///     public Output&lt;string&gt; Role { get; set; }
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import elasticstack:index/elasticsearchSecurityRole:ElasticsearchSecurityRole elasticstack_elasticsearch_security_role &lt;cluster_uuid&gt;/&lt;role name&gt;
    /// ```
    /// </summary>
    [ElasticstackResourceType("elasticstack:index/elasticsearchSecurityRole:ElasticsearchSecurityRole")]
    public partial class ElasticsearchSecurityRole : Pulumi.CustomResource
    {
        /// <summary>
        /// A list of application privilege entries.
        /// </summary>
        [Output("applications")]
        public Output<ImmutableArray<Outputs.ElasticsearchSecurityRoleApplication>> Applications { get; private set; } = null!;

        /// <summary>
        /// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
        /// </summary>
        [Output("clusters")]
        public Output<ImmutableArray<string>> Clusters { get; private set; } = null!;

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Output("elasticsearchConnection")]
        public Output<Outputs.ElasticsearchSecurityRoleElasticsearchConnection?> ElasticsearchConnection { get; private set; } = null!;

        /// <summary>
        /// An object defining global privileges.
        /// </summary>
        [Output("global")]
        public Output<string?> Global { get; private set; } = null!;

        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        [Output("id")]
        public Output<string> Id { get; private set; } = null!;

        /// <summary>
        /// A list of indices permissions entries.
        /// </summary>
        [Output("indices")]
        public Output<ImmutableArray<Outputs.ElasticsearchSecurityRoleIndex>> Indices { get; private set; } = null!;

        /// <summary>
        /// Optional meta-data.
        /// </summary>
        [Output("metadata")]
        public Output<string> Metadata { get; private set; } = null!;

        /// <summary>
        /// The name of the role.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// A list of users that the owners of this role can impersonate.
        /// </summary>
        [Output("runAs")]
        public Output<ImmutableArray<string>> RunAs { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticsearchSecurityRole resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticsearchSecurityRole(string name, ElasticsearchSecurityRoleArgs? args = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/elasticsearchSecurityRole:ElasticsearchSecurityRole", name, args ?? new ElasticsearchSecurityRoleArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticsearchSecurityRole(string name, Input<string> id, ElasticsearchSecurityRoleState? state = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/elasticsearchSecurityRole:ElasticsearchSecurityRole", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticsearchSecurityRole resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticsearchSecurityRole Get(string name, Input<string> id, ElasticsearchSecurityRoleState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticsearchSecurityRole(name, id, state, options);
        }
    }

    public sealed class ElasticsearchSecurityRoleArgs : Pulumi.ResourceArgs
    {
        [Input("applications")]
        private InputList<Inputs.ElasticsearchSecurityRoleApplicationArgs>? _applications;

        /// <summary>
        /// A list of application privilege entries.
        /// </summary>
        public InputList<Inputs.ElasticsearchSecurityRoleApplicationArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.ElasticsearchSecurityRoleApplicationArgs>());
            set => _applications = value;
        }

        [Input("clusters")]
        private InputList<string>? _clusters;

        /// <summary>
        /// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
        /// </summary>
        public InputList<string> Clusters
        {
            get => _clusters ?? (_clusters = new InputList<string>());
            set => _clusters = value;
        }

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ElasticsearchSecurityRoleElasticsearchConnectionArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// An object defining global privileges.
        /// </summary>
        [Input("global")]
        public Input<string>? Global { get; set; }

        [Input("indices")]
        private InputList<Inputs.ElasticsearchSecurityRoleIndexArgs>? _indices;

        /// <summary>
        /// A list of indices permissions entries.
        /// </summary>
        public InputList<Inputs.ElasticsearchSecurityRoleIndexArgs> Indices
        {
            get => _indices ?? (_indices = new InputList<Inputs.ElasticsearchSecurityRoleIndexArgs>());
            set => _indices = value;
        }

        /// <summary>
        /// Optional meta-data.
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("runAs")]
        private InputList<string>? _runAs;

        /// <summary>
        /// A list of users that the owners of this role can impersonate.
        /// </summary>
        public InputList<string> RunAs
        {
            get => _runAs ?? (_runAs = new InputList<string>());
            set => _runAs = value;
        }

        public ElasticsearchSecurityRoleArgs()
        {
        }
    }

    public sealed class ElasticsearchSecurityRoleState : Pulumi.ResourceArgs
    {
        [Input("applications")]
        private InputList<Inputs.ElasticsearchSecurityRoleApplicationGetArgs>? _applications;

        /// <summary>
        /// A list of application privilege entries.
        /// </summary>
        public InputList<Inputs.ElasticsearchSecurityRoleApplicationGetArgs> Applications
        {
            get => _applications ?? (_applications = new InputList<Inputs.ElasticsearchSecurityRoleApplicationGetArgs>());
            set => _applications = value;
        }

        [Input("clusters")]
        private InputList<string>? _clusters;

        /// <summary>
        /// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
        /// </summary>
        public InputList<string> Clusters
        {
            get => _clusters ?? (_clusters = new InputList<string>());
            set => _clusters = value;
        }

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ElasticsearchSecurityRoleElasticsearchConnectionGetArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// An object defining global privileges.
        /// </summary>
        [Input("global")]
        public Input<string>? Global { get; set; }

        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        [Input("indices")]
        private InputList<Inputs.ElasticsearchSecurityRoleIndexGetArgs>? _indices;

        /// <summary>
        /// A list of indices permissions entries.
        /// </summary>
        public InputList<Inputs.ElasticsearchSecurityRoleIndexGetArgs> Indices
        {
            get => _indices ?? (_indices = new InputList<Inputs.ElasticsearchSecurityRoleIndexGetArgs>());
            set => _indices = value;
        }

        /// <summary>
        /// Optional meta-data.
        /// </summary>
        [Input("metadata")]
        public Input<string>? Metadata { get; set; }

        /// <summary>
        /// The name of the role.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("runAs")]
        private InputList<string>? _runAs;

        /// <summary>
        /// A list of users that the owners of this role can impersonate.
        /// </summary>
        public InputList<string> RunAs
        {
            get => _runAs ?? (_runAs = new InputList<string>());
            set => _runAs = value;
        }

        public ElasticsearchSecurityRoleState()
        {
        }
    }
}
