// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack
{
    /// <summary>
    /// Registers or updates a snapshot repository. See: https://www.elastic.co/guide/en/elasticsearch/reference/current/put-snapshot-repo-api.html and https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-register-repository.html
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using Elasticstack = Pulumi.Elasticstack;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var myUrlRepo = new Elasticstack.ElasticsearchSnapshotRepository("myUrlRepo", new Elasticstack.ElasticsearchSnapshotRepositoryArgs
    ///         {
    ///             Url = new Elasticstack.Inputs.ElasticsearchSnapshotRepositoryUrlArgs
    ///             {
    ///                 Url = "https://example.com/repo",
    ///             },
    ///         });
    ///         var myFsRepo = new Elasticstack.ElasticsearchSnapshotRepository("myFsRepo", new Elasticstack.ElasticsearchSnapshotRepositoryArgs
    ///         {
    ///             Fs = new Elasticstack.Inputs.ElasticsearchSnapshotRepositoryFsArgs
    ///             {
    ///                 Compress = true,
    ///                 Location = "/tmp",
    ///                 MaxRestoreBytesPerSec = "10mb",
    ///             },
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    ///  $ pulumi import elasticstack:index/elasticsearchSnapshotRepository:ElasticsearchSnapshotRepository my_repository &lt;cluster_uuid&gt;/&lt;repository name&gt;
    /// ```
    /// </summary>
    [ElasticstackResourceType("elasticstack:index/elasticsearchSnapshotRepository:ElasticsearchSnapshotRepository")]
    public partial class ElasticsearchSnapshotRepository : Pulumi.CustomResource
    {
        /// <summary>
        /// Support for using Azure Blob storage as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-azure.html
        /// </summary>
        [Output("azure")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryAzure?> Azure { get; private set; } = null!;

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Output("elasticsearchConnection")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryElasticsearchConnection?> ElasticsearchConnection { get; private set; } = null!;

        /// <summary>
        /// Shared filesystem repository. Repositories of this type use a shared filesystem to store snapshots. This filesystem must be accessible to all master and data nodes in the cluster.
        /// </summary>
        [Output("fs")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryFs?> Fs { get; private set; } = null!;

        /// <summary>
        /// Support for using the Google Cloud Storage service as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-gcs.html
        /// </summary>
        [Output("gcs")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryGcs?> Gcs { get; private set; } = null!;

        /// <summary>
        /// Support for using HDFS File System as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-hdfs.html
        /// </summary>
        [Output("hdfs")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryHdfs?> Hdfs { get; private set; } = null!;

        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        [Output("id")]
        public Output<string> Id { get; private set; } = null!;

        /// <summary>
        /// Name of the snapshot repository to register or update.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Support for using AWS S3 as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-s3-repository.html
        /// </summary>
        [Output("s3")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryS3?> S3 { get; private set; } = null!;

        /// <summary>
        /// URL repository. Repositories of this type are read-only for the cluster. This means the cluster can retrieve or restore snapshots from the repository but cannot write or create snapshots in it.
        /// </summary>
        [Output("url")]
        public Output<Outputs.ElasticsearchSnapshotRepositoryUrl?> Url { get; private set; } = null!;

        /// <summary>
        /// If true, the request verifies the repository is functional on all master and data nodes in the cluster.
        /// </summary>
        [Output("verify")]
        public Output<bool?> Verify { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticsearchSnapshotRepository resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticsearchSnapshotRepository(string name, ElasticsearchSnapshotRepositoryArgs? args = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/elasticsearchSnapshotRepository:ElasticsearchSnapshotRepository", name, args ?? new ElasticsearchSnapshotRepositoryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticsearchSnapshotRepository(string name, Input<string> id, ElasticsearchSnapshotRepositoryState? state = null, CustomResourceOptions? options = null)
            : base("elasticstack:index/elasticsearchSnapshotRepository:ElasticsearchSnapshotRepository", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticsearchSnapshotRepository resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticsearchSnapshotRepository Get(string name, Input<string> id, ElasticsearchSnapshotRepositoryState? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticsearchSnapshotRepository(name, id, state, options);
        }
    }

    public sealed class ElasticsearchSnapshotRepositoryArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Support for using Azure Blob storage as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-azure.html
        /// </summary>
        [Input("azure")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryAzureArgs>? Azure { get; set; }

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryElasticsearchConnectionArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Shared filesystem repository. Repositories of this type use a shared filesystem to store snapshots. This filesystem must be accessible to all master and data nodes in the cluster.
        /// </summary>
        [Input("fs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryFsArgs>? Fs { get; set; }

        /// <summary>
        /// Support for using the Google Cloud Storage service as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-gcs.html
        /// </summary>
        [Input("gcs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryGcsArgs>? Gcs { get; set; }

        /// <summary>
        /// Support for using HDFS File System as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-hdfs.html
        /// </summary>
        [Input("hdfs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryHdfsArgs>? Hdfs { get; set; }

        /// <summary>
        /// Name of the snapshot repository to register or update.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Support for using AWS S3 as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-s3-repository.html
        /// </summary>
        [Input("s3")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryS3Args>? S3 { get; set; }

        /// <summary>
        /// URL repository. Repositories of this type are read-only for the cluster. This means the cluster can retrieve or restore snapshots from the repository but cannot write or create snapshots in it.
        /// </summary>
        [Input("url")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryUrlArgs>? Url { get; set; }

        /// <summary>
        /// If true, the request verifies the repository is functional on all master and data nodes in the cluster.
        /// </summary>
        [Input("verify")]
        public Input<bool>? Verify { get; set; }

        public ElasticsearchSnapshotRepositoryArgs()
        {
        }
    }

    public sealed class ElasticsearchSnapshotRepositoryState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Support for using Azure Blob storage as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-azure.html
        /// </summary>
        [Input("azure")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryAzureGetArgs>? Azure { get; set; }

        /// <summary>
        /// Used to establish connection to Elasticsearch server. Overrides environment variables if present.
        /// </summary>
        [Input("elasticsearchConnection")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryElasticsearchConnectionGetArgs>? ElasticsearchConnection { get; set; }

        /// <summary>
        /// Shared filesystem repository. Repositories of this type use a shared filesystem to store snapshots. This filesystem must be accessible to all master and data nodes in the cluster.
        /// </summary>
        [Input("fs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryFsGetArgs>? Fs { get; set; }

        /// <summary>
        /// Support for using the Google Cloud Storage service as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-gcs.html
        /// </summary>
        [Input("gcs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryGcsGetArgs>? Gcs { get; set; }

        /// <summary>
        /// Support for using HDFS File System as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-hdfs.html
        /// </summary>
        [Input("hdfs")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryHdfsGetArgs>? Hdfs { get; set; }

        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        [Input("id")]
        public Input<string>? Id { get; set; }

        /// <summary>
        /// Name of the snapshot repository to register or update.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Support for using AWS S3 as a repository for Snapshot/Restore. See: https://www.elastic.co/guide/en/elasticsearch/plugins/current/repository-s3-repository.html
        /// </summary>
        [Input("s3")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryS3GetArgs>? S3 { get; set; }

        /// <summary>
        /// URL repository. Repositories of this type are read-only for the cluster. This means the cluster can retrieve or restore snapshots from the repository but cannot write or create snapshots in it.
        /// </summary>
        [Input("url")]
        public Input<Inputs.ElasticsearchSnapshotRepositoryUrlGetArgs>? Url { get; set; }

        /// <summary>
        /// If true, the request verifies the repository is functional on all master and data nodes in the cluster.
        /// </summary>
        [Input("verify")]
        public Input<bool>? Verify { get; set; }

        public ElasticsearchSnapshotRepositoryState()
        {
        }
    }
}
