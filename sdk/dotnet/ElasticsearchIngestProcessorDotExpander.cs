// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Elasticstack
{
    public static class ElasticsearchIngestProcessorDotExpander
    {
        /// <summary>
        /// Expands a field with dots into an object field. This processor allows fields with dots in the name to be accessible by other processors in the pipeline. Otherwise these fields can’t be accessed by any processor.
        /// 
        /// See: elastic.co/guide/en/elasticsearch/reference/current/dot-expand-processor.html
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Elasticstack = Pulumi.Elasticstack;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var dotExpander = Output.Create(Elasticstack.ElasticsearchIngestProcessorDotExpander.InvokeAsync(new Elasticstack.ElasticsearchIngestProcessorDotExpanderArgs
        ///         {
        ///             Field = "foo.bar",
        ///         }));
        ///         var myIngestPipeline = new Elasticstack.ElasticsearchIngestPipeline("myIngestPipeline", new Elasticstack.ElasticsearchIngestPipelineArgs
        ///         {
        ///             Processors = 
        ///             {
        ///                 dotExpander.Apply(dotExpander =&gt; dotExpander.Json),
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<ElasticsearchIngestProcessorDotExpanderResult> InvokeAsync(ElasticsearchIngestProcessorDotExpanderArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<ElasticsearchIngestProcessorDotExpanderResult>("elasticstack:index/elasticsearchIngestProcessorDotExpander:ElasticsearchIngestProcessorDotExpander", args ?? new ElasticsearchIngestProcessorDotExpanderArgs(), options.WithDefaults());

        /// <summary>
        /// Expands a field with dots into an object field. This processor allows fields with dots in the name to be accessible by other processors in the pipeline. Otherwise these fields can’t be accessed by any processor.
        /// 
        /// See: elastic.co/guide/en/elasticsearch/reference/current/dot-expand-processor.html
        /// 
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using Elasticstack = Pulumi.Elasticstack;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var dotExpander = Output.Create(Elasticstack.ElasticsearchIngestProcessorDotExpander.InvokeAsync(new Elasticstack.ElasticsearchIngestProcessorDotExpanderArgs
        ///         {
        ///             Field = "foo.bar",
        ///         }));
        ///         var myIngestPipeline = new Elasticstack.ElasticsearchIngestPipeline("myIngestPipeline", new Elasticstack.ElasticsearchIngestPipelineArgs
        ///         {
        ///             Processors = 
        ///             {
        ///                 dotExpander.Apply(dotExpander =&gt; dotExpander.Json),
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<ElasticsearchIngestProcessorDotExpanderResult> Invoke(ElasticsearchIngestProcessorDotExpanderInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<ElasticsearchIngestProcessorDotExpanderResult>("elasticstack:index/elasticsearchIngestProcessorDotExpander:ElasticsearchIngestProcessorDotExpander", args ?? new ElasticsearchIngestProcessorDotExpanderInvokeArgs(), options.WithDefaults());
    }


    public sealed class ElasticsearchIngestProcessorDotExpanderArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the processor.
        /// </summary>
        [Input("description")]
        public string? Description { get; set; }

        /// <summary>
        /// The field to expand into an object field. If set to *, all top-level fields will be expanded.
        /// </summary>
        [Input("field", required: true)]
        public string Field { get; set; } = null!;

        /// <summary>
        /// Conditionally execute the processor
        /// </summary>
        [Input("if")]
        public string? If { get; set; }

        /// <summary>
        /// Ignore failures for the processor.
        /// </summary>
        [Input("ignoreFailure")]
        public bool? IgnoreFailure { get; set; }

        [Input("onFailures")]
        private List<string>? _onFailures;

        /// <summary>
        /// Handle failures for the processor.
        /// </summary>
        public List<string> OnFailures
        {
            get => _onFailures ?? (_onFailures = new List<string>());
            set => _onFailures = value;
        }

        /// <summary>
        /// Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
        /// </summary>
        [Input("override")]
        public bool? Override { get; set; }

        /// <summary>
        /// The field that contains the field to expand.
        /// </summary>
        [Input("path")]
        public string? Path { get; set; }

        /// <summary>
        /// Identifier for the processor.
        /// </summary>
        [Input("tag")]
        public string? Tag { get; set; }

        public ElasticsearchIngestProcessorDotExpanderArgs()
        {
        }
    }

    public sealed class ElasticsearchIngestProcessorDotExpanderInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// Description of the processor.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The field to expand into an object field. If set to *, all top-level fields will be expanded.
        /// </summary>
        [Input("field", required: true)]
        public Input<string> Field { get; set; } = null!;

        /// <summary>
        /// Conditionally execute the processor
        /// </summary>
        [Input("if")]
        public Input<string>? If { get; set; }

        /// <summary>
        /// Ignore failures for the processor.
        /// </summary>
        [Input("ignoreFailure")]
        public Input<bool>? IgnoreFailure { get; set; }

        [Input("onFailures")]
        private InputList<string>? _onFailures;

        /// <summary>
        /// Handle failures for the processor.
        /// </summary>
        public InputList<string> OnFailures
        {
            get => _onFailures ?? (_onFailures = new InputList<string>());
            set => _onFailures = value;
        }

        /// <summary>
        /// Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
        /// </summary>
        [Input("override")]
        public Input<bool>? Override { get; set; }

        /// <summary>
        /// The field that contains the field to expand.
        /// </summary>
        [Input("path")]
        public Input<string>? Path { get; set; }

        /// <summary>
        /// Identifier for the processor.
        /// </summary>
        [Input("tag")]
        public Input<string>? Tag { get; set; }

        public ElasticsearchIngestProcessorDotExpanderInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class ElasticsearchIngestProcessorDotExpanderResult
    {
        /// <summary>
        /// Description of the processor.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// The field to expand into an object field. If set to *, all top-level fields will be expanded.
        /// </summary>
        public readonly string Field;
        /// <summary>
        /// Internal identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Conditionally execute the processor
        /// </summary>
        public readonly string? If;
        /// <summary>
        /// Ignore failures for the processor.
        /// </summary>
        public readonly bool? IgnoreFailure;
        /// <summary>
        /// JSON representation of this data source.
        /// </summary>
        public readonly string Json;
        /// <summary>
        /// Handle failures for the processor.
        /// </summary>
        public readonly ImmutableArray<string> OnFailures;
        /// <summary>
        /// Controls the behavior when there is already an existing nested object that conflicts with the expanded field.
        /// </summary>
        public readonly bool? Override;
        /// <summary>
        /// The field that contains the field to expand.
        /// </summary>
        public readonly string? Path;
        /// <summary>
        /// Identifier for the processor.
        /// </summary>
        public readonly string? Tag;

        [OutputConstructor]
        private ElasticsearchIngestProcessorDotExpanderResult(
            string? description,

            string field,

            string id,

            string? @if,

            bool? ignoreFailure,

            string json,

            ImmutableArray<string> onFailures,

            bool? @override,

            string? path,

            string? tag)
        {
            Description = description;
            Field = field;
            Id = id;
            If = @if;
            IgnoreFailure = ignoreFailure;
            Json = json;
            OnFailures = onFailures;
            Override = @override;
            Path = path;
            Tag = tag;
        }
    }
}
